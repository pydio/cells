{
  "access.gateway": {
    "dialog/CrossWsDropDialog.js": [
      {
        "description": "",
        "displayName": "CrossWsContent",
        "methods": [
          {
            "name": "move",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "targetNode",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "share",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      },
      {
        "description": "",
        "methods": [
          {
            "name": "getButtons",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "updater",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "pydio": {
            "type": {
              "name": "instanceOf",
              "value": "Pydio"
            },
            "required": false,
            "description": ""
          },
          "selection": {
            "type": {
              "name": "instanceOf",
              "value": "PydioDataModel"
            },
            "required": false,
            "description": ""
          },
          "dialogIsModal": {
            "defaultValue": {
              "value": "false",
              "computed": false
            },
            "required": false
          },
          "dialogSize": {
            "defaultValue": {
              "value": "'sm'",
              "computed": false
            },
            "required": false
          },
          "dialogPadding": {
            "defaultValue": {
              "value": "0",
              "computed": false
            },
            "required": false
          }
        }
      }
    ],
    "dialog/OtherEditorPickerDialog.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "getButtons",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "updater",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "findActiveEditors",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "mime",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "clearAssociations",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "selectEditor",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "editor",
                "type": null
              },
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "pydio": {
            "type": {
              "name": "instanceOf",
              "value": "Pydio"
            },
            "required": false,
            "description": ""
          },
          "selection": {
            "type": {
              "name": "instanceOf",
              "value": "PydioDataModel"
            },
            "required": false,
            "description": ""
          },
          "dialogTitleId": {
            "defaultValue": {
              "value": "'openother.2'",
              "computed": false
            },
            "required": false
          },
          "dialogIsModal": {
            "defaultValue": {
              "value": "false",
              "computed": false
            },
            "required": false
          },
          "dialogSize": {
            "defaultValue": {
              "value": "'sm'",
              "computed": false
            },
            "required": false
          },
          "dialogPadding": {
            "defaultValue": {
              "value": "0",
              "computed": false
            },
            "required": false
          }
        }
      }
    ],
    "dialog/TreeDialog.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "submit",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "getCurrentDataModel",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onNodeSelected",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "n",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "createNewFolder",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "handleRepositoryChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "index",
                "type": null
              },
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "isMove": {
            "type": {
              "name": "bool"
            },
            "required": true,
            "description": ""
          },
          "submitValue": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": ""
          },
          "dialogTitle": {
            "defaultValue": {
              "value": "'Copy/Move'",
              "computed": false
            },
            "required": false
          },
          "dialogIsModal": {
            "defaultValue": {
              "value": "true",
              "computed": false
            },
            "required": false
          },
          "dialogScrollBody": {
            "defaultValue": {
              "value": "true",
              "computed": false
            },
            "required": false
          }
        }
      }
    ],
    "dialog/UploadDialog.js": [
      {
        "description": "",
        "displayName": "TopBar",
        "methods": []
      },
      {
        "description": "",
        "methods": [],
        "props": {
          "dialogTitle": {
            "defaultValue": {
              "value": "''",
              "computed": false
            },
            "required": false
          },
          "dialogSize": {
            "defaultValue": {
              "value": "mobile ? 'md' : 'lg'",
              "computed": false
            },
            "required": false
          },
          "dialogPadding": {
            "defaultValue": {
              "value": "false",
              "computed": false
            },
            "required": false
          },
          "dialogIsModal": {
            "defaultValue": {
              "value": "false",
              "computed": false
            },
            "required": false
          }
        }
      }
    ]
  },
  "access.settings": {
    "AdminComponents/board/AdminDashboard.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "dmChangesToState",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "openEditor",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "openRightPane",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "serializedComponent",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "registerRightPaneCloseCallback",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "callback",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "closeRightPane",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "computeLeftIsDocked",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "routeMasterPanel",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              },
              {
                "name": "selectedNode",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "backToHome",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "pydio": {
            "type": {
              "name": "instanceOf",
              "value": "Pydio"
            },
            "required": true,
            "description": ""
          }
        }
      }
    ],
    "AdminComponents/board/AdminLeftNav.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "checkForUpdates",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "onMenuChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "rootNode": {
            "type": {
              "name": "instanceOf",
              "value": "AjxpNode"
            },
            "required": false,
            "description": ""
          },
          "contextNode": {
            "type": {
              "name": "instanceOf",
              "value": "AjxpNode"
            },
            "required": false,
            "description": ""
          },
          "dataModel": {
            "type": {
              "name": "instanceOf",
              "value": "PydioDataModel"
            },
            "required": false,
            "description": ""
          }
        }
      },
      {
        "description": "",
        "displayName": "AdminLeftNav",
        "methods": []
      }
    ],
    "AdminComponents/board/AdvancedDashboard.js": [
      {
        "description": "",
        "displayName": "AdvancedDashboard",
        "methods": [
          {
            "name": "getDefaultCards",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ],
    "AdminComponents/board/GroupAdminDashboard.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "renderLink",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "AdminComponents/board/Header.js": [
      {
        "description": "",
        "displayName": "Header",
        "methods": []
      }
    ],
    "AdminComponents/board/SimpleDashboard.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "getOpenIcon",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "link",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getDocButton",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "icon",
                "type": null
              },
              {
                "name": "message",
                "type": null
              },
              {
                "name": "link",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "welcomeClick",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "e",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "AdminComponents/board/SubHeader.js": [
      {
        "description": "",
        "displayName": "SubHeader",
        "methods": []
      }
    ],
    "AdminComponents/board/TabBoard.js": [
      {
        "description": "",
        "displayName": "TabBoard",
        "methods": [
          {
            "name": "onTabChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "handleLogToolsChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "state",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "handleLoadingStatusChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "status",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "AdminComponents/cards/GraphBadge.js": [
      {
        "description": "",
        "displayName": "GraphBadge",
        "methods": [
          {
            "name": "triggerReload",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "onLoadedData",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "receivedData",
                "type": null
              },
              {
                "name": "preparedDataSet",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "queryName": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "defaultInterval": {
            "type": {
              "name": "number"
            },
            "required": false,
            "description": ""
          },
          "figure": {
            "type": {
              "name": "number"
            },
            "required": false,
            "description": ""
          },
          "frequency": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "legend": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "style": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "className": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "AdminComponents/cards/GraphCard.js": [
      {
        "description": "",
        "displayName": "GraphCard",
        "methods": [
          {
            "name": "triggerReload",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "onPaginatorChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "start",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onGraphDataLoaded",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "data",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "queryName": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "title": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "defaultInterval": {
            "type": {
              "name": "number"
            },
            "required": false,
            "description": ""
          },
          "style": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "{\n    width:540, height:350, zDepth:1\n}",
              "computed": false
            }
          },
          "className": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "zDepth": {
            "type": {
              "name": "number"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "AdminComponents/cards/QuickLinks.js": [
      {
        "description": "",
        "displayName": "QuickLinks",
        "methods": [
          {
            "name": "menuClicked",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "index",
                "type": null
              },
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "removeLink",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "payload",
                "type": null
              },
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "toggleEdit",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ],
    "AdminComponents/cards/RecentLogs.js": [
      {
        "description": "",
        "displayName": "RecentLogs",
        "methods": [
          {
            "name": "loadLogs",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "changeFilter",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "triggerReload",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ],
    "AdminComponents/cards/ServicesStatus.js": [
      {
        "description": "",
        "displayName": "ServerStatus",
        "methods": [
          {
            "name": "loadStatus",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "triggerReload",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ],
    "AdminComponents/cards/ToDoList.js": [
      {
        "description": "",
        "displayName": "ToDoList",
        "methods": [
          {
            "name": "addTask",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "handleNewTaskKeyDown",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "removeTask",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "index",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "changeTaskState",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "index",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "title": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "AdminComponents/cards/WelcomePanel.js": [
      {
        "description": "",
        "displayName": "WelcomePanel",
        "methods": []
      }
    ],
    "AdminComponents/graph/GraphPaginator.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "makeLink",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "type",
                "type": null
              },
              {
                "name": "links",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "start": {
            "type": {
              "name": "number"
            },
            "required": true,
            "description": ""
          },
          "onRangeChange": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": ""
          },
          "links": {
            "type": {
              "name": "array"
            },
            "required": false,
            "description": ""
          },
          "pickerOnShow": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "pickerOnDismiss": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "AdminComponents/graph/RemoteGraphLine.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "triggerReload",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "loadData",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "parseData",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "queryName",
                "type": null
              },
              {
                "name": "jsonData",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "makeDataSet",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "label",
                "type": null
              },
              {
                "name": "data",
                "type": null
              },
              {
                "name": "index",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "resizeChart",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "queryName": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "start": {
            "type": {
              "name": "number"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "0",
              "computed": false
            }
          },
          "frequency": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "'H'",
              "computed": false
            }
          },
          "onDataLoaded": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "function(){}",
              "computed": false
            }
          },
          "width": {
            "type": {
              "name": "number"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "300",
              "computed": false
            }
          },
          "height": {
            "type": {
              "name": "number"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "200",
              "computed": false
            }
          },
          "chartOptions": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "{\n    responsive:true,\n    useCSSTransforms:false,\n    maintainAspectRatio:false,\n    tooltipTemplate: \"<%= value %> <%= datasetLabel %>\",\n    multiTooltipTemplate: \"<%= value %> <%= datasetLabel %>\"\n}",
              "computed": false
            }
          },
          "filters": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "AdminComponents/util/CodeMirrorField.js": [
      {
        "description": "",
        "displayName": "CodeEditorField",
        "methods": [
          {
            "name": "jsAutoComplete",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "cm",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "handleChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "AdminComponents/util/NavigationHelper.js": [
      {
        "description": "",
        "displayName": "renderItem",
        "methods": []
      }
    ],
    "AdminLogs/board/LogBoard.js": [
      {
        "description": "",
        "displayName": "LogBoard",
        "methods": [
          {
            "name": "handleLogToolsChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "newState",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "handleReload",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "handleDecrPage",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "handleIncrPage",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "handleLoadingStatusChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "status",
                "type": null
              },
              {
                "name": "resultsCount",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "dataModel": {
            "type": {
              "name": "instanceOf",
              "value": "PydioDataModel"
            },
            "required": true,
            "description": ""
          }
        }
      }
    ],
    "AdminLogs/board/LogDetail.js": [
      {
        "description": "",
        "displayName": "GenericLine",
        "methods": []
      },
      {
        "description": "",
        "displayName": "LogDetail",
        "methods": [
          {
            "name": "attachClipboard",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "detachClipboard",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ],
    "AdminLogs/board/LogTable.js": [
      {
        "description": "",
        "displayName": "LogTable",
        "methods": [
          {
            "name": "initRootSpans",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "logs",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "openSpans",
            "docblock": "@return []{*}",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "[]{*}",
              "type": null
            },
            "description": null
          },
          {
            "name": "load",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "service",
                "type": null
              },
              {
                "name": "query",
                "type": null
              },
              {
                "name": "page",
                "type": null
              },
              {
                "name": "size",
                "type": null
              },
              {
                "name": "contentType",
                "type": null
              },
              {
                "name": "onLoadingStatusChange",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "date": {
            "type": {
              "name": "instanceOf",
              "value": "Date"
            },
            "required": true,
            "description": ""
          },
          "endDate": {
            "type": {
              "name": "instanceOf",
              "value": "Date"
            },
            "required": false,
            "description": ""
          },
          "filter": {
            "type": {
              "name": "string"
            },
            "required": true,
            "description": ""
          }
        }
      }
    ],
    "AdminLogs/board/LogTools.js": [
      {
        "description": "",
        "displayName": "LogTools",
        "methods": [
          {
            "name": "publishStateChange",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "handleFilterChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "val",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "handleDateChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "date",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "handleEndDateChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "date",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "handleExport",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "format",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "handleFilterMode",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "filterMode",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "AdminPeople/board/Dashboard.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "componentWillUnmounnt",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "reloadList",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "renderListUserAvatar",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "renderListEntryFirstLine",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "renderListEntrySecondLine",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "renderListEntrySelector",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "displaySearchResults",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "searchTerm",
                "type": null
              },
              {
                "name": "searchDataModel",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "hideSearchResults",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "createUserAction",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "createGroupAction",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "openUsersImporter",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "openRoleEditor",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              },
              {
                "name": "initialSection",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "closeRoleEditor",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "deleteAction",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "renderNodeActions",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "filterNodes",
            "docblock": "Filter nodes\n@param node\n@return {boolean}",
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "description": null,
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "boolean"
              }
            },
            "description": "Filter nodes"
          },
          {
            "name": "applyFilter",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "profile",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "dataModel": {
            "type": {
              "name": "instanceOf",
              "value": "PydioDataModel"
            },
            "required": true,
            "description": ""
          },
          "rootNode": {
            "type": {
              "name": "instanceOf",
              "value": "AjxpNode"
            },
            "required": true,
            "description": ""
          },
          "currentNode": {
            "type": {
              "name": "instanceOf",
              "value": "AjxpNode"
            },
            "required": true,
            "description": ""
          },
          "openEditor": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": ""
          }
        }
      }
    ],
    "AdminPeople/board/PoliciesBoard.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "groupByResourcesGroups",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "policies",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "listPolicies",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "savePolicy",
            "docblock": "@param policy IdmPolicyGroup\n@param revertOnly",
            "modifiers": [],
            "params": [
              {
                "name": "policy",
                "description": "IdmPolicyGroup",
                "type": null
              },
              {
                "name": "revertOnly",
                "description": null,
                "type": null
              }
            ],
            "returns": null,
            "description": null
          },
          {
            "name": "deletePolicy",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "policy",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "createPolicy",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "openPopover",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "handleRequestClose",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "handleChangePolicyType",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "index",
                "type": null
              },
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "dataModel": {
            "type": {
              "name": "instanceOf",
              "value": "PydioDataModel"
            },
            "required": true,
            "description": ""
          },
          "rootNode": {
            "type": {
              "name": "instanceOf",
              "value": "Node"
            },
            "required": true,
            "description": ""
          },
          "currentNode": {
            "type": {
              "name": "instanceOf",
              "value": "Node"
            },
            "required": true,
            "description": ""
          },
          "openEditor": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": ""
          },
          "openRightPane": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": ""
          },
          "closeRightPane": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": ""
          },
          "readonly": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "AdminPeople/board/RolesDashboard.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "load",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "openTableRows",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "rows",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "openRoleEditor",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "idmRole",
                "type": null
              },
              {
                "name": "initialSection",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "closeRoleEditor",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "deleteAction",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "roleId",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "createRoleAction",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "computeTableData",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "searchRoleString",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "AdminPeople/board/UsersSearchBox.js": [
      {
        "description": "Search input building a set of query parameters and calling\nthe callbacks to display / hide results",
        "displayName": "UsersSearchBox",
        "methods": [
          {
            "name": "displayResultsState",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "hideResultsState",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "triggerSearch",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "keyDown",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "AdminPeople/editor/Editor.js": [
      {
        "description": "",
        "displayName": "Editor",
        "methods": [
          {
            "name": "nodeToState",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "loadRoleData",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "showLoader",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getMessage",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "messageId",
                "type": null
              },
              {
                "name": "namespace",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getPydioRoleMessage",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "messageId",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getRootMessage",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "messageId",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "setSelectedPane",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "key",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "showModal",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "modal",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "hideModal",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "logAction",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "message",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "hideSnackBar",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "node": {
            "type": {
              "name": "instanceOf",
              "value": "AjxpNode"
            },
            "required": false,
            "description": ""
          },
          "closeEditor": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "registerCloseCallback": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          }
        },
        "context": {
          "pydio": {
            "type": {
              "name": "instanceOf",
              "value": "Pydio"
            },
            "required": false
          }
        },
        "childContext": {
          "messages": {
            "type": {
              "name": "object"
            },
            "required": false
          },
          "getMessage": {
            "type": {
              "name": "func"
            },
            "required": false
          },
          "getPydioRoleMessage": {
            "type": {
              "name": "func"
            },
            "required": false
          },
          "getRootMessage": {
            "type": {
              "name": "func"
            },
            "required": false
          }
        }
      }
    ],
    "AdminPeople/editor/acl/PagesAcls.js": [
      {
        "description": "",
        "displayName": "PagesAcls",
        "methods": []
      }
    ],
    "AdminPeople/editor/acl/PermissionMaskEditor.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "dmObserver",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "recursiveLoadNodesWithChildren",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              },
              {
                "name": "crtMask",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "recursiveClearNodeValues",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              },
              {
                "name": "values",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onCheckboxCheck",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              },
              {
                "name": "checkboxName",
                "type": null
              },
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "roleAclObject",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "checkboxesComputeStatus",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "role": {
            "type": {
              "name": "instanceOf",
              "value": "Role"
            },
            "required": false,
            "description": ""
          },
          "workspace": {
            "type": {
              "name": "instanceOf",
              "value": "IdmWorkspace"
            },
            "required": false,
            "description": ""
          },
          "globalWorkspacePermissions": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "showGlobalPermissions": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "onGlobalPermissionsChange": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "onNodesChange": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "showModal": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "hideModal": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "AdminPeople/editor/acl/RightsSelector.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "getAcl",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "updateAcl",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "handleChangePolicy",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "acl": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "disabled": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "hideDeny": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "hideLabels": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "advancedAcl": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "onChange": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "AdminPeople/editor/acl/WorkspacesAcls.js": [
      {
        "description": "",
        "displayName": "WorkspacesAcls",
        "methods": []
      }
    ],
    "AdminPeople/editor/info/GroupInfo.js": [
      {
        "description": "",
        "displayName": "GroupInfo",
        "methods": [
          {
            "name": "getPydioRoleMessage",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "messageId",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onParameterChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "paramName",
                "type": null
              },
              {
                "name": "newValue",
                "type": null
              },
              {
                "name": "oldValue",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "AdminPeople/editor/info/RoleInfo.js": [
      {
        "description": "",
        "displayName": "RoleInfo",
        "methods": [
          {
            "name": "getPydioRoleMessage",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "messageId",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onParameterChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "paramName",
                "type": null
              },
              {
                "name": "newValue",
                "type": null
              },
              {
                "name": "oldValue",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getParameterByName",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "paramName",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "AdminPeople/editor/info/UserActivity.js": [
      {
        "description": "",
        "displayName": "UserActivity",
        "methods": [
          {
            "name": "loadActivity",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ],
    "AdminPeople/editor/info/UserInfo.js": [
      {
        "description": "",
        "displayName": "UserInfo",
        "methods": [
          {
            "name": "getBinaryContext",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "getPydioRoleMessage",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "messageId",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onParameterChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "paramName",
                "type": null
              },
              {
                "name": "newValue",
                "type": null
              },
              {
                "name": "oldValue",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "buttonCallback",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "action",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "AdminPeople/editor/panel/SharesList.js": [
      {
        "description": "",
        "methods": [],
        "props": {
          "pydio": {
            "type": {
              "name": "instanceOf",
              "value": "Pydio"
            },
            "required": false,
            "description": ""
          },
          "userId": {
            "type": {
              "name": "string"
            },
            "required": true,
            "description": ""
          },
          "userData": {
            "type": {
              "name": "object"
            },
            "required": true,
            "description": ""
          }
        }
      }
    ],
    "AdminPeople/editor/params/ParameterCreate.js": [
      {
        "description": "",
        "displayName": "ThemedTitle",
        "methods": []
      },
      {
        "description": "",
        "methods": [
          {
            "name": "setSelection",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "plugin",
                "type": null
              },
              {
                "name": "type",
                "type": null
              },
              {
                "name": "param",
                "type": null
              },
              {
                "name": "attributes",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "createParameter",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "workspaceScope": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "showModal": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "hideModal": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "pluginsFilter": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "roleType": {
            "type": {
              "name": "enum",
              "value": [
                {
                  "value": "'user'",
                  "computed": false
                },
                {
                  "value": "'group'",
                  "computed": false
                },
                {
                  "value": "'role'",
                  "computed": false
                }
              ]
            },
            "required": false,
            "description": ""
          },
          "createParameter": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "dialogPadding": {
            "defaultValue": {
              "value": "0",
              "computed": false
            },
            "required": false
          },
          "dialogTitle": {
            "defaultValue": {
              "value": "''",
              "computed": false
            },
            "required": false
          },
          "dialogSize": {
            "defaultValue": {
              "value": "'md'",
              "computed": false
            },
            "required": false
          }
        }
      }
    ],
    "AdminPeople/editor/params/ParameterEntry.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "onChangeParameter",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "newValue",
                "type": null
              },
              {
                "name": "oldValue",
                "type": null
              },
              {
                "name": "additionalFormData",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "deleteParameter",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "overrideParameter",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "onInputEditMode",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "editMode",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "toggleEditMode",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "toggleActionStatus",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "status",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "acl": {
            "type": {
              "name": "instanceOf",
              "value": "IdmACL"
            },
            "required": false,
            "description": ""
          },
          "role": {
            "type": {
              "name": "instanceOf",
              "value": "Role"
            },
            "required": false,
            "description": ""
          },
          "actions": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "parameters": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "inherited": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "AdminPeople/editor/params/ParametersPanel.js": [
      {
        "description": "",
        "displayName": "ParametersPanel",
        "methods": [
          {
            "name": "onCreateParameter",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "scope",
                "type": null
              },
              {
                "name": "type",
                "type": null
              },
              {
                "name": "pluginName",
                "type": null
              },
              {
                "name": "paramName",
                "type": null
              },
              {
                "name": "attributes",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "addParameter",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "scope",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "AdminPeople/editor/params/ParametersPicker.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "filter",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "select",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "plugin",
                "type": null
              },
              {
                "name": "type",
                "type": null
              },
              {
                "name": "param",
                "type": null
              },
              {
                "name": "attributes",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "allParameters": {
            "type": {
              "name": "object"
            },
            "required": true,
            "description": ""
          },
          "allActions": {
            "type": {
              "name": "object"
            },
            "required": true,
            "description": ""
          },
          "onSelection": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": ""
          },
          "getMessage": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "actionsPrefix": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "'[a] '",
              "computed": false
            }
          },
          "parametersPrefix": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "''",
              "computed": false
            }
          },
          "initialSelection": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "AdminPeople/editor/user/UserPasswordDialog.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "onChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "submit",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "pydio": {
            "type": {
              "name": "instanceOf",
              "value": "Pydio"
            },
            "required": false,
            "description": ""
          },
          "user": {
            "type": {
              "name": "instanceOf",
              "value": "User"
            },
            "required": false,
            "description": ""
          },
          "dialogTitle": {
            "defaultValue": {
              "value": "pydio.MessageHash['role_editor.25']",
              "computed": true
            },
            "required": false
          },
          "dialogSize": {
            "defaultValue": {
              "value": "'sm'",
              "computed": false
            },
            "required": false
          }
        }
      }
    ],
    "AdminPeople/editor/user/UserRolesPicker.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "onChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "e",
                "type": null
              },
              {
                "name": "selectedIndex",
                "type": null
              },
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "remove",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "orderUpdated",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "oldId",
                "type": null
              },
              {
                "name": "newId",
                "type": null
              },
              {
                "name": "currentValues",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "roles": {
            "type": {
              "name": "array"
            },
            "required": false,
            "description": ""
          },
          "addRole": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "removeRole": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "switchRoles": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "AdminPeople/forms/CreateRoleOrGroupForm.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "getTitle",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "getPadding",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "getSize",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "dismiss",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "submit",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "update",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "state",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "type": {
            "type": {
              "name": "enum",
              "value": [
                {
                  "value": "'group'",
                  "computed": false
                },
                {
                  "value": "'user'",
                  "computed": false
                },
                {
                  "value": "'role'",
                  "computed": false
                }
              ]
            },
            "required": false,
            "description": ""
          },
          "roleNode": {
            "type": {
              "name": "instanceOf",
              "value": "Node"
            },
            "required": false,
            "description": ""
          },
          "openRoleEditor": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "AdminPeople/forms/CreateUserForm.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "checkPassword",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "checkLogin",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "e",
                "type": null
              },
              {
                "name": "v",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "submit",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "dataModel": {
            "type": {
              "name": "instanceOf",
              "value": "PydioDataModel"
            },
            "required": false,
            "description": ""
          },
          "openRoleEditor": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "dialogSize": {
            "defaultValue": {
              "value": "'sm'",
              "computed": false
            },
            "required": false
          },
          "dialogTitleId": {
            "defaultValue": {
              "value": "'ajxp_admin.user.19'",
              "computed": false
            },
            "required": false
          }
        }
      }
    ],
    "AdminPeople/policies/Policy.js": [
      {
        "description": "",
        "displayName": "Policy",
        "methods": [
          {
            "name": "onNameChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onDescriptionChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onRuleChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "rule",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onRemoveRule",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "rule",
                "type": null
              },
              {
                "name": "dontSave",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onDeletePolicy",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "onAddRule",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "ruleLabel",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "AdminPeople/policies/Rule.js": [
      {
        "description": "",
        "displayName": "Rule",
        "methods": [
          {
            "name": "openEditor",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "closeEditor",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "editor",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "removeRule",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ],
    "AdminPeople/policies/editor/Actions.js": [
      {
        "description": "",
        "displayName": "Actions",
        "methods": [
          {
            "name": "onChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "newValues",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "AdminPeople/policies/editor/ChipValues.js": [
      {
        "description": "",
        "displayName": "ChipValues",
        "methods": [
          {
            "name": "addChip",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "newValue",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "deleteChip",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "chipValue",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "AdminPeople/policies/editor/Conditions.js": [
      {
        "description": "",
        "displayName": "Conditions",
        "methods": [
          {
            "name": "onConditionAdd",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "fieldName",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onConditionRemove",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "fieldName",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "fieldName",
                "type": null
              },
              {
                "name": "event",
                "type": null
              },
              {
                "name": "newValue",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "AdminPeople/policies/editor/Effect.js": [
      {
        "description": "",
        "displayName": "Effect",
        "methods": [
          {
            "name": "onChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "newValue",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "AdminPeople/policies/editor/InlineLabel.js": [
      {
        "description": "",
        "displayName": "InlineLabel",
        "methods": [
          {
            "name": "onChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onEnter",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "cancel",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "open",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "AdminPeople/policies/editor/Label.js": [
      {
        "description": "",
        "displayName": "Label",
        "methods": [
          {
            "name": "onChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "newValue",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "AdminPeople/policies/editor/Resources.js": [
      {
        "description": "",
        "displayName": "Resources",
        "methods": [
          {
            "name": "onChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "newValues",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "AdminPeople/policies/editor/RuleEditor.js": [
      {
        "description": "",
        "displayName": "RuleEditor",
        "methods": [
          {
            "name": "isDirty",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "isValid",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "isCreate",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "onChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "rule",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "revert",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "save",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ],
    "AdminPeople/policies/editor/Subjects.js": [
      {
        "description": "",
        "displayName": "Subjects",
        "methods": [
          {
            "name": "onChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "newValues",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "AdminPeople/policies/editor/ValuesOrRegexp.js": [
      {
        "description": "",
        "displayName": "ValuesOrRegexp",
        "methods": [
          {
            "name": "onItemTouchTap",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onTextFieldSubmitted",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "cancelTextField",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ],
    "AdminPlugins/core/CoreAndPluginsDashboard.js": [
      {
        "description": "",
        "displayName": "CoreAndPluginsDashboard",
        "methods": []
      }
    ],
    "AdminPlugins/core/MailerTest.js": [
      {
        "description": "",
        "displayName": "MailerTest",
        "methods": []
      }
    ],
    "AdminPlugins/core/Manager.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "reload",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ],
    "AdminPlugins/core/PluginEditor.js": [
      {
        "description": "Editor for a given plugin. By default, displays documentation in a left column panel,\nand plugin parameters as form cards on the right.\nMay take additionalPanes to be appended to the form cards.",
        "methods": [
          {
            "name": "loadPluginData",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "plugId",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "computeButtons",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "setDirty",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "externalSetDirty",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "onChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "formValues",
                "type": null
              },
              {
                "name": "dirty",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "save",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "revert",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "parameterHasHelper",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "paramName",
                "type": null
              },
              {
                "name": "testPluginId",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "showHelper",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "helperData",
                "type": null
              },
              {
                "name": "testPluginId",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "closeHelper",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "helperUpdateValues",
            "docblock": "External helper can pass a full set of values and update them\n@param newValues",
            "modifiers": [],
            "params": [
              {
                "name": "newValues",
                "description": null,
                "type": null
              }
            ],
            "returns": null,
            "description": "External helper can pass a full set of values and update them"
          },
          {
            "name": "toggleDocPane",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "monitorMainPaneScrolling",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "pluginId": {
            "type": {
              "name": "string"
            },
            "required": true,
            "description": ""
          },
          "close": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "style": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "className": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "additionalPanes": {
            "type": {
              "name": "shape",
              "value": {
                "top": {
                  "name": "array",
                  "required": false
                },
                "bottom": {
                  "name": "array",
                  "required": false
                }
              }
            },
            "required": false,
            "description": ""
          },
          "docAsAdditionalPane": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "additionalDescription": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "registerCloseCallback": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "onBeforeSave": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "onAfterSave": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "onRevert": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "onDirtyChange": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "AdminPlugins/core/ServiceEditor.js": [
      {
        "description": "Editor for a given plugin. By default, displays documentation in a left column panel,\nand plugin parameters as form cards on the right.\nMay take additionalPanes to be appended to the form cards.",
        "methods": [
          {
            "name": "externalSetDirty",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "save",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "revert",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "parameterHasHelper",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "paramName",
                "type": null
              },
              {
                "name": "testPluginId",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "showHelper",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "helperData",
                "type": null
              },
              {
                "name": "testPluginId",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "closeHelper",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "helperUpdateValues",
            "docblock": "External helper can pass a full set of values and update them\n@param newValues",
            "modifiers": [],
            "params": [
              {
                "name": "newValues",
                "description": null,
                "type": null
              }
            ],
            "returns": null,
            "description": "External helper can pass a full set of values and update them"
          },
          {
            "name": "toggleDocPane",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "monitorMainPaneScrolling",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "serviceName": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "rootNode": {
            "type": {
              "name": "instanceOf",
              "value": "AjxpNode"
            },
            "required": true,
            "description": ""
          },
          "close": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "style": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "className": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "additionalPanes": {
            "type": {
              "name": "shape",
              "value": {
                "top": {
                  "name": "array",
                  "required": false
                },
                "bottom": {
                  "name": "array",
                  "required": false
                }
              }
            },
            "required": false,
            "description": ""
          },
          "docAsAdditionalPane": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "additionalDescription": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "registerCloseCallback": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "onBeforeSave": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "onAfterSave": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "onRevert": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "onDirtyChange": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "AdminPlugins/core/ServiceExposedConfigs.js": [
      {
        "description": "",
        "displayName": "ServiceExposedConfigs",
        "methods": [
          {
            "name": "configFormsDiscoveryWithHttpInfo",
            "docblock": "@param {String} serviceName\n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestDiscoveryResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "serviceName",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestDiscoveryResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": null
          },
          {
            "name": "loadServiceData",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "serviceId",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "save",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "revert",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "onChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "formValues",
                "type": null
              },
              {
                "name": "dirty",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "AdminPlugins/docs/JSDocsDashboard.js": [
      {
        "description": "",
        "displayName": "JSDocsPanel",
        "methods": [
          {
            "name": "onSearch",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      },
      {
        "description": "",
        "displayName": "ClassPanel",
        "methods": []
      }
    ],
    "AdminPlugins/docs/OpenApiDashboard.js": [
      {
        "description": "",
        "displayName": "OpenApiDashboard",
        "methods": [
          {
            "name": "requestInterceptor",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "request",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "AdminPlugins/updater/UpdaterDashboard.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "checkForUpgrade",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "upgradeFinished",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "performUpgrade",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "onCheckStateChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "index",
                "type": null
              },
              {
                "name": "value",
                "type": null
              },
              {
                "name": "pack",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "AdminPlugins/updater/UpgraderWizard.js": [
      {
        "description": "",
        "displayName": "UpgraderWizard",
        "methods": [
          {
            "name": "dismiss",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "next",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "step",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "findVersion",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "licenseKey",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "applyUpgrade",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "version",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "upgradeFinished",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ],
    "AdminScheduler/board/Dashboard.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "load",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "hideLoading",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "loadOne",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "jobID",
                "type": null
              },
              {
                "name": "hideLoading",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "selectRows",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "rows",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "showTaskCreator",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "extractRowsInfo",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "jobs",
                "type": null
              },
              {
                "name": "m",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "AdminScheduler/board/JobBoard.js": [
      {
        "description": "",
        "displayName": "JobBoard",
        "methods": [
          {
            "name": "runOnce",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "renderActions",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "row",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onSelectTaskRows",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "rows",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "deleteSelection",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "deleteAll",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ],
    "AdminScheduler/board/JobSchedule.js": [
      {
        "description": "",
        "displayName": "JobSchedule",
        "methods": [
          {
            "name": "updateJob",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "parseIso8601",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "makeIso8601FromState",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "state",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "T",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "id",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "changeFrequency",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "f",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "readableString",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "short",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "AdminScheduler/board/TaskActivity.js": [
      {
        "description": "",
        "displayName": "TaskActivity",
        "methods": [
          {
            "name": "loadActivity",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "props",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "AdminServices/board/Dashboard.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "onDetailsChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onFilterChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "index",
                "type": null
              },
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onPeerFilterChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "index",
                "type": null
              },
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "reloadList",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "onUpdatePeers",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "peers",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "dataModel": {
            "type": {
              "name": "instanceOf",
              "value": "PydioDataModel"
            },
            "required": true,
            "description": ""
          },
          "rootNode": {
            "type": {
              "name": "instanceOf",
              "value": "AjxpNode"
            },
            "required": true,
            "description": ""
          },
          "currentNode": {
            "type": {
              "name": "instanceOf",
              "value": "AjxpNode"
            },
            "required": true,
            "description": ""
          },
          "openEditor": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": ""
          },
          "openRightPane": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": ""
          },
          "closeRightPane": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": ""
          },
          "pydio": {
            "type": {
              "name": "instanceOf",
              "value": "Pydio"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "AdminServices/board/ServiceCard.js": [
      {
        "description": "",
        "displayName": "ServiceCard",
        "methods": [
          {
            "name": "renderServiceLine",
            "docblock": "@param service Object\n@param tag String\n@param showDescription boolean\n@param m Function\n@return {*}",
            "modifiers": [],
            "params": [
              {
                "name": "service",
                "description": "Object",
                "type": null
              },
              {
                "name": "tag",
                "description": "String",
                "type": null
              },
              {
                "name": "showDescription",
                "description": "boolean",
                "type": null
              },
              {
                "name": "m",
                "description": "Function",
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "mixed"
              }
            },
            "description": null
          }
        ]
      }
    ],
    "AdminServices/board/ServicesList.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "reload",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "load",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "renderListItem",
            "docblock": "@param service RestService\n@returns {XML}",
            "modifiers": [],
            "params": [
              {
                "name": "service",
                "description": "RestService",
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "XML"
              }
            },
            "description": null
          },
          {
            "name": "filterNodes",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "service",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "dataModel": {
            "type": {
              "name": "instanceOf",
              "value": "PydioDataModel"
            },
            "required": true,
            "description": ""
          },
          "rootNode": {
            "type": {
              "name": "instanceOf",
              "value": "AjxpNode"
            },
            "required": true,
            "description": ""
          },
          "currentNode": {
            "type": {
              "name": "instanceOf",
              "value": "AjxpNode"
            },
            "required": true,
            "description": ""
          },
          "filter": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "peerFilter": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "details": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "onUpdatePeers": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "AdminWorkspaces/board/DataSourcesBoard.js": [
      {
        "description": "",
        "displayName": "DataSourcesBoard",
        "methods": [
          {
            "name": "load",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "newDsName",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "closeEditor",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "openDataSource",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "dataSources",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "computeStatus",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "dataSource",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "openVersionPolicy",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "versionPolicies",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "createDataSource",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "dataModel": {
            "type": {
              "name": "instanceOf",
              "value": "PydioDataModel"
            },
            "required": true,
            "description": ""
          },
          "rootNode": {
            "type": {
              "name": "instanceOf",
              "value": "Node"
            },
            "required": true,
            "description": ""
          },
          "currentNode": {
            "type": {
              "name": "instanceOf",
              "value": "Node"
            },
            "required": true,
            "description": ""
          },
          "openEditor": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": ""
          },
          "openRightPane": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": ""
          },
          "closeRightPane": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": ""
          },
          "filter": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "versioningReadonly": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "AdminWorkspaces/board/EncryptionKeys.js": [
      {
        "description": "",
        "displayName": "EncryptionKeys",
        "methods": [
          {
            "name": "load",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "exportKey",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "createKey",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "deleteKey",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "keyId",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "importKey",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ],
    "AdminWorkspaces/board/MetadataBoard.js": [
      {
        "description": "",
        "displayName": "MetadataBoard",
        "methods": [
          {
            "name": "load",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "emptyNs",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "create",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "deleteNs",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "row",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "open",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "rows",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "close",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ],
    "AdminWorkspaces/board/VirtualNodes.js": [
      {
        "description": "",
        "displayName": "VirtualNodes",
        "methods": [
          {
            "name": "reload",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "createNode",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "handleTouchTap",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "handleRequestClose",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ],
    "AdminWorkspaces/board/WorkspaceList.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "reload",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "openTableRows",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "rows",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "computeTableData",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "dataModel": {
            "type": {
              "name": "instanceOf",
              "value": "PydioDataModel"
            },
            "required": true,
            "description": ""
          },
          "rootNode": {
            "type": {
              "name": "instanceOf",
              "value": "Node"
            },
            "required": true,
            "description": ""
          },
          "currentNode": {
            "type": {
              "name": "instanceOf",
              "value": "Node"
            },
            "required": true,
            "description": ""
          },
          "openSelection": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "advanced": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.boolean"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "AdminWorkspaces/board/WsDashboard.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "dirtyEditor",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "openWorkspace",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "workspace",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "closeWorkspace",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "showWorkspaceCreator",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "type",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "reloadWorkspaceList",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "dataModel": {
            "type": {
              "name": "instanceOf",
              "value": "PydioDataModel"
            },
            "required": true,
            "description": ""
          },
          "rootNode": {
            "type": {
              "name": "instanceOf",
              "value": "AjxpNode"
            },
            "required": true,
            "description": ""
          },
          "currentNode": {
            "type": {
              "name": "instanceOf",
              "value": "AjxpNode"
            },
            "required": true,
            "description": ""
          },
          "openEditor": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": ""
          },
          "openRightPane": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": ""
          },
          "closeRightPane": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": ""
          },
          "advanced": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.boolean"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "AdminWorkspaces/editor/DataSourceEditor.js": [
      {
        "description": "",
        "displayName": "DataSourceEditor",
        "methods": [
          {
            "name": "resetForm",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "deleteSource",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "saveSource",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "launchResync",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "toggleEncryption",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "confirmEncryption",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "context": {
          "messages": {
            "type": {
              "name": "object"
            },
            "required": false
          },
          "getMessage": {
            "type": {
              "name": "func"
            },
            "required": false
          }
        }
      }
    ],
    "AdminWorkspaces/editor/DataSourceLocalSelector.js": [
      {
        "description": "",
        "displayName": "AutocompleteTree",
        "methods": [
          {
            "name": "handleUpdateInput",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "searchText",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "handleNewRequest",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "chosenValue",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "loadValues",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "renderNode",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      },
      {
        "description": "",
        "displayName": "DataSourceLocalSelector",
        "methods": [
          {
            "name": "baseIsInvalid",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "path",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onPathChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "newValue",
                "type": null
              },
              {
                "name": "exists",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "AdminWorkspaces/editor/DsStorageSelector.js": [
      {
        "description": "",
        "displayName": "DsStorageType",
        "methods": []
      },
      {
        "description": "",
        "displayName": "DsStorageSelector",
        "methods": [
          {
            "name": "onChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "newValue",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "AdminWorkspaces/editor/MetaNamespace.js": [
      {
        "description": "",
        "displayName": "MetaNamespace",
        "methods": [
          {
            "name": "cloneNs",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "ns",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "updateType",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "updateName",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "save",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "getSelectionData",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "setSelectionData",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "newData",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "addSelectionValue",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "removeSelectionValue",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "key",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "renderSelectionBoard",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "togglePolicies",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "right",
                "type": null
              },
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "AdminWorkspaces/editor/VersionPolicyEditor.js": [
      {
        "description": "",
        "displayName": "VersionPolicyEditor",
        "methods": [
          {
            "name": "resetForm",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "valuesToTreeVersioningPolicy",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "values",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "TreeVersioningPolicyToValues",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "policy",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "deleteSource",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "saveSource",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "onFormChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "values",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "updateValidStatus",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "valid",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "context": {
          "messages": {
            "type": {
              "name": "object"
            },
            "required": false
          },
          "getMessage": {
            "type": {
              "name": "func"
            },
            "required": false
          }
        }
      }
    ],
    "AdminWorkspaces/editor/VersionPolicyPeriods.js": [
      {
        "description": "",
        "displayName": "VersionPolicyPeriods",
        "methods": []
      }
    ],
    "AdminWorkspaces/editor/WsAutoComplete.js": [
      {
        "description": "",
        "displayName": "WsAutoComplete",
        "methods": [
          {
            "name": "handleUpdateInput",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "input",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "handleNewRequest",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "loadValues",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "value",
                "type": null
              },
              {
                "name": "cb",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "renderNode",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "node",
                "type": null
              },
              {
                "name": "m",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "AdminWorkspaces/editor/WsEditor.js": [
      {
        "description": "",
        "displayName": "WsEditor",
        "methods": [
          {
            "name": "enableSync",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "confirmSync",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "revert",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "save",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "remove",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ],
    "AdminWorkspaces/meta/MetaList.js": [
      {
        "description": "",
        "methods": [],
        "props": {
          "currentMetas": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "edit": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "metaSourceProvider": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "closeCurrent": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "setEditState": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "featuresEditable": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "AdminWorkspaces/meta/MetaSourceForm.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "setModal",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "pydioModal",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "submit",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "model": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "editor": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "modalData": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "dialogTitleId": {
            "defaultValue": {
              "value": "'ajxp_admin.ws.46'",
              "computed": false
            },
            "required": false
          },
          "dialogSize": {
            "defaultValue": {
              "value": "'sm'",
              "computed": false
            },
            "required": false
          }
        }
      }
    ],
    "AdminWorkspaces/virtual/NodeCard.js": [
      {
        "description": "",
        "displayName": "NodeCard",
        "methods": [
          {
            "name": "onChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "newValue",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "save",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "remove",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ]
  },
  "action.migration": {
    "Dashboard.js": [
      {
        "description": "",
        "displayName": "Dashboard",
        "methods": [
          {
            "name": "T",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "id",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "loadPreviousTasks",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ],
    "TaskActivity.js": [
      {
        "description": "",
        "displayName": "TaskActivity",
        "methods": [
          {
            "name": "T",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "id",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "loadActivity",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "props",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "actions/actions.js": [
      {
        "description": "",
        "displayName": "getWorkspacesSummary",
        "methods": []
      },
      {
        "description": "",
        "displayName": "getSharesSummary",
        "methods": []
      },
      {
        "description": "",
        "displayName": "getMedataSummary",
        "methods": []
      }
    ],
    "steps/StepActions.js": [
      {
        "description": "",
        "displayName": "StepActions",
        "methods": [
          {
            "name": "show",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ],
    "steps/StepCategories.js": [
      {
        "description": "",
        "displayName": "StepCategories",
        "methods": [
          {
            "name": "T",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "id",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "steps/StepConnection.js": [
      {
        "description": "",
        "displayName": "StepConnection",
        "methods": [
          {
            "name": "T",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "id",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "testUrl",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "method",
                "type": null
              },
              {
                "name": "url",
                "type": null
              },
              {
                "name": "user",
                "type": null
              },
              {
                "name": "pwd",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "handleNext",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ],
    "steps/StepDisclaimer.js": [
      {
        "description": "",
        "displayName": "StepDisclaimer",
        "methods": [
          {
            "name": "T",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "id",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "steps/StepEmptyConfig.js": [
      {
        "description": "",
        "displayName": "StepEmptyConfig",
        "methods": [
          {
            "name": "T",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "id",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "steps/StepMetadata.js": [
      {
        "description": "",
        "displayName": "StepMetadata",
        "methods": [
          {
            "name": "T",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "id",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "exportFeatures",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "toggle",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "featureName",
                "type": null
              },
              {
                "name": "checked",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "steps/StepPrerequisites.js": [
      {
        "description": "",
        "displayName": "StepPrerequisites",
        "methods": [
          {
            "name": "T",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "id",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "steps/StepShares.js": [
      {
        "description": "",
        "displayName": "StepShares",
        "methods": [
          {
            "name": "T",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "id",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "exportFeatures",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "toggle",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "featureName",
                "type": null
              },
              {
                "name": "checked",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "steps/StepWorkspaces.js": [
      {
        "description": "",
        "displayName": "StepWorkspaces",
        "methods": [
          {
            "name": "T",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "id",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "startListeningToJob",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ],
    "workspaces/Connect.js": [
      {
        "description": "",
        "displayName": "Connect",
        "methods": [
          {
            "name": "getLeftGridY",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "getRightGridY",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "drawGrid",
            "docblock": "@param ctx {CanvasRenderingContext2D}\n@param offsetX int\n@param offsetY int\n@param gridHeight int\n@param dotsNumber int",
            "modifiers": [],
            "params": [
              {
                "name": "ctx",
                "description": "{CanvasRenderingContext2D}",
                "type": null
              },
              {
                "name": "offsetX",
                "description": "int",
                "type": null
              },
              {
                "name": "offsetY",
                "description": "int",
                "type": null
              },
              {
                "name": "gridHeight",
                "description": "int",
                "type": null
              },
              {
                "name": "dotsNumber",
                "description": "int",
                "type": null
              }
            ],
            "returns": null,
            "description": null
          },
          {
            "name": "linkDots",
            "docblock": "@param ctx {CanvasRenderingContext2D}\n@param leftDotIndex int\n@param rightDotIndex int\n@param color",
            "modifiers": [],
            "params": [
              {
                "name": "ctx",
                "description": "{CanvasRenderingContext2D}",
                "type": null
              },
              {
                "name": "leftDotIndex",
                "description": "int",
                "type": null
              },
              {
                "name": "rightDotIndex",
                "description": "int",
                "type": null
              },
              {
                "name": "color",
                "description": null,
                "type": null
              }
            ],
            "returns": null,
            "description": null
          },
          {
            "name": "buildCanvas",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "props",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "dotsRadius": {
            "defaultValue": {
              "value": "4",
              "computed": false
            },
            "required": false
          },
          "subheaderHeight": {
            "defaultValue": {
              "value": "40",
              "computed": false
            },
            "required": false
          },
          "leftGridX": {
            "defaultValue": {
              "value": "10",
              "computed": false
            },
            "required": false
          },
          "leftGridHeight": {
            "defaultValue": {
              "value": "72",
              "computed": false
            },
            "required": false
          },
          "leftGridOffset": {
            "defaultValue": {
              "value": "0",
              "computed": false
            },
            "required": false
          },
          "rightGridX": {
            "defaultValue": {
              "value": "140",
              "computed": false
            },
            "required": false
          },
          "rightGridHeight": {
            "defaultValue": {
              "value": "72",
              "computed": false
            },
            "required": false
          },
          "rightGridOffset": {
            "defaultValue": {
              "value": "0",
              "computed": false
            },
            "required": false
          }
        }
      }
    ],
    "workspaces/Mapper.js": [
      {
        "description": "",
        "displayName": "WorkspaceMapper",
        "methods": [
          {
            "name": "T",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "id",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "loadDatasources",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "loadTemplatePaths",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "toggleRemap",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "check",
                "type": null
              },
              {
                "name": "cellsWorkspace",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "mapping",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "linkWorkspacesToDatasources",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "linkWorkspacesToTemplatePaths",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "linkDatasourcesToTemplatePaths",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "linkDatasourcesToWorkspaces",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "linkTemplatePathsToWorkspaces",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "linkWorkspacesToWorkspaces",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "getLinks",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "arr1",
                "type": null
              },
              {
                "name": "arr2",
                "type": null
              },
              {
                "name": "comp",
                "type": null
              },
              {
                "name": "color",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "handleSelectWorkspace",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "ws",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "handleSelectDatasource",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "ds",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "handleSelectTemplatePath",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "tp",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "handleSelectRootNode",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "ws",
                "type": null
              },
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "handleInvalidRootNode",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "ws",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "handleShowPath",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "ws",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "handleHidePath",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "handleShowDatasources",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "handleHideDatasources",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "handleShowTemplatePaths",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "handleHideTemplatePaths",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "handleCreateDatasource",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "handleCreateTemplatePath",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "handleNext",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "isInvalid",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "ws",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "isValid",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "ws",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "isDatasourceSelectable",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "ds",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "isDatasourceHighlighted",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "ds",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "isTemplatePathSelectable",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "tp",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "isTemplatePathHighlighted",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "tp",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "paginator",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ],
    "workspaces/MetadataMapper.js": [
      {
        "description": "",
        "displayName": "MetadataMapper",
        "methods": [
          {
            "name": "T",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "id",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "renderFontIcon",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "meta",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "exportMapping",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "toggle",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "index",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "updateLabel",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "index",
                "type": null
              },
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "buildNamespaces",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ],
    "workspaces/Pydio8Workspaces.js": [
      {
        "description": "",
        "displayName": "Pydio8Workspaces",
        "methods": [
          {
            "name": "toString",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "{accessType: type, parameters = {}}",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "extractPath",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "{accessType: type, parameters = {}}",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      },
      {
        "description": "",
        "displayName": "Workspace",
        "methods": [
          {
            "name": "handleSelect",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "ws",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "handleHover",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ],
    "workspaces/Ws2Datasources.js": [
      {
        "description": "",
        "displayName": "Ws2Datasources",
        "methods": [
          {
            "name": "toString",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "datasource",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "extractPath",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "datasource",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      },
      {
        "description": "",
        "displayName": "Datasource",
        "methods": [
          {
            "name": "handleSelect",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ],
    "workspaces/Ws2RootNodes.js": [
      {
        "description": "",
        "displayName": "Ws2RootNodes",
        "methods": [
          {
            "name": "T",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "id",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "workspaces/Ws2TemplatePaths.js": [
      {
        "description": "",
        "displayName": "Ws2TemplatePaths",
        "methods": []
      },
      {
        "description": "",
        "displayName": "TemplatePath",
        "methods": [
          {
            "name": "handleSelect",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "T",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "id",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ]
  },
  "action.user": {
    "EmailPanel.js": [
      {
        "description": "",
        "displayName": "EmailPanel",
        "methods": [
          {
            "name": "onChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "partialValues",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onFrequencyChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onPickDate",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "position",
                "type": null
              },
              {
                "name": "event",
                "type": null
              },
              {
                "name": "date",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "definitions": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "values": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "onChange": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "ModalAddressBook.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "submit",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "dialogTitle": {
            "defaultValue": {
              "value": "''",
              "computed": false
            },
            "required": false
          },
          "dialogSize": {
            "defaultValue": {
              "value": "'xl'",
              "computed": false
            },
            "required": false
          },
          "dialogPadding": {
            "defaultValue": {
              "value": "false",
              "computed": false
            },
            "required": false
          },
          "dialogIsModal": {
            "defaultValue": {
              "value": "false",
              "computed": false
            },
            "required": false
          },
          "dialogScrollBody": {
            "defaultValue": {
              "value": "true",
              "computed": false
            },
            "required": false
          }
        }
      }
    ],
    "ModalDashboard.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "submit",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "getDefaultButtons",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "getButtons",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "updater",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onTabChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "dialogTitle": {
            "defaultValue": {
              "value": "''",
              "computed": false
            },
            "required": false
          },
          "dialogSize": {
            "defaultValue": {
              "value": "'md'",
              "computed": false
            },
            "required": false
          },
          "dialogPadding": {
            "defaultValue": {
              "value": "false",
              "computed": false
            },
            "required": false
          },
          "dialogIsModal": {
            "defaultValue": {
              "value": "false",
              "computed": false
            },
            "required": false
          },
          "dialogScrollBody": {
            "defaultValue": {
              "value": "false",
              "computed": false
            },
            "required": false
          }
        }
      }
    ],
    "PasswordForm.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "getMessage",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "id",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "update",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "value",
                "type": null
              },
              {
                "name": "field",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "validate",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "post",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "callback",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "PasswordPopover.js": [
      {
        "description": "",
        "displayName": "PasswordPopover",
        "methods": [
          {
            "name": "passOpenPopover",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "passClosePopover",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "passValidStatusChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "status",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "passSubmit",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ],
    "ProfilePane.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "onFormChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "newValues",
                "type": null
              },
              {
                "name": "dirty",
                "type": null
              },
              {
                "name": "removeValues",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getButtons",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "updater",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getButton",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "actionName",
                "type": null
              },
              {
                "name": "messageId",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "revert",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "saveForm",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ],
    "WelcomeModal.js": [
      {
        "description": "Sample Dialog class used for reference only, ready to be\ncopy/pasted :-)",
        "methods": [
          {
            "name": "close",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "skip",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getMessage",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "id",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getButtons",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "dialogTitle": {
            "defaultValue": {
              "value": "''",
              "computed": false
            },
            "required": false
          },
          "dialogIsModal": {
            "defaultValue": {
              "value": "true",
              "computed": false
            },
            "required": false
          },
          "dialogSize": {
            "defaultValue": {
              "value": "'sm'",
              "computed": false
            },
            "required": false
          },
          "dialogPadding": {
            "defaultValue": {
              "value": "0",
              "computed": false
            },
            "required": false
          }
        }
      }
    ]
  },
  "core.activitystreams": {
    "Activity.js": [
      {
        "description": "",
        "displayName": "Paragraph",
        "methods": []
      },
      {
        "description": "",
        "displayName": "workspacesLocations",
        "methods": []
      },
      {
        "description": "",
        "displayName": "Activity",
        "methods": []
      }
    ],
    "ActivityList.js": [
      {
        "description": "",
        "displayName": "ActivityList",
        "methods": [
          {
            "name": "mergeMoreFeed",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "currentFeed",
                "type": null
              },
              {
                "name": "newFeed",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "loadForProps",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "props",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "DocLink.js": [
      {
        "description": "",
        "displayName": "DocPreview",
        "methods": []
      },
      {
        "description": "",
        "displayName": "DocLink",
        "methods": []
      }
    ],
    "InfoPanel.js": [
      {
        "description": "",
        "displayName": "InfoPanel",
        "methods": []
      }
    ],
    "UserPanel.js": [
      {
        "description": "",
        "displayName": "UserPanel",
        "methods": [
          {
            "name": "reloadData",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "reloadUnread",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "onStatusChange",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "handleTouchTap",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "handleRequestClose",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ]
  },
  "core.authfront": {
    "CoreActions.js": [
      {
        "description": "",
        "displayName": "LanguagePicker",
        "methods": []
      },
      {
        "description": "",
        "displayName": "DarkThemeContainer",
        "methods": []
      }
    ]
  },
  "editor.browser": {
    "PydioBrowserActions.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "submit",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "dialogSize": {
            "defaultValue": {
              "value": "'sm'",
              "computed": false
            },
            "required": false
          },
          "dialogTitleId": {
            "defaultValue": {
              "value": "'openbrowser.4'",
              "computed": false
            },
            "required": false
          }
        }
      }
    ],
    "PydioBrowserEditor.js": [
      {
        "description": "",
        "displayName": "Editor",
        "methods": [
          {
            "name": "styles",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "openBookmark",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              },
              {
                "name": "configs",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "openNode",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              },
              {
                "name": "configs",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "_openURL",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "url",
                "type": null
              },
              {
                "name": "modal",
                "type": null
              },
              {
                "name": "updateTitle",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ]
  },
  "editor.ckeditor": {
    "CKEditor.js": [
      {
        "description": "",
        "displayName": "Editor",
        "methods": [
          {
            "name": "styles",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "url": {
            "type": {
              "name": "string"
            },
            "required": true,
            "description": ""
          }
        }
      }
    ],
    "editor.js": [
      {
        "description": "",
        "displayName": "Editor",
        "methods": [
          {
            "name": "propTypes",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "defaultProps",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "base",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "config",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "showControls": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "false",
              "computed": false
            }
          }
        }
      }
    ]
  },
  "editor.codemirror": {
    "CodeMirror.js": [
      {
        "description": "",
        "displayName": "CodeMirror",
        "methods": [
          {
            "name": "getCodeMirrorInstance",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "focusChanged",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "focused",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "scrollChanged",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "cm",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "codemirrorValueChanged",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "doc",
                "type": null
              },
              {
                "name": "change",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "cursorActivity",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "cm",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "mode": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.string"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "''",
              "computed": false
            }
          },
          "lineWrapping": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.bool"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "false",
              "computed": false
            }
          },
          "lineNumbers": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.bool"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "false",
              "computed": false
            }
          },
          "readOnly": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.bool"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "true",
              "computed": false
            }
          },
          "className": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.any"
            },
            "required": false,
            "description": ""
          },
          "codeMirrorInstance": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.func"
            },
            "required": false,
            "description": ""
          },
          "defaultValue": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.string"
            },
            "required": false,
            "description": ""
          },
          "onChange": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.func"
            },
            "required": false,
            "description": ""
          },
          "onFocusChange": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.func"
            },
            "required": false,
            "description": ""
          },
          "onScroll": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.func"
            },
            "required": false,
            "description": ""
          },
          "options": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.object"
            },
            "required": false,
            "description": ""
          },
          "path": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.string"
            },
            "required": false,
            "description": ""
          },
          "value": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.string"
            },
            "required": false,
            "description": ""
          },
          "preserveScrollPosition": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.bool"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "false",
              "computed": false
            }
          }
        }
      }
    ],
    "CodeMirrorLoader.js": [
      {
        "description": "",
        "displayName": "CodeMirrorLoader",
        "methods": [],
        "props": {
          "url": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.string.isRequired"
            },
            "required": false,
            "description": ""
          },
          "onChange": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.func.isRequired"
            },
            "required": false,
            "description": ""
          },
          "onCursorChange": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.func.isRequired"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "editor.js": [
      {
        "description": "",
        "displayName": "Editor",
        "methods": []
      }
    ]
  },
  "editor.diaporama": {
    "components.js": [
      {
        "description": "",
        "displayName": "Image",
        "methods": []
      },
      {
        "description": "",
        "displayName": "ImageContainer",
        "methods": [
          {
            "name": "propTypes",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "defaultProps",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "styles",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "src": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "\"\"",
              "computed": false
            }
          },
          "imgClassName": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "imgStyle": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "width": {
            "type": {
              "name": "number"
            },
            "required": false,
            "description": ""
          },
          "height": {
            "type": {
              "name": "number"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "editor.js": [
      {
        "description": "",
        "displayName": "Editor",
        "methods": [
          {
            "name": "propTypes",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "node": {
            "type": {
              "name": "instanceOf",
              "value": "AjxpNode"
            },
            "required": true,
            "description": ""
          }
        }
      }
    ],
    "preview.js": [
      {
        "description": "",
        "displayName": "Preview",
        "methods": []
      }
    ]
  },
  "editor.libreoffice": {
    "editor.js": [
      {
        "description": "",
        "displayName": "Editor",
        "methods": []
      }
    ]
  },
  "editor.openlayer": {
    "editor.js": [
      {
        "description": "",
        "displayName": "Editor",
        "methods": [
          {
            "name": "onMapLoaded",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "map",
                "type": null
              },
              {
                "name": "error",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "map.js": [
      {
        "description": "",
        "displayName": "OLMap",
        "methods": [
          {
            "name": "propTypes",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "defaultProps",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "attachMap",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "centerPoint": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "centerNode": {
            "type": {
              "name": "instanceOf",
              "value": "AjxpNode"
            },
            "required": false,
            "description": ""
          },
          "centerSRS": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "'EPSG:4326'",
              "computed": false
            }
          },
          "defaultControls": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "true",
              "computed": false
            }
          },
          "onMapLoaded": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ]
  },
  "editor.pdfjs": {
    "badge.js": [
      {
        "description": "",
        "displayName": "PdfBadge",
        "methods": []
      }
    ],
    "editor.js": [
      {
        "description": "",
        "displayName": "Viewer",
        "methods": [
          {
            "name": "loadNode",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "props",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      },
      {
        "description": "",
        "displayName": "Editor",
        "methods": []
      }
    ]
  },
  "editor.soundmanager": {
    "Player.js": [
      {
        "description": "",
        "displayName": "Player",
        "methods": [],
        "props": {
          "threeSixtyPlayer": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "autoPlay": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "false",
              "computed": false
            }
          },
          "rich": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "true",
              "computed": false
            }
          },
          "onReady": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "badge.js": [
      {
        "description": "",
        "displayName": "Badge",
        "methods": [
          {
            "name": "loadNode",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "props",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "editor.js": [
      {
        "description": "",
        "displayName": "Editor",
        "methods": [
          {
            "name": "loadNode",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "props",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "playNext",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "onRowSelection",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "data",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "panel.js": [
      {
        "description": "",
        "displayName": "Preview",
        "methods": [
          {
            "name": "loadNode",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "props",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "preview.js": [
      {
        "description": "",
        "displayName": "Preview",
        "methods": [
          {
            "name": "loadNode",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "props",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ]
  },
  "editor.text": {
    "editor.js": [
      {
        "description": "",
        "displayName": "Editor",
        "methods": [
          {
            "name": "styles",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "compomentWillReceiveProps",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "nextProps",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "loadNode",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "props",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ]
  },
  "editor.video": {
    "Editor.js": [
      {
        "description": "",
        "displayName": "Viewer",
        "methods": [
          {
            "name": "styles",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "propTypes",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "defaultProps",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "loadNode",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "props",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "node": {
            "type": {
              "name": "instanceOf",
              "value": "AjxpNode"
            },
            "required": true,
            "description": ""
          },
          "pydio": {
            "type": {
              "name": "instanceOf",
              "value": "Pydio"
            },
            "required": true,
            "description": ""
          },
          "preview": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "false",
              "computed": false
            }
          }
        }
      },
      {
        "description": "",
        "displayName": "Editor",
        "methods": []
      }
    ],
    "Media.js": [
      {
        "description": "",
        "displayName": "Media",
        "methods": [
          {
            "name": "styles",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "getVideoPlayer",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "getVideoPlayerEl",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "getVideoPlayerOptions",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "getVideoResizeOptions",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "getResizedVideoPlayerMeasurements",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "setVideoPlayerSrc",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "src",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "mountVideoPlayer",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "unmountVideoPlayer",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "addEndlessMode",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "addResizeEventListener",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "removeEndlessMode",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "removeResizeEventListener",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "pauseVideo",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "playVideo",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "restartVideo",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "togglePauseVideo",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "handleVideoPlayerReady",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "handleVideoPlayerResize",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "handleNextVideo",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "renderDefaultWarning",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "_windowHeight",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "_videoElementWidth",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "src": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.string.isRequired"
            },
            "required": false,
            "description": ""
          },
          "poster": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.string"
            },
            "required": false,
            "description": ""
          },
          "height": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.number"
            },
            "required": false,
            "description": ""
          },
          "width": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.number"
            },
            "required": false,
            "description": ""
          },
          "endlessMode": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.bool"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "false",
              "computed": false
            }
          },
          "options": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.object"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "{\n    preload: 'auto',\n    autoplay: false,\n    controls: true\n}",
              "computed": false
            }
          },
          "onReady": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.func"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "function noop() {}",
              "computed": false
            }
          },
          "eventListeners": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.object"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "{}",
              "computed": false
            }
          },
          "resize": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.bool"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "false",
              "computed": false
            }
          },
          "resizeOptions": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.shape({\n    aspectRatio: React.PropTypes.number,\n    shortWindowVideoHeightAdjustment: React.PropTypes.number,\n    defaultVideoWidthAdjustment: React.PropTypes.number,\n    debounceTime: React.PropTypes.number\n})"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "{}",
              "computed": false
            }
          },
          "vjsDefaultSkin": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.bool"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "true",
              "computed": false
            }
          },
          "vjsBigPlayCentered": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.bool"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "true",
              "computed": false
            }
          },
          "children": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.element"
            },
            "required": false,
            "description": ""
          },
          "dispose": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.bool"
            },
            "required": false,
            "description": ""
          },
          "onNextVideo": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.func"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "function noop() {}",
              "computed": false
            }
          }
        }
      }
    ],
    "Player.js": [
      {
        "description": "",
        "displayName": "Player",
        "methods": [
          {
            "name": "styles",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "onReady",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "url": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.string.isRequired"
            },
            "required": false,
            "description": ""
          },
          "onReady": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.func"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ]
  },
  "gui.ajax": {
    "core/PydioBootstrap.es6": [
      {
        "description": "Main BootLoader.",
        "displayName": "PydioBootstrap",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructor\n@param startParameters Object The options",
            "modifiers": [],
            "params": [
              {
                "name": "startParameters",
                "description": "Object The options",
                "type": null
              }
            ],
            "returns": null,
            "description": "Constructor"
          },
          {
            "name": "loadBootConfig",
            "docblock": "Real loading action",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Real loading action"
          },
          {
            "name": "refreshContextVariablesAndInit",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "connexion",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "detectBaseParameters",
            "docblock": "Detect the base path of the javascripts based on the script tags",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Detect the base path of the javascripts based on the script tags"
          },
          {
            "name": "loadCSSResource",
            "docblock": "Loads a CSS file\n@param fileName String",
            "modifiers": [],
            "params": [
              {
                "name": "fileName",
                "description": "String",
                "type": null
              }
            ],
            "returns": null,
            "description": "Loads a CSS file"
          }
        ]
      }
    ],
    "core/http/Connexion.es6": [
      {
        "description": "Pydio encapsulation of XHR / Fetch",
        "displayName": "Connexion",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructor\n@param baseUrl String The base url for services",
            "modifiers": [],
            "params": [
              {
                "name": "baseUrl",
                "description": "String The base url for services",
                "type": null
              }
            ],
            "returns": null,
            "description": "Constructor"
          },
          {
            "name": "log",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "action",
                "type": null
              },
              {
                "name": "syncStatus",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "setMethod",
            "docblock": "Set the query method (get post)\n@param method String",
            "modifiers": [],
            "params": [
              {
                "name": "method",
                "description": "String",
                "type": null
              }
            ],
            "returns": null,
            "description": "Set the query method (get post)"
          },
          {
            "name": "showLoader",
            "docblock": "Show a small loader",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Show a small loader"
          },
          {
            "name": "hideLoader",
            "docblock": "Hide a small loader",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Hide a small loader"
          },
          {
            "name": "send",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "applyComplete",
            "docblock": "Apply the complete callback, try to grab maximum of errors\n@param parsedBody Transpot",
            "modifiers": [],
            "params": [
              {
                "name": "parsedBody",
                "description": "Transpot",
                "type": null
              },
              {
                "name": "response"
              }
            ],
            "returns": null,
            "description": "Apply the complete callback, try to grab maximum of errors"
          },
          {
            "name": "uploadFile",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "file",
                "type": null
              },
              {
                "name": "fileParameterName",
                "type": null
              },
              {
                "name": "uploadUrl",
                "type": null
              },
              {
                "name": "onComplete",
                "type": null
              },
              {
                "name": "onError",
                "type": null
              },
              {
                "name": "onProgress",
                "type": null
              },
              {
                "name": "xhrSettings",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "initializeXHRForUpload",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "url",
                "type": null
              },
              {
                "name": "onComplete",
                "type": null
              },
              {
                "name": "onError",
                "type": null
              },
              {
                "name": "onProgress",
                "type": null
              },
              {
                "name": "xhrSettings",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "sendFileUsingFormData",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "xhr",
                "type": null
              },
              {
                "name": "file",
                "type": null
              },
              {
                "name": "fileParameterName",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "xhrSendAsBinary",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "xhr",
                "type": null
              },
              {
                "name": "fileName",
                "type": null
              },
              {
                "name": "fileData",
                "type": null
              },
              {
                "name": "fileParameterName",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "loadLibrary",
            "docblock": "Load a javascript library\n@param fileName String\n@param onLoadedCode Function Callback\n@param aSync Boolean load library asynchroneously",
            "modifiers": [],
            "params": [
              {
                "name": "fileName",
                "description": "String",
                "type": null
              },
              {
                "name": "onLoadedCode",
                "description": "Function Callback",
                "type": null
              },
              {
                "name": "aSync",
                "description": "Boolean load library asynchroneously",
                "type": null
              }
            ],
            "returns": null,
            "description": "Load a javascript library"
          }
        ],
        "require": "const Connexion = require('pydio/http/connexion')"
      }
    ],
    "core/http/IdmApi.es6": [
      {
        "description": "",
        "displayName": "IdmApi",
        "methods": [
          {
            "name": "constructor",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "restClient",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "loadUser",
            "docblock": "@param userLogin\n@return {Promise<IdmUser>}",
            "modifiers": [],
            "params": [
              {
                "name": "userLogin",
                "description": null,
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "Promise"
              }
            },
            "description": null
          },
          {
            "name": "loadRole",
            "docblock": "@param roleUuid\n@return {Promise<IdmRole>}",
            "modifiers": [],
            "params": [
              {
                "name": "roleUuid",
                "description": null,
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "Promise"
              }
            },
            "description": null
          },
          {
            "name": "listUsers",
            "docblock": "@param baseGroup string\n@param filterString string\n@param recursive boolean\n@param offset integer\n@param limit integer\n@param profile string filter by profile\n@return Promise<IdmUser[]>",
            "modifiers": [],
            "params": [
              {
                "name": "baseGroup",
                "description": "string",
                "type": null
              },
              {
                "name": "filterString",
                "description": "string",
                "type": null
              },
              {
                "name": "recursive",
                "description": "boolean",
                "type": null
              },
              {
                "name": "offset",
                "description": "integer",
                "type": null
              },
              {
                "name": "limit",
                "description": "integer",
                "type": null
              },
              {
                "name": "profile",
                "description": "string filter by profile",
                "type": null
              }
            ],
            "returns": {
              "description": "Promise<IdmUser[]>",
              "type": null
            },
            "description": null
          },
          {
            "name": "listUsersGroups",
            "docblock": "@param baseGroup string\n@param recursive boolean\n@param offset integer\n@param limit integer\n@param profile string\n@return Promise<RestUsersCollection>",
            "modifiers": [],
            "params": [
              {
                "name": "baseGroup",
                "description": "string",
                "type": null
              },
              {
                "name": "recursive",
                "description": "boolean",
                "type": null
              },
              {
                "name": "offset",
                "description": "integer",
                "type": null
              },
              {
                "name": "limit",
                "description": "integer",
                "type": null
              },
              {
                "name": "profile",
                "description": "string",
                "type": null
              }
            ],
            "returns": {
              "description": "Promise<RestUsersCollection>",
              "type": null
            },
            "description": null
          },
          {
            "name": "listUsersWithRole",
            "docblock": "@param roleId string\n@param offset integer\n@param limit integer\n@param filterString\n@return Promise<RestUsersCollection>",
            "modifiers": [],
            "params": [
              {
                "name": "roleId",
                "description": "string",
                "type": null
              },
              {
                "name": "offset",
                "description": "integer",
                "type": null
              },
              {
                "name": "limit",
                "description": "integer",
                "type": null
              },
              {
                "name": "filterString",
                "description": null,
                "type": null
              }
            ],
            "returns": {
              "description": "Promise<RestUsersCollection>",
              "type": null
            },
            "description": null
          },
          {
            "name": "listGroups",
            "docblock": "@param baseGroup string\n@param filterString string\n@param recursive boolean\n@param offset integer\n@param limit integer\n@return {Promise<IdmUser[]>}",
            "modifiers": [],
            "params": [
              {
                "name": "baseGroup",
                "description": "string",
                "type": null
              },
              {
                "name": "filterString",
                "description": "string",
                "type": null
              },
              {
                "name": "recursive",
                "description": "boolean",
                "type": null
              },
              {
                "name": "offset",
                "description": "integer",
                "type": null
              },
              {
                "name": "limit",
                "description": "integer",
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "Promise"
              }
            },
            "description": null
          },
          {
            "name": "listRoles",
            "docblock": "@param showTechnicalRoles boolean\n@param offset int\n@param limit int\n@return {Promise<any>}",
            "modifiers": [],
            "params": [
              {
                "name": "showTechnicalRoles",
                "description": "boolean",
                "type": null
              },
              {
                "name": "offset",
                "description": "int",
                "type": null
              },
              {
                "name": "limit",
                "description": "int",
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "Promise"
              }
            },
            "description": null
          },
          {
            "name": "listTeams",
            "docblock": "@param filterString\n@param offset\n@param limit\n@return {Promise<any>}",
            "modifiers": [],
            "params": [
              {
                "name": "filterString",
                "description": null,
                "type": null
              },
              {
                "name": "offset",
                "description": null,
                "type": null
              },
              {
                "name": "limit",
                "description": null,
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "Promise"
              }
            },
            "description": null
          },
          {
            "name": "createGroup",
            "docblock": "@param baseGroup\n@param groupIdentifier\n@param displayName\n@return {Promise}",
            "modifiers": [],
            "params": [
              {
                "name": "baseGroup",
                "description": null,
                "type": null
              },
              {
                "name": "groupIdentifier",
                "description": null,
                "type": null
              },
              {
                "name": "displayName",
                "description": null,
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "Promise"
              }
            },
            "description": null
          },
          {
            "name": "createUser",
            "docblock": "@param baseGroup string\n@param login string\n@param password string\n@param profile string\n@return {Promise}",
            "modifiers": [],
            "params": [
              {
                "name": "baseGroup",
                "description": "string",
                "type": null
              },
              {
                "name": "login",
                "description": "string",
                "type": null
              },
              {
                "name": "password",
                "description": "string",
                "type": null
              },
              {
                "name": "profile",
                "description": "string",
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "Promise"
              }
            },
            "description": null
          },
          {
            "name": "putExternalUser",
            "docblock": "@param data {*}\n@param parametersDef []\n@param existingUser {IdmUser}",
            "modifiers": [],
            "params": [
              {
                "name": "data",
                "description": "{*}",
                "type": null
              },
              {
                "name": "parametersDef"
              },
              {
                "name": "existingUser"
              }
            ],
            "returns": null,
            "description": null
          },
          {
            "name": "loadUserGraph",
            "docblock": "@param userLogin\n@return {Promise<RestRelationResponse>}",
            "modifiers": [],
            "params": [
              {
                "name": "userLogin",
                "description": null,
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "Promise"
              }
            },
            "description": null
          },
          {
            "name": "createRole",
            "docblock": "Create a role from scratch\n@param roleLabel string\n@return {Promise}",
            "modifiers": [],
            "params": [
              {
                "name": "roleLabel",
                "description": "string",
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "Promise"
              }
            },
            "description": "Create a role from scratch"
          },
          {
            "name": "updateIdmUser",
            "docblock": "@param idmUser {IdmUser}\n@return {Promise}",
            "modifiers": [],
            "params": [
              {
                "name": "idmUser",
                "description": "{IdmUser}",
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "Promise"
              }
            },
            "description": null
          },
          {
            "name": "deleteIdmUser",
            "docblock": "@param idmUser {IdmUser}\n@return {Promise}",
            "modifiers": [],
            "params": [
              {
                "name": "idmUser",
                "description": "{IdmUser}",
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "Promise"
              }
            },
            "description": null
          },
          {
            "name": "deleteRole",
            "docblock": "Delete a role by Id\n@param roleId\n@return {Promise}",
            "modifiers": [],
            "params": [
              {
                "name": "roleId",
                "description": null,
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "Promise"
              }
            },
            "description": "Delete a role by Id"
          },
          {
            "name": "saveSelectionAsTeam",
            "docblock": "Create a team from a list of user Ids\n@param teamName string\n@param userIds array\n@param callback optional callback\n@return {Promise<T>}",
            "modifiers": [],
            "params": [
              {
                "name": "teamName",
                "description": "string",
                "type": null
              },
              {
                "name": "userIds",
                "description": "array",
                "type": null
              },
              {
                "name": "callback",
                "description": "optional callback",
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "Promise"
              }
            },
            "description": "Create a team from a list of user Ids"
          },
          {
            "name": "addUserToTeam",
            "docblock": "@param teamId\n@param userLogin\n@param callback\n@return {Promise<[any , any]>}",
            "modifiers": [],
            "params": [
              {
                "name": "teamId",
                "description": null,
                "type": null
              },
              {
                "name": "userLogin",
                "description": null,
                "type": null
              },
              {
                "name": "callback",
                "description": null,
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "Promise"
              }
            },
            "description": null
          },
          {
            "name": "removeUserFromTeam",
            "docblock": "@param teamId\n@param userLogin\n@param callback\n@return {Promise<[any , any]>}",
            "modifiers": [],
            "params": [
              {
                "name": "teamId",
                "description": null,
                "type": null
              },
              {
                "name": "userLogin",
                "description": null,
                "type": null
              },
              {
                "name": "callback",
                "description": null,
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "Promise"
              }
            },
            "description": null
          },
          {
            "name": "updateTeamLabel",
            "docblock": "@param teamId\n@param newLabel\n@param callback\n@return {Promise<IdmRole>}",
            "modifiers": [],
            "params": [
              {
                "name": "teamId",
                "description": null,
                "type": null
              },
              {
                "name": "newLabel",
                "description": null,
                "type": null
              },
              {
                "name": "callback",
                "description": null,
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "Promise"
              }
            },
            "description": null
          },
          {
            "name": "policiesForUniqueUser",
            "docblock": "@param currentUser\n@return {Promise<Array>}",
            "modifiers": [],
            "params": [
              {
                "name": "currentUser",
                "description": null,
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "Promise"
              }
            },
            "description": null
          },
          {
            "name": "policiesForExternalUser",
            "docblock": "@param currentUser\n@param newUserLogin\n@return {Promise<Array>}",
            "modifiers": [],
            "params": [
              {
                "name": "currentUser",
                "description": null,
                "type": null
              },
              {
                "name": "newUserLogin",
                "description": null,
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "Promise"
              }
            },
            "description": null
          }
        ]
      }
    ],
    "core/http/MetaCacheService.es6": [
      {
        "description": "API Client",
        "displayName": "MetaCacheService",
        "methods": [
          {
            "name": "getInstance",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "constructor",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "hasKey",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "streamName",
                "type": null
              },
              {
                "name": "keyName",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getByKey",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "streamName",
                "type": null
              },
              {
                "name": "keyName",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "deleteKey",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "streamName",
                "type": null
              },
              {
                "name": "keyName",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "setKey",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "streamName",
                "type": null
              },
              {
                "name": "keyName",
                "type": null
              },
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "clearMetaStreamKeys",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "streamName",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "registerMetaStream",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "streamName",
                "type": null
              },
              {
                "name": "expirationPolicy",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "metaForNode",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "streamName",
                "type": null
              },
              {
                "name": "ajxpNode",
                "type": null
              },
              {
                "name": "loaderCallback",
                "type": null
              },
              {
                "name": "remoteParser",
                "type": null
              },
              {
                "name": "cacheLoader",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "invalidateMetaForKeys",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "streamName",
                "type": null
              },
              {
                "name": "keyPattern",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const MetaCacheService = require('pydio/http/meta-cache-service')"
      }
    ],
    "core/http/PydioApi.es6": [
      {
        "description": "",
        "displayName": "ManagedMultipart",
        "methods": [
          {
            "name": "progress",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "info",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "uploadPart",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "chunk",
                "type": null
              },
              {
                "name": "partNumber",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const PydioApi = require('pydio/http/api')"
      },
      {
        "description": "API Client",
        "displayName": "PydioApi",
        "methods": [
          {
            "name": "constructor",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "getRestClient",
            "docblock": "@return {JwtApiClient}",
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": {
              "description": null,
              "type": {
                "name": "JwtApiClient"
              }
            },
            "description": null
          },
          {
            "name": "getMultipartThreshold",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "getMultipartPartSize",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "getMultipartPartQueueSize",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "getMultipartUploadTimeout",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "setPydioObject",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "pydioObject",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getPydioObject",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "loadFile",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "filePath",
                "type": null
              },
              {
                "name": "onComplete",
                "type": null
              },
              {
                "name": "onError",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "uploadFile",
            "docblock": "@param file\n@param fileParameterName\n@param queryStringParams\n@param onComplete\n@param onError\n@param onProgress\n@param uploadUrl\n@param xhrSettings\n@returns XHR Handle to abort transfer",
            "modifiers": [],
            "params": [
              {
                "name": "file",
                "description": null,
                "type": null
              },
              {
                "name": "fileParameterName",
                "description": null,
                "type": null
              },
              {
                "name": "queryStringParams",
                "description": null,
                "type": null
              },
              {
                "name": "onComplete",
                "description": null,
                "type": null
              },
              {
                "name": "onError",
                "description": null,
                "type": null
              },
              {
                "name": "onProgress",
                "description": null,
                "type": null
              },
              {
                "name": "uploadUrl",
                "description": null,
                "type": null
              },
              {
                "name": "xhrSettings",
                "description": null,
                "type": null
              }
            ],
            "returns": {
              "description": "XHR Handle to abort transfer",
              "type": null
            },
            "description": null
          },
          {
            "name": "downloadSelection",
            "docblock": "@param userSelection UserSelection A Pydio DataModel with selected files",
            "modifiers": [],
            "params": [
              {
                "name": "userSelection",
                "description": "UserSelection A Pydio DataModel with selected files",
                "type": null
              }
            ],
            "returns": null,
            "description": null
          },
          {
            "name": "uploadPresigned",
            "docblock": "Generate presigned and use it for uploads\n@param file\n@param path\n@param onComplete\n@param onError\n@param onProgress\n@return {Promise<any>}",
            "modifiers": [],
            "params": [
              {
                "name": "file",
                "description": null,
                "type": null
              },
              {
                "name": "path",
                "description": null,
                "type": null
              },
              {
                "name": "onComplete",
                "description": null,
                "type": null
              },
              {
                "name": "onError",
                "description": null,
                "type": null
              },
              {
                "name": "onProgress",
                "description": null,
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "Promise"
              }
            },
            "description": "Generate presigned and use it for uploads"
          },
          {
            "name": "uploadMultipart",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "file",
                "type": null
              },
              {
                "name": "path",
                "type": null
              },
              {
                "name": "onComplete",
                "type": null
              },
              {
                "name": "onError",
                "type": null
              },
              {
                "name": "onProgress",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "buildPresignedGetUrl",
            "docblock": "Send a request to the server to get a usable presigned url.\n\n@param node AjxpNode\n@param callback Function\n@param presetType String\n@param bucketParams\n@param attachmentName\n@return {Promise}|null Return a Promise if callback is null, or call the callback",
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "description": "AjxpNode",
                "type": null
              },
              {
                "name": "callback",
                "description": "Function",
                "type": null
              },
              {
                "name": "presetType",
                "description": "String",
                "type": null
              },
              {
                "name": "bucketParams",
                "description": null,
                "type": null
              },
              {
                "name": "attachmentName",
                "description": null,
                "type": null
              }
            ],
            "returns": {
              "description": "|null Return a Promise if callback is null, or call the callback",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Send a request to the server to get a usable presigned url."
          },
          {
            "name": "getPlainContent",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              },
              {
                "name": "contentCallback",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "postPlainTextContent",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "nodePath",
                "type": null
              },
              {
                "name": "content",
                "type": null
              },
              {
                "name": "finishedCallback",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "openVersion",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              },
              {
                "name": "versionId",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "revertToVersion",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              },
              {
                "name": "versionId",
                "type": null
              },
              {
                "name": "callback",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "detectMinisiteSession",
            "docblock": "Detect a minisite_session parameter in the URL\n@param serverAccess\n@returns string|bool",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "serverAccess",
                "description": null,
                "type": null
              }
            ],
            "returns": {
              "description": "string|bool",
              "type": null
            },
            "description": "Detect a minisite_session parameter in the URL"
          },
          {
            "name": "supportsUpload",
            "docblock": "Detects if current browser supports HTML5 Upload.\n@returns boolean",
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": {
              "description": "boolean",
              "type": null
            },
            "description": "Detects if current browser supports HTML5 Upload."
          },
          {
            "name": "getClient",
            "docblock": "Instanciate a PydioApi client if it's not already instanciated and return it.\n@returns PydioApi",
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": {
              "description": "PydioApi",
              "type": null
            },
            "description": "Instanciate a PydioApi client if it's not already instanciated and return it."
          },
          {
            "name": "loadLibrary",
            "docblock": "Load a javascript library\n@param fileName String\n@param onLoadedCode Function Callback\n@param aSync Boolean load library asynchroneously",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "fileName",
                "description": "String",
                "type": null
              },
              {
                "name": "onLoadedCode",
                "description": "Function Callback",
                "type": null
              },
              {
                "name": "aSync",
                "description": "Boolean load library asynchroneously",
                "type": null
              }
            ],
            "returns": null,
            "description": "Load a javascript library"
          },
          {
            "name": "switchLanguage",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "lang",
                "type": null
              },
              {
                "name": "completeCallback",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "core/http/PydioUsersApi.es6": [
      {
        "description": "",
        "displayName": "User",
        "methods": [
          {
            "name": "constructor",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "id",
                "type": null
              },
              {
                "name": "label",
                "type": null
              },
              {
                "name": "type",
                "type": null
              },
              {
                "name": "group",
                "type": null
              },
              {
                "name": "avatar",
                "type": null
              },
              {
                "name": "temporary",
                "type": null
              },
              {
                "name": "external",
                "type": null
              },
              {
                "name": "extendedLabel",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "setIdmUser",
            "docblock": "@param idmUser {IdmUser}",
            "modifiers": [],
            "params": [
              {
                "name": "idmUser",
                "description": "{IdmUser}",
                "type": null
              }
            ],
            "returns": null,
            "description": null
          },
          {
            "name": "fromIdmUser",
            "docblock": "@param idmUser {IdmUser}\n@return {User}",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "idmUser",
                "description": "{IdmUser}",
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "User"
              }
            },
            "description": null
          },
          {
            "name": "fromObject",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "user",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "asObject",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "getUuid",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "getId",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "getLabel",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "setLabel",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "label",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getGraph",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "setGraph",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "graph",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getType",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "getGroup",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "getAvatar",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "setAvatar",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "avatar",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getTemporary",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "getExternal",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "getExtendedLabel",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "isLoading",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "setLoaded",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "setLoading",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "setLocal",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "isLocal",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "setNotFound",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "isNotFound",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "isPublic",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "require": "const PydioUsersApi = require('pydio/http/users-api')"
      },
      {
        "description": "",
        "displayName": "UsersApi",
        "methods": [
          {
            "name": "saveSelectionSupported",
            "docblock": "@return {boolean}",
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": {
              "description": null,
              "type": {
                "name": "boolean"
              }
            },
            "description": null
          },
          {
            "name": "loadPublicData",
            "docblock": "@param userObject {User}\n@param callback Function\n@param errorCallback Function",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "userObject",
                "description": "{User}",
                "type": null
              },
              {
                "name": "callback",
                "description": "Function",
                "type": null
              },
              {
                "name": "errorCallback",
                "description": "Function",
                "type": null
              }
            ],
            "returns": null,
            "description": null
          },
          {
            "name": "loadLocalData",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "userObject",
                "type": null
              },
              {
                "name": "callback",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "avatarFromExternalProvider",
            "docblock": "Try to load avatar from plugin\n@param userObject\n@param callback",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "userObject",
                "description": null,
                "type": null
              },
              {
                "name": "callback",
                "description": null,
                "type": null
              }
            ],
            "returns": null,
            "description": "Try to load avatar from plugin"
          },
          {
            "name": "buildUserAvatarUrl",
            "docblock": "Build avatar url from avatarId\n@param userId\n@param avatarId\n@returns {*}",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "userId",
                "description": null,
                "type": null
              },
              {
                "name": "avatarId",
                "description": null,
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "mixed"
              }
            },
            "description": "Build avatar url from avatarId"
          },
          {
            "name": "getPublicDataCache",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "getUserPromise",
            "docblock": "@param userId string\n@param idmUser {IdmUser}\n@return {Promise<any>}",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "userId",
                "description": "string",
                "type": null
              },
              {
                "name": "idmUser",
                "description": "{IdmUser}",
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "Promise"
              }
            },
            "description": null
          }
        ]
      }
    ],
    "core/http/PydioWebSocket.es6": [
      {
        "description": "WebSocket client",
        "displayName": "PydioWebSocket",
        "methods": [
          {
            "name": "constructor",
            "docblock": "@param pydioObject Pydio",
            "modifiers": [],
            "params": [
              {
                "name": "pydioObject",
                "description": "Pydio",
                "type": null
              }
            ],
            "returns": null,
            "description": null
          },
          {
            "name": "isOpen",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "close",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "open",
            "docblock": "Open a connection",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Open a connection"
          },
          {
            "name": "refresh",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "parseWebsocketMessage",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "msg",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "parseEventNode",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "obj",
                "type": null
              },
              {
                "name": "currentRepoId",
                "type": null
              },
              {
                "name": "currentRepoSlug",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "subscribeJWT",
            "docblock": "@param ws {ReconnectingWebSocket}\n@param withRetries bool\n@param retry integer\n@return {*|Promise.<string>}",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "ws",
                "description": "{ReconnectingWebSocket}",
                "type": null
              },
              {
                "name": "withRetries",
                "description": "bool",
                "type": null
              },
              {
                "name": "retry",
                "description": "integer",
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "union",
                "value": [
                  null,
                  null
                ]
              }
            },
            "description": null
          },
          {
            "name": "logClose",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const PydioWebSocket = require('pydio/http/websocket')"
      }
    ],
    "core/http/ResourcesManager.es6": [
      {
        "description": "A manager that can handle the loading of JS, CSS and checks dependencies",
        "displayName": "ResourcesManager",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructor",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructor"
          },
          {
            "name": "addJSResource",
            "docblock": "Adds a Javascript resource\n@param fileName String\n@param className String",
            "modifiers": [],
            "params": [
              {
                "name": "fileName",
                "description": "String",
                "type": null
              },
              {
                "name": "className",
                "description": "String",
                "type": null
              }
            ],
            "returns": null,
            "description": "Adds a Javascript resource"
          },
          {
            "name": "addCSSResource",
            "docblock": "Adds a CSS resource\n@param fileName String",
            "modifiers": [],
            "params": [
              {
                "name": "fileName",
                "description": "String",
                "type": null
              }
            ],
            "returns": null,
            "description": "Adds a CSS resource"
          },
          {
            "name": "addGuiForm",
            "docblock": "Adds a FORM from html snipper\n@param formId String\n@param htmlSnippet String",
            "modifiers": [],
            "params": [
              {
                "name": "formId",
                "description": "String",
                "type": null
              },
              {
                "name": "htmlSnippet",
                "description": "String",
                "type": null
              }
            ],
            "returns": null,
            "description": "Adds a FORM from html snipper"
          },
          {
            "name": "addDependency",
            "docblock": "Add a dependency to another plugin\n@param data Object",
            "modifiers": [],
            "params": [
              {
                "name": "data",
                "description": "Object",
                "type": null
              }
            ],
            "returns": null,
            "description": "Add a dependency to another plugin"
          },
          {
            "name": "hasDependencies",
            "docblock": "Check if some dependencies must be loaded before\n@returns Boolean",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "Boolean",
              "type": null
            },
            "description": "Check if some dependencies must be loaded before"
          },
          {
            "name": "load",
            "docblock": "Load resources\n@param resourcesRegistry Pydio resources registry",
            "modifiers": [],
            "params": [
              {
                "name": "resourcesRegistry",
                "description": "Pydio resources registry",
                "type": null
              },
              {
                "name": "jsAutoloadOnly"
              },
              {
                "name": "callback"
              }
            ],
            "returns": null,
            "description": "Load resources"
          },
          {
            "name": "loadJSResource",
            "docblock": "Load a javascript file\n@param fileName String\n@param className String\n@param callback Function\n@param aSync Boolean",
            "modifiers": [],
            "params": [
              {
                "name": "fileName",
                "description": "String",
                "type": null
              },
              {
                "name": "className",
                "description": "String",
                "type": null
              },
              {
                "name": "callback",
                "description": "Function",
                "type": null
              },
              {
                "name": "aSync",
                "description": "Boolean",
                "type": null
              }
            ],
            "returns": null,
            "description": "Load a javascript file"
          },
          {
            "name": "loadCSSResource",
            "docblock": "Load a CSS file\n@param fileName String",
            "modifiers": [],
            "params": [
              {
                "name": "fileName",
                "description": "String",
                "type": null
              }
            ],
            "returns": null,
            "description": "Load a CSS file"
          },
          {
            "name": "loadFromXmlNode",
            "docblock": "Load the resources from XML\n@param node XMLNode",
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "description": "XMLNode",
                "type": null
              }
            ],
            "returns": null,
            "description": "Load the resources from XML"
          },
          {
            "name": "addImageLibrary",
            "docblock": "@param aliasName\n@param aliasPath\n@todo MOVE OUTSIDE?",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "aliasName",
                "description": null,
                "type": null
              },
              {
                "name": "aliasPath",
                "description": null,
                "type": null
              }
            ],
            "returns": null,
            "description": null
          },
          {
            "name": "resolveImageSource",
            "docblock": "Find the default images path\n@param src Icon source\n@param defaultPath Default path, can contain ICON_SIZE\n@param size Integer size optional\n@returns string",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "src",
                "description": "Icon source",
                "type": null
              },
              {
                "name": "defaultPath",
                "description": "Default path, can contain ICON_SIZE",
                "type": null
              },
              {
                "name": "size",
                "description": "Integer size optional",
                "type": null
              }
            ],
            "returns": {
              "description": "string",
              "type": null
            },
            "description": "Find the default images path"
          },
          {
            "name": "loadAutoLoadResources",
            "docblock": "Check if resources are tagged autoload and load them\n@param registry DOMDocument XML Registry",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "registry",
                "description": "DOMDocument XML Registry",
                "type": null
              }
            ],
            "returns": null,
            "description": "Check if resources are tagged autoload and load them"
          },
          {
            "name": "getFileOrFallback",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "requireLib",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "module",
                "type": null
              },
              {
                "name": "promise",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "moduleIsAvailable",
            "docblock": "Check if a module is registered (not necessarily loaded yet)\n@param className\n@returns {Map|boolean}",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "className",
                "description": null,
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "union",
                "value": [
                  "Map",
                  "boolean"
                ]
              }
            },
            "description": "Check if a module is registered (not necessarily loaded yet)"
          },
          {
            "name": "loadClassesAndApply",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "classNames",
                "type": null
              },
              {
                "name": "callbackFunc",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "loadClass",
            "docblock": "Load class and return as a promise - do not catch error\n@param className\n@return {*|Promise|PromiseLike<T>|Promise<T>}",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "className",
                "description": null,
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "union",
                "value": [
                  null,
                  "Promise",
                  null,
                  null
                ]
              }
            },
            "description": "Load class and return as a promise - do not catch error"
          },
          {
            "name": "detectModuleToLoadAndApply",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "callbackString",
                "type": null
              },
              {
                "name": "callbackFunc",
                "type": null
              },
              {
                "name": "async",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "loadScriptSync",
            "docblock": null,
            "modifiers": [
              "static",
              "async"
            ],
            "params": [
              {
                "name": "name",
                "type": null
              },
              {
                "name": "callback",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const ResourcesManager = require('pydio/http/resources-manager')"
      }
    ],
    "core/http/RestClient.es6": [
      {
        "description": "",
        "displayName": "JwtApiClient",
        "methods": [
          {
            "name": "constructor",
            "docblock": "@param pydioObject {Pydio}",
            "modifiers": [],
            "params": [
              {
                "name": "pydioObject",
                "description": "{Pydio}",
                "type": null
              }
            ],
            "returns": null,
            "description": null
          },
          {
            "name": "jwtEndpoint",
            "docblock": "@param request {RestFrontSessionRequest}\n@return {Promise}",
            "modifiers": [],
            "params": [
              {
                "name": "request",
                "description": "{RestFrontSessionRequest}",
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "Promise"
              }
            },
            "description": null
          },
          {
            "name": "storeJwtLocally",
            "docblock": "@param frontJwtResponse {RestFrontSessionResponse}",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "frontJwtResponse",
                "description": "{RestFrontSessionResponse}",
                "type": null
              }
            ],
            "returns": null,
            "description": null
          },
          {
            "name": "sessionLogout",
            "docblock": "Call session endpoint for destroying session",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Call session endpoint for destroying session"
          },
          {
            "name": "sessionAuth",
            "docblock": "Call session endpoint for destroying session",
            "modifiers": [],
            "params": [
              {
                "name": "requestID"
              }
            ],
            "returns": null,
            "description": "Call session endpoint for destroying session"
          },
          {
            "name": "jwtFromAuthorizationCode",
            "docblock": "Create AuthInfo request with type \"authorization_code\"\n@param code string\n@return {Promise<any>}",
            "modifiers": [],
            "params": [
              {
                "name": "code",
                "description": "string",
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "Promise"
              }
            },
            "description": "Create AuthInfo request with type \"authorization_code\""
          },
          {
            "name": "jwtFromCredentials",
            "docblock": "Create AuthInfo request with type \"credentials\"\n@param login string\n@param password string\n@param reloadRegistry bool\n@return {Promise<any>}",
            "modifiers": [],
            "params": [
              {
                "name": "login",
                "description": "string",
                "type": null
              },
              {
                "name": "password",
                "description": "string",
                "type": null
              },
              {
                "name": "reloadRegistry",
                "description": "bool",
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "Promise"
              }
            },
            "description": "Create AuthInfo request with type \"credentials\""
          },
          {
            "name": "jwtWithAuthInfo",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "authInfo",
                "type": null
              },
              {
                "name": "reloadRegistry",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getOrUpdateJwt",
            "docblock": "@return {Promise}",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": null,
              "type": {
                "name": "Promise"
              }
            },
            "description": null
          },
          {
            "name": "callApi",
            "docblock": "Invokes the REST service using the supplied settings and parameters.\n@param {String} path The base URL to invoke.\n@param {String} httpMethod The HTTP method to use.\n@param {Object.<String, String>} pathParams A map of path parameters and their values.\n@param {Object.<String, Object>} queryParams A map of query parameters and their values.\n@param {Object.<String, Object>} headerParams A map of header parameters and their values.\n@param {Object.<String, Object>} formParams A map of form parameters and their values.\n@param {Object} bodyParam The value to pass as the request body.\n@param {Array.<String>} authNames An array of authentication type names.\n@param {Array.<String>} contentTypes An array of request MIME types.\n@param {Array.<String>} accepts An array of acceptable response MIME types.\n@param {(String|Array|ObjectFunction)} returnType The required type to return; can be a string for simple types or the\nconstructor for a complex type.\n@returns {Promise} A {@link https://www.promisejs.org/|Promise} object.",
            "modifiers": [],
            "params": [
              {
                "name": "path",
                "description": "The base URL to invoke.",
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "httpMethod",
                "description": "The HTTP method to use.",
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "pathParams",
                "description": "A map of path parameters and their values.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "queryParams",
                "description": "A map of query parameters and their values.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "headerParams",
                "description": "A map of header parameters and their values.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "formParams",
                "description": "A map of form parameters and their values.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "bodyParam",
                "description": "The value to pass as the request body.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "authNames",
                "description": "An array of authentication type names.",
                "type": {
                  "name": "Array"
                }
              },
              {
                "name": "contentTypes",
                "description": "An array of request MIME types.",
                "type": {
                  "name": "Array"
                }
              },
              {
                "name": "accepts",
                "description": "An array of acceptable response MIME types.",
                "type": {
                  "name": "Array"
                }
              },
              {
                "name": "returnType",
                "description": "The required type to return; can be a string for simple types or the\nconstructor for a complex type.",
                "type": {
                  "name": "union",
                  "value": [
                    "String",
                    "Array",
                    "ObjectFunction"
                  ]
                }
              }
            ],
            "returns": {
              "description": "A {@link https://www.promisejs.org/|Promise} object.",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Invokes the REST service using the supplied settings and parameters."
          },
          {
            "name": "handleError",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "reason",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "userJob",
            "docblock": "@param name\n@param parameters\n@return {Promise}",
            "modifiers": [],
            "params": [
              {
                "name": "name",
                "description": null,
                "type": null
              },
              {
                "name": "parameters",
                "description": null,
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "Promise"
              }
            },
            "description": null
          },
          {
            "name": "getIdmApi",
            "docblock": "@return {IdmApi}",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": null,
              "type": {
                "name": "IdmApi"
              }
            },
            "description": null
          }
        ]
      }
    ],
    "core/http/SearchApi.es6": [
      {
        "description": "",
        "displayName": "SearchApi",
        "methods": [
          {
            "name": "constructor",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "pydio",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "search",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "values",
                "type": null
              },
              {
                "name": "scope",
                "type": null
              },
              {
                "name": "limit",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "computePathPrefix",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "scope",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "autoQuote",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "text",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const SearchApi = require('pydio/http/search-api')"
      }
    ],
    "core/http/gen/ApiClient.js": [
      {
        "description": "Manages low level client-server communications, parameter marshalling, etc. There should not be any need for an\napplication to use this class directly - the *Api and model classes provide the public API for the service. The\ncontents of this file should be regarded as internal but are documented for completeness.\n@alias module:ApiClient\n@class",
        "displayName": "ApiClient",
        "methods": [
          {
            "name": "constructor",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "paramToString",
            "docblock": "Returns a string representation for an actual parameter.\n@param param The actual parameter.\n@returns {String} The string representation of <code>param</code>.",
            "modifiers": [],
            "params": [
              {
                "name": "param",
                "description": "The actual parameter.",
                "type": null
              }
            ],
            "returns": {
              "description": "The string representation of <code>param</code>.",
              "type": {
                "name": "String"
              }
            },
            "description": "Returns a string representation for an actual parameter."
          },
          {
            "name": "buildUrl",
            "docblock": "Builds full URL by appending the given path to the base URL and replacing path parameter place-holders with parameter values.\nNOTE: query parameters are not handled here.\n@param {String} path The path to append to the base URL.\n@param {Object} pathParams The parameter values to append.\n@returns {String} The encoded path with parameter values substituted.",
            "modifiers": [],
            "params": [
              {
                "name": "path",
                "description": "The path to append to the base URL.",
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "pathParams",
                "description": "The parameter values to append.",
                "type": {
                  "name": "Object"
                }
              }
            ],
            "returns": {
              "description": "The encoded path with parameter values substituted.",
              "type": {
                "name": "String"
              }
            },
            "description": "Builds full URL by appending the given path to the base URL and replacing path parameter place-holders with parameter values.\nNOTE: query parameters are not handled here."
          },
          {
            "name": "isJsonMime",
            "docblock": "Checks whether the given content type represents JSON.<br>\nJSON content type examples:<br>\n<ul>\n<li>application/json</li>\n<li>application/json; charset=UTF8</li>\n<li>APPLICATION/JSON</li>\n</ul>\n@param {String} contentType The MIME content type to check.\n@returns {Boolean} <code>true</code> if <code>contentType</code> represents JSON, otherwise <code>false</code>.",
            "modifiers": [],
            "params": [
              {
                "name": "contentType",
                "description": "The MIME content type to check.",
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "<code>true</code> if <code>contentType</code> represents JSON, otherwise <code>false</code>.",
              "type": {
                "name": "Boolean"
              }
            },
            "description": "Checks whether the given content type represents JSON.<br>\nJSON content type examples:<br>\n<ul>\n<li>application/json</li>\n<li>application/json; charset=UTF8</li>\n<li>APPLICATION/JSON</li>\n</ul>"
          },
          {
            "name": "jsonPreferredMime",
            "docblock": "Chooses a content type from the given array, with JSON preferred; i.e. return JSON if included, otherwise return the first.\n@param {Array.<String>} contentTypes\n@returns {String} The chosen content type, preferring JSON.",
            "modifiers": [],
            "params": [
              {
                "name": "contentTypes",
                "description": null,
                "type": {
                  "name": "Array"
                }
              }
            ],
            "returns": {
              "description": "The chosen content type, preferring JSON.",
              "type": {
                "name": "String"
              }
            },
            "description": "Chooses a content type from the given array, with JSON preferred; i.e. return JSON if included, otherwise return the first."
          },
          {
            "name": "isFileParam",
            "docblock": "Checks whether the given parameter value represents file-like content.\n@param param The parameter to check.\n@returns {Boolean} <code>true</code> if <code>param</code> represents a file.",
            "modifiers": [],
            "params": [
              {
                "name": "param",
                "description": "The parameter to check.",
                "type": null
              }
            ],
            "returns": {
              "description": "<code>true</code> if <code>param</code> represents a file.",
              "type": {
                "name": "Boolean"
              }
            },
            "description": "Checks whether the given parameter value represents file-like content."
          },
          {
            "name": "normalizeParams",
            "docblock": "Normalizes parameter values:\n<ul>\n<li>remove nils</li>\n<li>keep files and arrays</li>\n<li>format to string with `paramToString` for other cases</li>\n</ul>\n@param {Object.<String, Object>} params The parameters as object properties.\n@returns {Object.<String, Object>} normalized parameters.",
            "modifiers": [],
            "params": [
              {
                "name": "params",
                "description": "The parameters as object properties.",
                "type": {
                  "name": "Object"
                }
              }
            ],
            "returns": {
              "description": "normalized parameters.",
              "type": {
                "name": "Object"
              }
            },
            "description": "Normalizes parameter values:\n<ul>\n<li>remove nils</li>\n<li>keep files and arrays</li>\n<li>format to string with `paramToString` for other cases</li>\n</ul>"
          },
          {
            "name": "buildCollectionParam",
            "docblock": "Builds a string representation of an array-type actual parameter, according to the given collection format.\n@param {Array} param An array parameter.\n@param {module:ApiClient.CollectionFormatEnum} collectionFormat The array element separator strategy.\n@returns {String|Array} A string representation of the supplied collection, using the specified delimiter. Returns\n<code>param</code> as is if <code>collectionFormat</code> is <code>multi</code>.",
            "modifiers": [],
            "params": [
              {
                "name": "param",
                "description": "An array parameter.",
                "type": {
                  "name": "Array"
                }
              },
              {
                "name": "collectionFormat",
                "description": "The array element separator strategy.",
                "type": {
                  "name": "module:ApiClient.CollectionFormatEnum"
                }
              }
            ],
            "returns": {
              "description": "A string representation of the supplied collection, using the specified delimiter. Returns\n<code>param</code> as is if <code>collectionFormat</code> is <code>multi</code>.",
              "type": {
                "name": "union",
                "value": [
                  "String",
                  "Array"
                ]
              }
            },
            "description": "Builds a string representation of an array-type actual parameter, according to the given collection format."
          },
          {
            "name": "applyAuthToRequest",
            "docblock": "Applies authentication headers to the request.\n@param {Object} request The request object created by a <code>superagent()</code> call.\n@param {Array.<String>} authNames An array of authentication method names.",
            "modifiers": [],
            "params": [
              {
                "name": "request",
                "description": "The request object created by a <code>superagent()</code> call.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "authNames",
                "description": "An array of authentication method names.",
                "type": {
                  "name": "Array"
                }
              }
            ],
            "returns": null,
            "description": "Applies authentication headers to the request."
          },
          {
            "name": "deserialize",
            "docblock": "Deserializes an HTTP response body into a value of the specified type.\n@param {Object} response A SuperAgent response object.\n@param {(String|Array.<String>|Object.<String, Object>|Function)} returnType The type to return. Pass a string for simple types\nor the constructor function for a complex type. Pass an array containing the type name to return an array of that type. To\nreturn an object, pass an object with one property whose name is the key type and whose value is the corresponding value type:\nall properties on <code>data<code> will be converted to this type.\n@returns A value of the specified type.",
            "modifiers": [],
            "params": [
              {
                "name": "response",
                "description": "A SuperAgent response object.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "returnType",
                "description": "The type to return. Pass a string for simple types\nor the constructor function for a complex type. Pass an array containing the type name to return an array of that type. To\nreturn an object, pass an object with one property whose name is the key type and whose value is the corresponding value type:\nall properties on <code>data<code> will be converted to this type.",
                "type": {
                  "name": "union",
                  "value": [
                    "String",
                    null,
                    null,
                    "Function"
                  ]
                }
              }
            ],
            "returns": {
              "description": "A value of the specified type.",
              "type": null
            },
            "description": "Deserializes an HTTP response body into a value of the specified type."
          },
          {
            "name": "callApi",
            "docblock": "Invokes the REST service using the supplied settings and parameters.\n@param {String} path The base URL to invoke.\n@param {String} httpMethod The HTTP method to use.\n@param {Object.<String, String>} pathParams A map of path parameters and their values.\n@param {Object.<String, Object>} queryParams A map of query parameters and their values.\n@param {Object.<String, Object>} headerParams A map of header parameters and their values.\n@param {Object.<String, Object>} formParams A map of form parameters and their values.\n@param {Object} bodyParam The value to pass as the request body.\n@param {Array.<String>} authNames An array of authentication type names.\n@param {Array.<String>} contentTypes An array of request MIME types.\n@param {Array.<String>} accepts An array of acceptable response MIME types.\n@param {(String|Array|ObjectFunction)} returnType The required type to return; can be a string for simple types or the\nconstructor for a complex type.\n@returns {Promise} A {@link https://www.promisejs.org/|Promise} object.",
            "modifiers": [],
            "params": [
              {
                "name": "path",
                "description": "The base URL to invoke.",
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "httpMethod",
                "description": "The HTTP method to use.",
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "pathParams",
                "description": "A map of path parameters and their values.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "queryParams",
                "description": "A map of query parameters and their values.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "headerParams",
                "description": "A map of header parameters and their values.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "formParams",
                "description": "A map of form parameters and their values.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "bodyParam",
                "description": "The value to pass as the request body.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "authNames",
                "description": "An array of authentication type names.",
                "type": {
                  "name": "Array"
                }
              },
              {
                "name": "contentTypes",
                "description": "An array of request MIME types.",
                "type": {
                  "name": "Array"
                }
              },
              {
                "name": "accepts",
                "description": "An array of acceptable response MIME types.",
                "type": {
                  "name": "Array"
                }
              },
              {
                "name": "returnType",
                "description": "The required type to return; can be a string for simple types or the\nconstructor for a complex type.",
                "type": {
                  "name": "union",
                  "value": [
                    "String",
                    "Array",
                    "ObjectFunction"
                  ]
                }
              }
            ],
            "returns": {
              "description": "A {@link https://www.promisejs.org/|Promise} object.",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Invokes the REST service using the supplied settings and parameters."
          },
          {
            "name": "parseDate",
            "docblock": "Parses an ISO-8601 string representation of a date value.\n@param {String} str The date value as a string.\n@returns {Date} The parsed date object.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "str",
                "description": "The date value as a string.",
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "The parsed date object.",
              "type": {
                "name": "Date"
              }
            },
            "description": "Parses an ISO-8601 string representation of a date value."
          },
          {
            "name": "convertToType",
            "docblock": "Converts a value to the specified type.\n@param {(String|Object)} data The data to convert, as a string or object.\n@param {(String|Array.<String>|Object.<String, Object>|Function)} type The type to return. Pass a string for simple types\nor the constructor function for a complex type. Pass an array containing the type name to return an array of that type. To\nreturn an object, pass an object with one property whose name is the key type and whose value is the corresponding value type:\nall properties on <code>data<code> will be converted to this type.\n@returns An instance of the specified type or null or undefined if data is null or undefined.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The data to convert, as a string or object.",
                "type": {
                  "name": "union",
                  "value": [
                    "String",
                    "Object"
                  ]
                }
              },
              {
                "name": "type",
                "description": "The type to return. Pass a string for simple types\nor the constructor function for a complex type. Pass an array containing the type name to return an array of that type. To\nreturn an object, pass an object with one property whose name is the key type and whose value is the corresponding value type:\nall properties on <code>data<code> will be converted to this type.",
                "type": {
                  "name": "union",
                  "value": [
                    "String",
                    null,
                    null,
                    "Function"
                  ]
                }
              }
            ],
            "returns": {
              "description": "An instance of the specified type or null or undefined if data is null or undefined.",
              "type": null
            },
            "description": "Converts a value to the specified type."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a new map or array model from REST data.\n@param data {Object|Array} The REST data.\n@param obj {Object|Array} The target object or array.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "{Object|Array} The REST data.",
                "type": null
              },
              {
                "name": "obj",
                "description": "{Object|Array} The target object or array.",
                "type": null
              },
              {
                "name": "itemType"
              }
            ],
            "returns": null,
            "description": "Constructs a new map or array model from REST data."
          }
        ]
      }
    ],
    "core/http/gen/api/ACLServiceApi.js": [
      {
        "description": "ACLService service.\n@module api/ACLServiceApi\n@version 1.0",
        "displayName": "ACLServiceApi",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new ACLServiceApi. \n@alias module:api/ACLServiceApi\n@class\n@param {module:ApiClient} apiClient Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
            "modifiers": [],
            "params": [
              {
                "name": "apiClient",
                "description": "Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
                "type": {
                  "name": "module:ApiClient"
                }
              }
            ],
            "returns": null,
            "description": "Constructs a new ACLServiceApi."
          },
          {
            "name": "deleteAclWithHttpInfo",
            "docblock": "Delete one or more ACLs\n@param {module:model/IdmACL} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestDeleteResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/IdmACL"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestDeleteResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Delete one or more ACLs"
          },
          {
            "name": "deleteAcl",
            "docblock": "Delete one or more ACLs\n@param {module:model/IdmACL} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestDeleteResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/IdmACL"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestDeleteResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Delete one or more ACLs"
          },
          {
            "name": "putAclWithHttpInfo",
            "docblock": "Store an ACL\n@param {module:model/IdmACL} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/IdmACL} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/IdmACL"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/IdmACL} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Store an ACL"
          },
          {
            "name": "putAcl",
            "docblock": "Store an ACL\n@param {module:model/IdmACL} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/IdmACL}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/IdmACL"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/IdmACL}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Store an ACL"
          },
          {
            "name": "searchAclsWithHttpInfo",
            "docblock": "Search Acls\n@param {module:model/RestSearchACLRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestACLCollection} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestSearchACLRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestACLCollection} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Search Acls"
          },
          {
            "name": "searchAcls",
            "docblock": "Search Acls\n@param {module:model/RestSearchACLRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestACLCollection}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestSearchACLRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestACLCollection}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Search Acls"
          }
        ]
      }
    ],
    "core/http/gen/api/ActivityServiceApi.js": [
      {
        "description": "ActivityService service.\n@module api/ActivityServiceApi\n@version 1.0",
        "displayName": "ActivityServiceApi",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new ActivityServiceApi. \n@alias module:api/ActivityServiceApi\n@class\n@param {module:ApiClient} apiClient Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
            "modifiers": [],
            "params": [
              {
                "name": "apiClient",
                "description": "Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
                "type": {
                  "name": "module:ApiClient"
                }
              }
            ],
            "returns": null,
            "description": "Constructs a new ActivityServiceApi."
          },
          {
            "name": "searchSubscriptionsWithHttpInfo",
            "docblock": "Load subscriptions to other users/nodes feeds\n@param {module:model/ActivitySearchSubscriptionsRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestSubscriptionsCollection} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/ActivitySearchSubscriptionsRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestSubscriptionsCollection} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Load subscriptions to other users/nodes feeds"
          },
          {
            "name": "searchSubscriptions",
            "docblock": "Load subscriptions to other users/nodes feeds\n@param {module:model/ActivitySearchSubscriptionsRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestSubscriptionsCollection}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/ActivitySearchSubscriptionsRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestSubscriptionsCollection}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Load subscriptions to other users/nodes feeds"
          },
          {
            "name": "streamWithHttpInfo",
            "docblock": "Load the the feeds of the currently logged user\n@param {module:model/ActivityStreamActivitiesRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ActivityObject} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/ActivityStreamActivitiesRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ActivityObject} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Load the the feeds of the currently logged user"
          },
          {
            "name": "stream",
            "docblock": "Load the the feeds of the currently logged user\n@param {module:model/ActivityStreamActivitiesRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ActivityObject}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/ActivityStreamActivitiesRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ActivityObject}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Load the the feeds of the currently logged user"
          },
          {
            "name": "subscribeWithHttpInfo",
            "docblock": "Manage subscriptions to other users/nodes feeds\n@param {module:model/ActivitySubscription} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ActivitySubscription} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/ActivitySubscription"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ActivitySubscription} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Manage subscriptions to other users/nodes feeds"
          },
          {
            "name": "subscribe",
            "docblock": "Manage subscriptions to other users/nodes feeds\n@param {module:model/ActivitySubscription} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ActivitySubscription}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/ActivitySubscription"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ActivitySubscription}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Manage subscriptions to other users/nodes feeds"
          }
        ]
      }
    ],
    "core/http/gen/api/AdminTreeServiceApi.js": [
      {
        "description": "AdminTreeService service.\n@module api/AdminTreeServiceApi\n@version 1.0",
        "displayName": "AdminTreeServiceApi",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new AdminTreeServiceApi. \n@alias module:api/AdminTreeServiceApi\n@class\n@param {module:ApiClient} apiClient Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
            "modifiers": [],
            "params": [
              {
                "name": "apiClient",
                "description": "Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
                "type": {
                  "name": "module:ApiClient"
                }
              }
            ],
            "returns": null,
            "description": "Constructs a new AdminTreeServiceApi."
          },
          {
            "name": "listAdminTreeWithHttpInfo",
            "docblock": "List files and folders starting at the root (first level lists the datasources)\n@param {module:model/TreeListNodesRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestNodesCollection} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/TreeListNodesRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestNodesCollection} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List files and folders starting at the root (first level lists the datasources)"
          },
          {
            "name": "listAdminTree",
            "docblock": "List files and folders starting at the root (first level lists the datasources)\n@param {module:model/TreeListNodesRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestNodesCollection}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/TreeListNodesRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestNodesCollection}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List files and folders starting at the root (first level lists the datasources)"
          },
          {
            "name": "statAdminTreeWithHttpInfo",
            "docblock": "Read a node information inside the admin tree\n@param {module:model/TreeReadNodeRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/TreeReadNodeResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/TreeReadNodeRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/TreeReadNodeResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Read a node information inside the admin tree"
          },
          {
            "name": "statAdminTree",
            "docblock": "Read a node information inside the admin tree\n@param {module:model/TreeReadNodeRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/TreeReadNodeResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/TreeReadNodeRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/TreeReadNodeResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Read a node information inside the admin tree"
          }
        ]
      }
    ],
    "core/http/gen/api/ChangeServiceApi.js": [
      {
        "description": "ChangeService service.\n@module api/ChangeServiceApi\n@version 1.0",
        "displayName": "ChangeServiceApi",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new ChangeServiceApi. \n@alias module:api/ChangeServiceApi\n@class\n@param {module:ApiClient} apiClient Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
            "modifiers": [],
            "params": [
              {
                "name": "apiClient",
                "description": "Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
                "type": {
                  "name": "module:ApiClient"
                }
              }
            ],
            "returns": null,
            "description": "Constructs a new ChangeServiceApi."
          },
          {
            "name": "getChangesWithHttpInfo",
            "docblock": "Get Changes\n@param {String} seqID \n@param {module:model/RestChangeRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestChangeCollection} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "seqID",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestChangeRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestChangeCollection} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Get Changes"
          },
          {
            "name": "getChanges",
            "docblock": "Get Changes\n@param {String} seqID \n@param {module:model/RestChangeRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestChangeCollection}",
            "modifiers": [],
            "params": [
              {
                "name": "seqID",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestChangeRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestChangeCollection}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Get Changes"
          }
        ]
      }
    ],
    "core/http/gen/api/ConfigServiceApi.js": [
      {
        "description": "ConfigService service.\n@module api/ConfigServiceApi\n@version 1.0",
        "displayName": "ConfigServiceApi",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new ConfigServiceApi. \n@alias module:api/ConfigServiceApi\n@class\n@param {module:ApiClient} apiClient Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
            "modifiers": [],
            "params": [
              {
                "name": "apiClient",
                "description": "Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
                "type": {
                  "name": "module:ApiClient"
                }
              }
            ],
            "returns": null,
            "description": "Constructs a new ConfigServiceApi."
          },
          {
            "name": "configFormsDiscoveryWithHttpInfo",
            "docblock": "Publish Forms definition for building screens in frontend\n@param {String} serviceName \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestDiscoveryResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "serviceName",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestDiscoveryResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Publish Forms definition for building screens in frontend"
          },
          {
            "name": "configFormsDiscovery",
            "docblock": "Publish Forms definition for building screens in frontend\n@param {String} serviceName \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestDiscoveryResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "serviceName",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestDiscoveryResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Publish Forms definition for building screens in frontend"
          },
          {
            "name": "controlServiceWithHttpInfo",
            "docblock": "[Not Implemented]  Start/Stop a service\n@param {module:model/RestControlServiceRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/CtlService} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestControlServiceRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/CtlService} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "[Not Implemented]  Start/Stop a service"
          },
          {
            "name": "controlService",
            "docblock": "[Not Implemented]  Start/Stop a service\n@param {module:model/RestControlServiceRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CtlService}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestControlServiceRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CtlService}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "[Not Implemented]  Start/Stop a service"
          },
          {
            "name": "createEncryptionKeyWithHttpInfo",
            "docblock": "Create a new master key\n@param {module:model/EncryptionAdminCreateKeyRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EncryptionAdminCreateKeyResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/EncryptionAdminCreateKeyRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EncryptionAdminCreateKeyResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Create a new master key"
          },
          {
            "name": "createEncryptionKey",
            "docblock": "Create a new master key\n@param {module:model/EncryptionAdminCreateKeyRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EncryptionAdminCreateKeyResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/EncryptionAdminCreateKeyRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EncryptionAdminCreateKeyResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Create a new master key"
          },
          {
            "name": "deleteDataSourceWithHttpInfo",
            "docblock": "Delete a datasource\n@param {String} name \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestDeleteDataSourceResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "name",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestDeleteDataSourceResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Delete a datasource"
          },
          {
            "name": "deleteDataSource",
            "docblock": "Delete a datasource\n@param {String} name \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestDeleteDataSourceResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "name",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestDeleteDataSourceResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Delete a datasource"
          },
          {
            "name": "deleteEncryptionKeyWithHttpInfo",
            "docblock": "Delete an existing master key\n@param {module:model/EncryptionAdminDeleteKeyRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EncryptionAdminDeleteKeyResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/EncryptionAdminDeleteKeyRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EncryptionAdminDeleteKeyResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Delete an existing master key"
          },
          {
            "name": "deleteEncryptionKey",
            "docblock": "Delete an existing master key\n@param {module:model/EncryptionAdminDeleteKeyRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EncryptionAdminDeleteKeyResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/EncryptionAdminDeleteKeyRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EncryptionAdminDeleteKeyResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Delete an existing master key"
          },
          {
            "name": "endpointsDiscoveryWithHttpInfo",
            "docblock": "Publish available endpoints\n@param {Object} opts Optional parameters\n@param {String} opts.endpointType \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestDiscoveryResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "opts",
                "description": "Optional parameters",
                "type": {
                  "name": "Object"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestDiscoveryResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Publish available endpoints"
          },
          {
            "name": "endpointsDiscovery",
            "docblock": "Publish available endpoints\n@param {Object} opts Optional parameters\n@param {String} opts.endpointType \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestDiscoveryResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "opts",
                "description": "Optional parameters",
                "type": {
                  "name": "Object"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestDiscoveryResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Publish available endpoints"
          },
          {
            "name": "exportEncryptionKeyWithHttpInfo",
            "docblock": "Export a master key for backup purpose, protected with a password\n@param {module:model/EncryptionAdminExportKeyRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EncryptionAdminExportKeyResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/EncryptionAdminExportKeyRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EncryptionAdminExportKeyResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Export a master key for backup purpose, protected with a password"
          },
          {
            "name": "exportEncryptionKey",
            "docblock": "Export a master key for backup purpose, protected with a password\n@param {module:model/EncryptionAdminExportKeyRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EncryptionAdminExportKeyResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/EncryptionAdminExportKeyRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EncryptionAdminExportKeyResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Export a master key for backup purpose, protected with a password"
          },
          {
            "name": "getConfigWithHttpInfo",
            "docblock": "Generic config Get using a full path in the config tree\n@param {String} fullPath \n@param {Object} opts Optional parameters\n@param {String} opts.data \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestConfiguration} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "fullPath",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "opts",
                "description": "Optional parameters",
                "type": {
                  "name": "Object"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestConfiguration} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Generic config Get using a full path in the config tree"
          },
          {
            "name": "getConfig",
            "docblock": "Generic config Get using a full path in the config tree\n@param {String} fullPath \n@param {Object} opts Optional parameters\n@param {String} opts.data \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestConfiguration}",
            "modifiers": [],
            "params": [
              {
                "name": "fullPath",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "opts",
                "description": "Optional parameters",
                "type": {
                  "name": "Object"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestConfiguration}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Generic config Get using a full path in the config tree"
          },
          {
            "name": "getDataSourceWithHttpInfo",
            "docblock": "Load datasource information\n@param {String} name \n@param {Object} opts Optional parameters\n@param {Boolean} opts.disabled \n@param {module:model/String} opts.storageType  (default to LOCAL)\n@param {String} opts.objectsServiceName \n@param {String} opts.objectsHost \n@param {Number} opts.objectsPort \n@param {Boolean} opts.objectsSecure \n@param {String} opts.objectsBucket \n@param {String} opts.objectsBaseFolder \n@param {String} opts.apiKey \n@param {String} opts.apiSecret \n@param {String} opts.peerAddress \n@param {Boolean} opts.watch \n@param {module:model/String} opts.encryptionMode  (default to CLEAR)\n@param {String} opts.encryptionKey \n@param {String} opts.versioningPolicyName \n@param {Number} opts.creationDate \n@param {Number} opts.lastSynchronizationDate \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ObjectDataSource} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "name",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "opts",
                "description": "Optional parameters",
                "type": {
                  "name": "Object"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ObjectDataSource} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Load datasource information"
          },
          {
            "name": "getDataSource",
            "docblock": "Load datasource information\n@param {String} name \n@param {Object} opts Optional parameters\n@param {Boolean} opts.disabled \n@param {module:model/String} opts.storageType  (default to LOCAL)\n@param {String} opts.objectsServiceName \n@param {String} opts.objectsHost \n@param {Number} opts.objectsPort \n@param {Boolean} opts.objectsSecure \n@param {String} opts.objectsBucket \n@param {String} opts.objectsBaseFolder \n@param {String} opts.apiKey \n@param {String} opts.apiSecret \n@param {String} opts.peerAddress \n@param {Boolean} opts.watch \n@param {module:model/String} opts.encryptionMode  (default to CLEAR)\n@param {String} opts.encryptionKey \n@param {String} opts.versioningPolicyName \n@param {Number} opts.creationDate \n@param {Number} opts.lastSynchronizationDate \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ObjectDataSource}",
            "modifiers": [],
            "params": [
              {
                "name": "name",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "opts",
                "description": "Optional parameters",
                "type": {
                  "name": "Object"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ObjectDataSource}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Load datasource information"
          },
          {
            "name": "getVersioningPolicyWithHttpInfo",
            "docblock": "Load a given versioning policy\n@param {String} uuid \n@param {Object} opts Optional parameters\n@param {String} opts.name \n@param {String} opts.description \n@param {String} opts.versionsDataSourceName \n@param {String} opts.versionsDataSourceBucket \n@param {String} opts.maxTotalSize \n@param {String} opts.maxSizePerFile \n@param {String} opts.ignoreFilesGreaterThan \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/TreeVersioningPolicy} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "uuid",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "opts",
                "description": "Optional parameters",
                "type": {
                  "name": "Object"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/TreeVersioningPolicy} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Load a given versioning policy"
          },
          {
            "name": "getVersioningPolicy",
            "docblock": "Load a given versioning policy\n@param {String} uuid \n@param {Object} opts Optional parameters\n@param {String} opts.name \n@param {String} opts.description \n@param {String} opts.versionsDataSourceName \n@param {String} opts.versionsDataSourceBucket \n@param {String} opts.maxTotalSize \n@param {String} opts.maxSizePerFile \n@param {String} opts.ignoreFilesGreaterThan \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/TreeVersioningPolicy}",
            "modifiers": [],
            "params": [
              {
                "name": "uuid",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "opts",
                "description": "Optional parameters",
                "type": {
                  "name": "Object"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/TreeVersioningPolicy}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Load a given versioning policy"
          },
          {
            "name": "importEncryptionKeyWithHttpInfo",
            "docblock": "Import a previously exported master key, requires the password created at export time\n@param {module:model/EncryptionAdminImportKeyRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EncryptionAdminImportKeyResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/EncryptionAdminImportKeyRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EncryptionAdminImportKeyResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Import a previously exported master key, requires the password created at export time"
          },
          {
            "name": "importEncryptionKey",
            "docblock": "Import a previously exported master key, requires the password created at export time\n@param {module:model/EncryptionAdminImportKeyRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EncryptionAdminImportKeyResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/EncryptionAdminImportKeyRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EncryptionAdminImportKeyResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Import a previously exported master key, requires the password created at export time"
          },
          {
            "name": "listDataSourcesWithHttpInfo",
            "docblock": "List all defined datasources\n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestDataSourceCollection} and HTTP response",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestDataSourceCollection} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List all defined datasources"
          },
          {
            "name": "listDataSources",
            "docblock": "List all defined datasources\n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestDataSourceCollection}",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestDataSourceCollection}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List all defined datasources"
          },
          {
            "name": "listEncryptionKeysWithHttpInfo",
            "docblock": "List registered master keys\n@param {module:model/EncryptionAdminListKeysRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EncryptionAdminListKeysResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/EncryptionAdminListKeysRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EncryptionAdminListKeysResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List registered master keys"
          },
          {
            "name": "listEncryptionKeys",
            "docblock": "List registered master keys\n@param {module:model/EncryptionAdminListKeysRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EncryptionAdminListKeysResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/EncryptionAdminListKeysRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EncryptionAdminListKeysResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List registered master keys"
          },
          {
            "name": "listPeerFoldersWithHttpInfo",
            "docblock": "List folders on a peer, starting from root\n@param {String} peerAddress \n@param {module:model/RestListPeerFoldersRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestNodesCollection} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "peerAddress",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestListPeerFoldersRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestNodesCollection} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List folders on a peer, starting from root"
          },
          {
            "name": "listPeerFolders",
            "docblock": "List folders on a peer, starting from root\n@param {String} peerAddress \n@param {module:model/RestListPeerFoldersRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestNodesCollection}",
            "modifiers": [],
            "params": [
              {
                "name": "peerAddress",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestListPeerFoldersRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestNodesCollection}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List folders on a peer, starting from root"
          },
          {
            "name": "listPeersAddressesWithHttpInfo",
            "docblock": "List all detected peers (servers on which the app is running)\n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestListPeersAddressesResponse} and HTTP response",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestListPeersAddressesResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List all detected peers (servers on which the app is running)"
          },
          {
            "name": "listPeersAddresses",
            "docblock": "List all detected peers (servers on which the app is running)\n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestListPeersAddressesResponse}",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestListPeersAddressesResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List all detected peers (servers on which the app is running)"
          },
          {
            "name": "listProcessesWithHttpInfo",
            "docblock": "List running Processes, with option PeerId or ServiceName filter\n@param {module:model/RestListProcessesRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestListProcessesResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestListProcessesRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestListProcessesResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List running Processes, with option PeerId or ServiceName filter"
          },
          {
            "name": "listProcesses",
            "docblock": "List running Processes, with option PeerId or ServiceName filter\n@param {module:model/RestListProcessesRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestListProcessesResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestListProcessesRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestListProcessesResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List running Processes, with option PeerId or ServiceName filter"
          },
          {
            "name": "listServicesWithHttpInfo",
            "docblock": "List all services and their status\n@param {Object} opts Optional parameters\n@param {module:model/String} opts.statusFilter  (default to ANY)\n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestServiceCollection} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "opts",
                "description": "Optional parameters",
                "type": {
                  "name": "Object"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestServiceCollection} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List all services and their status"
          },
          {
            "name": "listServices",
            "docblock": "List all services and their status\n@param {Object} opts Optional parameters\n@param {module:model/String} opts.statusFilter  (default to ANY)\n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestServiceCollection}",
            "modifiers": [],
            "params": [
              {
                "name": "opts",
                "description": "Optional parameters",
                "type": {
                  "name": "Object"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestServiceCollection}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List all services and their status"
          },
          {
            "name": "listVersioningPoliciesWithHttpInfo",
            "docblock": "List all defined versioning policies\n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestVersioningPolicyCollection} and HTTP response",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestVersioningPolicyCollection} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List all defined versioning policies"
          },
          {
            "name": "listVersioningPolicies",
            "docblock": "List all defined versioning policies\n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestVersioningPolicyCollection}",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestVersioningPolicyCollection}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List all defined versioning policies"
          },
          {
            "name": "listVirtualNodesWithHttpInfo",
            "docblock": "List all defined virtual nodes\n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestNodesCollection} and HTTP response",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestNodesCollection} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List all defined virtual nodes"
          },
          {
            "name": "listVirtualNodes",
            "docblock": "List all defined virtual nodes\n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestNodesCollection}",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestNodesCollection}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List all defined virtual nodes"
          },
          {
            "name": "openApiDiscoveryWithHttpInfo",
            "docblock": "Publish available REST APIs\n@param {Object} opts Optional parameters\n@param {String} opts.endpointType \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestOpenApiResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "opts",
                "description": "Optional parameters",
                "type": {
                  "name": "Object"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestOpenApiResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Publish available REST APIs"
          },
          {
            "name": "openApiDiscovery",
            "docblock": "Publish available REST APIs\n@param {Object} opts Optional parameters\n@param {String} opts.endpointType \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestOpenApiResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "opts",
                "description": "Optional parameters",
                "type": {
                  "name": "Object"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestOpenApiResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Publish available REST APIs"
          },
          {
            "name": "putConfigWithHttpInfo",
            "docblock": "Generic config Put, using a full path in the config tree\n@param {String} fullPath \n@param {module:model/RestConfiguration} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestConfiguration} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "fullPath",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestConfiguration"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestConfiguration} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Generic config Put, using a full path in the config tree"
          },
          {
            "name": "putConfig",
            "docblock": "Generic config Put, using a full path in the config tree\n@param {String} fullPath \n@param {module:model/RestConfiguration} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestConfiguration}",
            "modifiers": [],
            "params": [
              {
                "name": "fullPath",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestConfiguration"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestConfiguration}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Generic config Put, using a full path in the config tree"
          },
          {
            "name": "putDataSourceWithHttpInfo",
            "docblock": "Create or update a datasource\n@param {String} name \n@param {module:model/ObjectDataSource} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ObjectDataSource} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "name",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/ObjectDataSource"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ObjectDataSource} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Create or update a datasource"
          },
          {
            "name": "putDataSource",
            "docblock": "Create or update a datasource\n@param {String} name \n@param {module:model/ObjectDataSource} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ObjectDataSource}",
            "modifiers": [],
            "params": [
              {
                "name": "name",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/ObjectDataSource"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ObjectDataSource}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Create or update a datasource"
          }
        ]
      }
    ],
    "core/http/gen/api/FrontendServiceApi.js": [
      {
        "description": "FrontendService service.\n@module api/FrontendServiceApi\n@version 1.0",
        "displayName": "FrontendServiceApi",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new FrontendServiceApi. \n@alias module:api/FrontendServiceApi\n@class\n@param {module:ApiClient} apiClient Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
            "modifiers": [],
            "params": [
              {
                "name": "apiClient",
                "description": "Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
                "type": {
                  "name": "module:ApiClient"
                }
              }
            ],
            "returns": null,
            "description": "Constructs a new FrontendServiceApi."
          },
          {
            "name": "frontBootConfWithHttpInfo",
            "docblock": "Add some data to the initial set of parameters loaded by the frontend\n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestFrontBootConfResponse} and HTTP response",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestFrontBootConfResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Add some data to the initial set of parameters loaded by the frontend"
          },
          {
            "name": "frontBootConf",
            "docblock": "Add some data to the initial set of parameters loaded by the frontend\n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestFrontBootConfResponse}",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestFrontBootConfResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Add some data to the initial set of parameters loaded by the frontend"
          },
          {
            "name": "frontEnrollAuthWithHttpInfo",
            "docblock": "Generic endpoint that can be implemented by 2FA systems for enrollment\n@param {module:model/RestFrontEnrollAuthRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestFrontEnrollAuthResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestFrontEnrollAuthRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestFrontEnrollAuthResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Generic endpoint that can be implemented by 2FA systems for enrollment"
          },
          {
            "name": "frontEnrollAuth",
            "docblock": "Generic endpoint that can be implemented by 2FA systems for enrollment\n@param {module:model/RestFrontEnrollAuthRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestFrontEnrollAuthResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestFrontEnrollAuthRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestFrontEnrollAuthResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Generic endpoint that can be implemented by 2FA systems for enrollment"
          },
          {
            "name": "frontMessagesWithHttpInfo",
            "docblock": "Serve list of I18n messages\n@param {String} lang \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestFrontMessagesResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "lang",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestFrontMessagesResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Serve list of I18n messages"
          },
          {
            "name": "frontMessages",
            "docblock": "Serve list of I18n messages\n@param {String} lang \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestFrontMessagesResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "lang",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestFrontMessagesResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Serve list of I18n messages"
          },
          {
            "name": "frontPluginsWithHttpInfo",
            "docblock": "Serve list of I18n messages\n@param {String} lang \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestFrontPluginsResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "lang",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestFrontPluginsResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Serve list of I18n messages"
          },
          {
            "name": "frontPlugins",
            "docblock": "Serve list of I18n messages\n@param {String} lang \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestFrontPluginsResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "lang",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestFrontPluginsResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Serve list of I18n messages"
          },
          {
            "name": "frontPutBinaryWithHttpInfo",
            "docblock": "Upload frontend binaries (avatars / logos / bg images)\n@param {String} binaryType \n@param {String} uuid \n@param {module:model/RestFrontBinaryRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestFrontBinaryResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "binaryType",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "uuid",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestFrontBinaryRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestFrontBinaryResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Upload frontend binaries (avatars / logos / bg images)"
          },
          {
            "name": "frontPutBinary",
            "docblock": "Upload frontend binaries (avatars / logos / bg images)\n@param {String} binaryType \n@param {String} uuid \n@param {module:model/RestFrontBinaryRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestFrontBinaryResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "binaryType",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "uuid",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestFrontBinaryRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestFrontBinaryResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Upload frontend binaries (avatars / logos / bg images)"
          },
          {
            "name": "frontServeBinaryWithHttpInfo",
            "docblock": "Serve frontend binaries directly (avatars / logos / bg images)\n@param {String} binaryType \n@param {String} uuid \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestFrontBinaryResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "binaryType",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "uuid",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestFrontBinaryResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Serve frontend binaries directly (avatars / logos / bg images)"
          },
          {
            "name": "frontServeBinary",
            "docblock": "Serve frontend binaries directly (avatars / logos / bg images)\n@param {String} binaryType \n@param {String} uuid \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestFrontBinaryResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "binaryType",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "uuid",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestFrontBinaryResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Serve frontend binaries directly (avatars / logos / bg images)"
          },
          {
            "name": "frontSessionWithHttpInfo",
            "docblock": "Handle JWT\n@param {module:model/RestFrontSessionRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestFrontSessionResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestFrontSessionRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestFrontSessionResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Handle JWT"
          },
          {
            "name": "frontSession",
            "docblock": "Handle JWT\n@param {module:model/RestFrontSessionRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestFrontSessionResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestFrontSessionRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestFrontSessionResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Handle JWT"
          },
          {
            "name": "frontStateWithHttpInfo",
            "docblock": "Send XML state registry\n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestFrontStateResponse} and HTTP response",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestFrontStateResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Send XML state registry"
          },
          {
            "name": "frontState",
            "docblock": "Send XML state registry\n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestFrontStateResponse}",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestFrontStateResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Send XML state registry"
          },
          {
            "name": "settingsMenuWithHttpInfo",
            "docblock": "Sends a tree of nodes to be used a menu in the Settings panel\n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestSettingsMenuResponse} and HTTP response",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestSettingsMenuResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Sends a tree of nodes to be used a menu in the Settings panel"
          },
          {
            "name": "settingsMenu",
            "docblock": "Sends a tree of nodes to be used a menu in the Settings panel\n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestSettingsMenuResponse}",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestSettingsMenuResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Sends a tree of nodes to be used a menu in the Settings panel"
          }
        ]
      }
    ],
    "core/http/gen/api/GraphServiceApi.js": [
      {
        "description": "GraphService service.\n@module api/GraphServiceApi\n@version 1.0",
        "displayName": "GraphServiceApi",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new GraphServiceApi. \n@alias module:api/GraphServiceApi\n@class\n@param {module:ApiClient} apiClient Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
            "modifiers": [],
            "params": [
              {
                "name": "apiClient",
                "description": "Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
                "type": {
                  "name": "module:ApiClient"
                }
              }
            ],
            "returns": null,
            "description": "Constructs a new GraphServiceApi."
          },
          {
            "name": "relationWithHttpInfo",
            "docblock": "Compute relation of context user with another user\n@param {String} userId \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestRelationResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "userId",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestRelationResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Compute relation of context user with another user"
          },
          {
            "name": "relation",
            "docblock": "Compute relation of context user with another user\n@param {String} userId \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestRelationResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "userId",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestRelationResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Compute relation of context user with another user"
          },
          {
            "name": "userStateWithHttpInfo",
            "docblock": "Compute accessible workspaces for a given user\n@param {String} segment \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestUserStateResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "segment",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestUserStateResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Compute accessible workspaces for a given user"
          },
          {
            "name": "userState",
            "docblock": "Compute accessible workspaces for a given user\n@param {String} segment \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestUserStateResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "segment",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestUserStateResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Compute accessible workspaces for a given user"
          }
        ]
      }
    ],
    "core/http/gen/api/InstallServiceApi.js": [
      {
        "description": "InstallService service.\n@module api/InstallServiceApi\n@version 1.0",
        "displayName": "InstallServiceApi",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new InstallServiceApi. \n@alias module:api/InstallServiceApi\n@class\n@param {module:ApiClient} apiClient Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
            "modifiers": [],
            "params": [
              {
                "name": "apiClient",
                "description": "Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
                "type": {
                  "name": "module:ApiClient"
                }
              }
            ],
            "returns": null,
            "description": "Constructs a new InstallServiceApi."
          },
          {
            "name": "getAgreementWithHttpInfo",
            "docblock": "Load a textual agreement for using the software\n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InstallGetAgreementResponse} and HTTP response",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InstallGetAgreementResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Load a textual agreement for using the software"
          },
          {
            "name": "getAgreement",
            "docblock": "Load a textual agreement for using the software\n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InstallGetAgreementResponse}",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InstallGetAgreementResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Load a textual agreement for using the software"
          },
          {
            "name": "getInstallWithHttpInfo",
            "docblock": "Loads default values for install form\n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InstallGetDefaultsResponse} and HTTP response",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InstallGetDefaultsResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Loads default values for install form"
          },
          {
            "name": "getInstall",
            "docblock": "Loads default values for install form\n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InstallGetDefaultsResponse}",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InstallGetDefaultsResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Loads default values for install form"
          },
          {
            "name": "performInstallCheckWithHttpInfo",
            "docblock": "Perform a check during install (like a valid DB connection)\n@param {module:model/InstallPerformCheckRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InstallPerformCheckResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/InstallPerformCheckRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InstallPerformCheckResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Perform a check during install (like a valid DB connection)"
          },
          {
            "name": "performInstallCheck",
            "docblock": "Perform a check during install (like a valid DB connection)\n@param {module:model/InstallPerformCheckRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InstallPerformCheckResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/InstallPerformCheckRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InstallPerformCheckResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Perform a check during install (like a valid DB connection)"
          },
          {
            "name": "postInstallWithHttpInfo",
            "docblock": "Post values to be saved for install\n@param {module:model/InstallInstallRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InstallInstallResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/InstallInstallRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InstallInstallResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Post values to be saved for install"
          },
          {
            "name": "postInstall",
            "docblock": "Post values to be saved for install\n@param {module:model/InstallInstallRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InstallInstallResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/InstallInstallRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InstallInstallResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Post values to be saved for install"
          }
        ]
      }
    ],
    "core/http/gen/api/JobsServiceApi.js": [
      {
        "description": "JobsService service.\n@module api/JobsServiceApi\n@version 1.0",
        "displayName": "JobsServiceApi",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new JobsServiceApi. \n@alias module:api/JobsServiceApi\n@class\n@param {module:ApiClient} apiClient Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
            "modifiers": [],
            "params": [
              {
                "name": "apiClient",
                "description": "Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
                "type": {
                  "name": "module:ApiClient"
                }
              }
            ],
            "returns": null,
            "description": "Constructs a new JobsServiceApi."
          },
          {
            "name": "listTasksLogsWithHttpInfo",
            "docblock": "Technical Logs, in Json or CSV format\n@param {module:model/LogListLogRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestLogMessageCollection} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/LogListLogRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestLogMessageCollection} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Technical Logs, in Json or CSV format"
          },
          {
            "name": "listTasksLogs",
            "docblock": "Technical Logs, in Json or CSV format\n@param {module:model/LogListLogRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestLogMessageCollection}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/LogListLogRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestLogMessageCollection}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Technical Logs, in Json or CSV format"
          },
          {
            "name": "userControlJobWithHttpInfo",
            "docblock": "Send Control Commands to one or many jobs / tasks\n@param {module:model/JobsCtrlCommand} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/JobsCtrlCommandResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/JobsCtrlCommand"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/JobsCtrlCommandResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Send Control Commands to one or many jobs / tasks"
          },
          {
            "name": "userControlJob",
            "docblock": "Send Control Commands to one or many jobs / tasks\n@param {module:model/JobsCtrlCommand} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/JobsCtrlCommandResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/JobsCtrlCommand"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/JobsCtrlCommandResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Send Control Commands to one or many jobs / tasks"
          },
          {
            "name": "userCreateJobWithHttpInfo",
            "docblock": "Create a predefined job to be run directly\n@param {String} jobName \n@param {module:model/RestUserJobRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestUserJobResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "jobName",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestUserJobRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestUserJobResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Create a predefined job to be run directly"
          },
          {
            "name": "userCreateJob",
            "docblock": "Create a predefined job to be run directly\n@param {String} jobName \n@param {module:model/RestUserJobRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestUserJobResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "jobName",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestUserJobRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestUserJobResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Create a predefined job to be run directly"
          },
          {
            "name": "userDeleteTasksWithHttpInfo",
            "docblock": "Send a control command to clean tasks on a given job\n@param {module:model/JobsDeleteTasksRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/JobsDeleteTasksResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/JobsDeleteTasksRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/JobsDeleteTasksResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Send a control command to clean tasks on a given job"
          },
          {
            "name": "userDeleteTasks",
            "docblock": "Send a control command to clean tasks on a given job\n@param {module:model/JobsDeleteTasksRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/JobsDeleteTasksResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/JobsDeleteTasksRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/JobsDeleteTasksResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Send a control command to clean tasks on a given job"
          },
          {
            "name": "userListJobsWithHttpInfo",
            "docblock": "List jobs associated with current user\n@param {module:model/JobsListJobsRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestUserJobsCollection} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/JobsListJobsRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestUserJobsCollection} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List jobs associated with current user"
          },
          {
            "name": "userListJobs",
            "docblock": "List jobs associated with current user\n@param {module:model/JobsListJobsRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestUserJobsCollection}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/JobsListJobsRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestUserJobsCollection}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List jobs associated with current user"
          }
        ]
      }
    ],
    "core/http/gen/api/LogServiceApi.js": [
      {
        "description": "LogService service.\n@module api/LogServiceApi\n@version 1.0",
        "displayName": "LogServiceApi",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new LogServiceApi. \n@alias module:api/LogServiceApi\n@class\n@param {module:ApiClient} apiClient Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
            "modifiers": [],
            "params": [
              {
                "name": "apiClient",
                "description": "Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
                "type": {
                  "name": "module:ApiClient"
                }
              }
            ],
            "returns": null,
            "description": "Constructs a new LogServiceApi."
          },
          {
            "name": "syslogWithHttpInfo",
            "docblock": "Technical Logs, in Json or CSV format\n@param {module:model/LogListLogRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestLogMessageCollection} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/LogListLogRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestLogMessageCollection} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Technical Logs, in Json or CSV format"
          },
          {
            "name": "syslog",
            "docblock": "Technical Logs, in Json or CSV format\n@param {module:model/LogListLogRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestLogMessageCollection}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/LogListLogRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestLogMessageCollection}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Technical Logs, in Json or CSV format"
          }
        ]
      }
    ],
    "core/http/gen/api/MailerServiceApi.js": [
      {
        "description": "MailerService service.\n@module api/MailerServiceApi\n@version 1.0",
        "displayName": "MailerServiceApi",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new MailerServiceApi. \n@alias module:api/MailerServiceApi\n@class\n@param {module:ApiClient} apiClient Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
            "modifiers": [],
            "params": [
              {
                "name": "apiClient",
                "description": "Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
                "type": {
                  "name": "module:ApiClient"
                }
              }
            ],
            "returns": null,
            "description": "Constructs a new MailerServiceApi."
          },
          {
            "name": "sendWithHttpInfo",
            "docblock": "Send an email to a user or any email address\n@param {module:model/MailerMail} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/MailerSendMailResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/MailerMail"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/MailerSendMailResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Send an email to a user or any email address"
          },
          {
            "name": "send",
            "docblock": "Send an email to a user or any email address\n@param {module:model/MailerMail} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/MailerSendMailResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/MailerMail"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/MailerSendMailResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Send an email to a user or any email address"
          }
        ]
      }
    ],
    "core/http/gen/api/MetaServiceApi.js": [
      {
        "description": "MetaService service.\n@module api/MetaServiceApi\n@version 1.0",
        "displayName": "MetaServiceApi",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new MetaServiceApi. \n@alias module:api/MetaServiceApi\n@class\n@param {module:ApiClient} apiClient Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
            "modifiers": [],
            "params": [
              {
                "name": "apiClient",
                "description": "Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
                "type": {
                  "name": "module:ApiClient"
                }
              }
            ],
            "returns": null,
            "description": "Constructs a new MetaServiceApi."
          },
          {
            "name": "deleteMetaWithHttpInfo",
            "docblock": "Delete metadata of a given node\n@param {String} nodePath \n@param {module:model/RestMetaNamespaceRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/TreeNode} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "nodePath",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestMetaNamespaceRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/TreeNode} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Delete metadata of a given node"
          },
          {
            "name": "deleteMeta",
            "docblock": "Delete metadata of a given node\n@param {String} nodePath \n@param {module:model/RestMetaNamespaceRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/TreeNode}",
            "modifiers": [],
            "params": [
              {
                "name": "nodePath",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestMetaNamespaceRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/TreeNode}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Delete metadata of a given node"
          },
          {
            "name": "getBulkMetaWithHttpInfo",
            "docblock": "List meta for a list of nodes, or a full directory using /path/_* syntax\n@param {module:model/RestGetBulkMetaRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestBulkMetaResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestGetBulkMetaRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestBulkMetaResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List meta for a list of nodes, or a full directory using /path/_* syntax"
          },
          {
            "name": "getBulkMeta",
            "docblock": "List meta for a list of nodes, or a full directory using /path/_* syntax\n@param {module:model/RestGetBulkMetaRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestBulkMetaResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestGetBulkMetaRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestBulkMetaResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List meta for a list of nodes, or a full directory using /path/_* syntax"
          },
          {
            "name": "getMetaWithHttpInfo",
            "docblock": "Load metadata for a given node\n@param {String} nodePath \n@param {module:model/RestMetaNamespaceRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/TreeNode} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "nodePath",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestMetaNamespaceRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/TreeNode} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Load metadata for a given node"
          },
          {
            "name": "getMeta",
            "docblock": "Load metadata for a given node\n@param {String} nodePath \n@param {module:model/RestMetaNamespaceRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/TreeNode}",
            "modifiers": [],
            "params": [
              {
                "name": "nodePath",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestMetaNamespaceRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/TreeNode}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Load metadata for a given node"
          },
          {
            "name": "setMetaWithHttpInfo",
            "docblock": "Update metadata for a given node\n@param {String} nodePath \n@param {module:model/RestMetaCollection} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/TreeNode} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "nodePath",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestMetaCollection"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/TreeNode} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Update metadata for a given node"
          },
          {
            "name": "setMeta",
            "docblock": "Update metadata for a given node\n@param {String} nodePath \n@param {module:model/RestMetaCollection} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/TreeNode}",
            "modifiers": [],
            "params": [
              {
                "name": "nodePath",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestMetaCollection"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/TreeNode}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Update metadata for a given node"
          }
        ]
      }
    ],
    "core/http/gen/api/PolicyServiceApi.js": [
      {
        "description": "PolicyService service.\n@module api/PolicyServiceApi\n@version 1.0",
        "displayName": "PolicyServiceApi",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new PolicyServiceApi. \n@alias module:api/PolicyServiceApi\n@class\n@param {module:ApiClient} apiClient Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
            "modifiers": [],
            "params": [
              {
                "name": "apiClient",
                "description": "Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
                "type": {
                  "name": "module:ApiClient"
                }
              }
            ],
            "returns": null,
            "description": "Constructs a new PolicyServiceApi."
          },
          {
            "name": "listPoliciesWithHttpInfo",
            "docblock": "List all defined security policies\n@param {module:model/IdmListPolicyGroupsRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/IdmListPolicyGroupsResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/IdmListPolicyGroupsRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/IdmListPolicyGroupsResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List all defined security policies"
          },
          {
            "name": "listPolicies",
            "docblock": "List all defined security policies\n@param {module:model/IdmListPolicyGroupsRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/IdmListPolicyGroupsResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/IdmListPolicyGroupsRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/IdmListPolicyGroupsResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List all defined security policies"
          }
        ]
      }
    ],
    "core/http/gen/api/RoleServiceApi.js": [
      {
        "description": "RoleService service.\n@module api/RoleServiceApi\n@version 1.0",
        "displayName": "RoleServiceApi",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new RoleServiceApi. \n@alias module:api/RoleServiceApi\n@class\n@param {module:ApiClient} apiClient Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
            "modifiers": [],
            "params": [
              {
                "name": "apiClient",
                "description": "Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
                "type": {
                  "name": "module:ApiClient"
                }
              }
            ],
            "returns": null,
            "description": "Constructs a new RoleServiceApi."
          },
          {
            "name": "deleteRoleWithHttpInfo",
            "docblock": "Delete a Role by ID\n@param {String} uuid \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/IdmRole} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "uuid",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/IdmRole} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Delete a Role by ID"
          },
          {
            "name": "deleteRole",
            "docblock": "Delete a Role by ID\n@param {String} uuid \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/IdmRole}",
            "modifiers": [],
            "params": [
              {
                "name": "uuid",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/IdmRole}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Delete a Role by ID"
          },
          {
            "name": "getRoleWithHttpInfo",
            "docblock": "Get a Role by ID\n@param {String} uuid \n@param {Object} opts Optional parameters\n@param {String} opts.label \n@param {Boolean} opts.isTeam \n@param {Boolean} opts.groupRole \n@param {Boolean} opts.userRole \n@param {Number} opts.lastUpdated \n@param {Array.<String>} opts.autoApplies \n@param {Boolean} opts.policiesContextEditable \n@param {Boolean} opts.forceOverride \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/IdmRole} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "uuid",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "opts",
                "description": "Optional parameters",
                "type": {
                  "name": "Object"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/IdmRole} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Get a Role by ID"
          },
          {
            "name": "getRole",
            "docblock": "Get a Role by ID\n@param {String} uuid \n@param {Object} opts Optional parameters\n@param {String} opts.label \n@param {Boolean} opts.isTeam \n@param {Boolean} opts.groupRole \n@param {Boolean} opts.userRole \n@param {Number} opts.lastUpdated \n@param {Array.<String>} opts.autoApplies \n@param {Boolean} opts.policiesContextEditable \n@param {Boolean} opts.forceOverride \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/IdmRole}",
            "modifiers": [],
            "params": [
              {
                "name": "uuid",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "opts",
                "description": "Optional parameters",
                "type": {
                  "name": "Object"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/IdmRole}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Get a Role by ID"
          },
          {
            "name": "searchRolesWithHttpInfo",
            "docblock": "Search Roles\n@param {module:model/RestSearchRoleRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestRolesCollection} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestSearchRoleRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestRolesCollection} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Search Roles"
          },
          {
            "name": "searchRoles",
            "docblock": "Search Roles\n@param {module:model/RestSearchRoleRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestRolesCollection}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestSearchRoleRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestRolesCollection}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Search Roles"
          },
          {
            "name": "setRoleWithHttpInfo",
            "docblock": "Create or update a Role\n@param {String} uuid \n@param {module:model/IdmRole} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/IdmRole} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "uuid",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/IdmRole"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/IdmRole} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Create or update a Role"
          },
          {
            "name": "setRole",
            "docblock": "Create or update a Role\n@param {String} uuid \n@param {module:model/IdmRole} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/IdmRole}",
            "modifiers": [],
            "params": [
              {
                "name": "uuid",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/IdmRole"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/IdmRole}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Create or update a Role"
          }
        ]
      }
    ],
    "core/http/gen/api/SearchServiceApi.js": [
      {
        "description": "SearchService service.\n@module api/SearchServiceApi\n@version 1.0",
        "displayName": "SearchServiceApi",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new SearchServiceApi. \n@alias module:api/SearchServiceApi\n@class\n@param {module:ApiClient} apiClient Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
            "modifiers": [],
            "params": [
              {
                "name": "apiClient",
                "description": "Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
                "type": {
                  "name": "module:ApiClient"
                }
              }
            ],
            "returns": null,
            "description": "Constructs a new SearchServiceApi."
          },
          {
            "name": "nodesWithHttpInfo",
            "docblock": "Search indexed nodes (files/folders) on various aspects\n@param {module:model/TreeSearchRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestSearchResults} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/TreeSearchRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestSearchResults} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Search indexed nodes (files/folders) on various aspects"
          },
          {
            "name": "nodes",
            "docblock": "Search indexed nodes (files/folders) on various aspects\n@param {module:model/TreeSearchRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestSearchResults}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/TreeSearchRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestSearchResults}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Search indexed nodes (files/folders) on various aspects"
          }
        ]
      }
    ],
    "core/http/gen/api/ShareServiceApi.js": [
      {
        "description": "ShareService service.\n@module api/ShareServiceApi\n@version 1.0",
        "displayName": "ShareServiceApi",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new ShareServiceApi. \n@alias module:api/ShareServiceApi\n@class\n@param {module:ApiClient} apiClient Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
            "modifiers": [],
            "params": [
              {
                "name": "apiClient",
                "description": "Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
                "type": {
                  "name": "module:ApiClient"
                }
              }
            ],
            "returns": null,
            "description": "Constructs a new ShareServiceApi."
          },
          {
            "name": "deleteCellWithHttpInfo",
            "docblock": "Delete a share room\n@param {String} uuid \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestDeleteCellResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "uuid",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestDeleteCellResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Delete a share room"
          },
          {
            "name": "deleteCell",
            "docblock": "Delete a share room\n@param {String} uuid \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestDeleteCellResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "uuid",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestDeleteCellResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Delete a share room"
          },
          {
            "name": "deleteShareLinkWithHttpInfo",
            "docblock": "Delete Share Link\n@param {String} uuid \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestDeleteShareLinkResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "uuid",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestDeleteShareLinkResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Delete Share Link"
          },
          {
            "name": "deleteShareLink",
            "docblock": "Delete Share Link\n@param {String} uuid \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestDeleteShareLinkResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "uuid",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestDeleteShareLinkResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Delete Share Link"
          },
          {
            "name": "getCellWithHttpInfo",
            "docblock": "Load a share room\n@param {String} uuid \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestCell} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "uuid",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestCell} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Load a share room"
          },
          {
            "name": "getCell",
            "docblock": "Load a share room\n@param {String} uuid \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestCell}",
            "modifiers": [],
            "params": [
              {
                "name": "uuid",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestCell}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Load a share room"
          },
          {
            "name": "getShareLinkWithHttpInfo",
            "docblock": "Load a share link with all infos\n@param {String} uuid \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestShareLink} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "uuid",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestShareLink} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Load a share link with all infos"
          },
          {
            "name": "getShareLink",
            "docblock": "Load a share link with all infos\n@param {String} uuid \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestShareLink}",
            "modifiers": [],
            "params": [
              {
                "name": "uuid",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestShareLink}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Load a share link with all infos"
          },
          {
            "name": "listSharedResourcesWithHttpInfo",
            "docblock": "List Shared Resources for current user or all users\n@param {module:model/RestListSharedResourcesRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestListSharedResourcesResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestListSharedResourcesRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestListSharedResourcesResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List Shared Resources for current user or all users"
          },
          {
            "name": "listSharedResources",
            "docblock": "List Shared Resources for current user or all users\n@param {module:model/RestListSharedResourcesRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestListSharedResourcesResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestListSharedResourcesRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestListSharedResourcesResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List Shared Resources for current user or all users"
          },
          {
            "name": "putCellWithHttpInfo",
            "docblock": "Put or Create a share room\n@param {module:model/RestPutCellRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestCell} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestPutCellRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestCell} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Put or Create a share room"
          },
          {
            "name": "putCell",
            "docblock": "Put or Create a share room\n@param {module:model/RestPutCellRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestCell}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestPutCellRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestCell}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Put or Create a share room"
          },
          {
            "name": "putShareLinkWithHttpInfo",
            "docblock": "Put or Create a share room\n@param {module:model/RestPutShareLinkRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestShareLink} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestPutShareLinkRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestShareLink} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Put or Create a share room"
          },
          {
            "name": "putShareLink",
            "docblock": "Put or Create a share room\n@param {module:model/RestPutShareLinkRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestShareLink}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestPutShareLinkRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestShareLink}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Put or Create a share room"
          },
          {
            "name": "updateSharePoliciesWithHttpInfo",
            "docblock": "Updates policies associated to the underlying workspace for a Cell or a ShareLink\n@param {module:model/RestUpdateSharePoliciesRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestUpdateSharePoliciesResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestUpdateSharePoliciesRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestUpdateSharePoliciesResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Updates policies associated to the underlying workspace for a Cell or a ShareLink"
          },
          {
            "name": "updateSharePolicies",
            "docblock": "Updates policies associated to the underlying workspace for a Cell or a ShareLink\n@param {module:model/RestUpdateSharePoliciesRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestUpdateSharePoliciesResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestUpdateSharePoliciesRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestUpdateSharePoliciesResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Updates policies associated to the underlying workspace for a Cell or a ShareLink"
          }
        ]
      }
    ],
    "core/http/gen/api/TemplatesServiceApi.js": [
      {
        "description": "TemplatesService service.\n@module api/TemplatesServiceApi\n@version 1.0",
        "displayName": "TemplatesServiceApi",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new TemplatesServiceApi. \n@alias module:api/TemplatesServiceApi\n@class\n@param {module:ApiClient} apiClient Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
            "modifiers": [],
            "params": [
              {
                "name": "apiClient",
                "description": "Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
                "type": {
                  "name": "module:ApiClient"
                }
              }
            ],
            "returns": null,
            "description": "Constructs a new TemplatesServiceApi."
          },
          {
            "name": "listTemplatesWithHttpInfo",
            "docblock": "List available templates\n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestListTemplatesResponse} and HTTP response",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestListTemplatesResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List available templates"
          },
          {
            "name": "listTemplates",
            "docblock": "List available templates\n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestListTemplatesResponse}",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestListTemplatesResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List available templates"
          }
        ]
      }
    ],
    "core/http/gen/api/TokenServiceApi.js": [
      {
        "description": "TokenService service.\n@module api/TokenServiceApi\n@version 1.0",
        "displayName": "TokenServiceApi",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new TokenServiceApi. \n@alias module:api/TokenServiceApi\n@class\n@param {module:ApiClient} apiClient Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
            "modifiers": [],
            "params": [
              {
                "name": "apiClient",
                "description": "Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
                "type": {
                  "name": "module:ApiClient"
                }
              }
            ],
            "returns": null,
            "description": "Constructs a new TokenServiceApi."
          },
          {
            "name": "resetPasswordWithHttpInfo",
            "docblock": "Finish up the reset password process by providing the unique token\n@param {module:model/RestResetPasswordRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestResetPasswordResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestResetPasswordRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestResetPasswordResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Finish up the reset password process by providing the unique token"
          },
          {
            "name": "resetPassword",
            "docblock": "Finish up the reset password process by providing the unique token\n@param {module:model/RestResetPasswordRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestResetPasswordResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestResetPasswordRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestResetPasswordResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Finish up the reset password process by providing the unique token"
          },
          {
            "name": "resetPasswordTokenWithHttpInfo",
            "docblock": "Generate a unique token for the reset password process\n@param {String} userLogin \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestResetPasswordTokenResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "userLogin",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestResetPasswordTokenResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Generate a unique token for the reset password process"
          },
          {
            "name": "resetPasswordToken",
            "docblock": "Generate a unique token for the reset password process\n@param {String} userLogin \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestResetPasswordTokenResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "userLogin",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestResetPasswordTokenResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Generate a unique token for the reset password process"
          },
          {
            "name": "revokeWithHttpInfo",
            "docblock": "Revoke a JWT token\n@param {module:model/RestRevokeRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestRevokeResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestRevokeRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestRevokeResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Revoke a JWT token"
          },
          {
            "name": "revoke",
            "docblock": "Revoke a JWT token\n@param {module:model/RestRevokeRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestRevokeResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestRevokeRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestRevokeResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Revoke a JWT token"
          }
        ]
      }
    ],
    "core/http/gen/api/TreeServiceApi.js": [
      {
        "description": "TreeService service.\n@module api/TreeServiceApi\n@version 1.0",
        "displayName": "TreeServiceApi",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new TreeServiceApi. \n@alias module:api/TreeServiceApi\n@class\n@param {module:ApiClient} apiClient Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
            "modifiers": [],
            "params": [
              {
                "name": "apiClient",
                "description": "Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
                "type": {
                  "name": "module:ApiClient"
                }
              }
            ],
            "returns": null,
            "description": "Constructs a new TreeServiceApi."
          },
          {
            "name": "bulkStatNodesWithHttpInfo",
            "docblock": "List meta for a list of nodes, or a full directory using /path/_* syntax\n@param {module:model/RestGetBulkMetaRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestBulkMetaResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestGetBulkMetaRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestBulkMetaResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List meta for a list of nodes, or a full directory using /path/_* syntax"
          },
          {
            "name": "bulkStatNodes",
            "docblock": "List meta for a list of nodes, or a full directory using /path/_* syntax\n@param {module:model/RestGetBulkMetaRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestBulkMetaResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestGetBulkMetaRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestBulkMetaResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List meta for a list of nodes, or a full directory using /path/_* syntax"
          },
          {
            "name": "createNodesWithHttpInfo",
            "docblock": "Create dirs or empty files inside the tree\n@param {module:model/RestCreateNodesRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestNodesCollection} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestCreateNodesRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestNodesCollection} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Create dirs or empty files inside the tree"
          },
          {
            "name": "createNodes",
            "docblock": "Create dirs or empty files inside the tree\n@param {module:model/RestCreateNodesRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestNodesCollection}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestCreateNodesRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestNodesCollection}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Create dirs or empty files inside the tree"
          },
          {
            "name": "createSelectionWithHttpInfo",
            "docblock": "Create a temporary selection for further action (namely download)\n@param {module:model/RestCreateSelectionRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestCreateSelectionResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestCreateSelectionRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestCreateSelectionResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Create a temporary selection for further action (namely download)"
          },
          {
            "name": "createSelection",
            "docblock": "Create a temporary selection for further action (namely download)\n@param {module:model/RestCreateSelectionRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestCreateSelectionResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestCreateSelectionRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestCreateSelectionResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Create a temporary selection for further action (namely download)"
          },
          {
            "name": "deleteNodesWithHttpInfo",
            "docblock": "Handle nodes deletion\n@param {module:model/RestDeleteNodesRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestDeleteNodesResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestDeleteNodesRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestDeleteNodesResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Handle nodes deletion"
          },
          {
            "name": "deleteNodes",
            "docblock": "Handle nodes deletion\n@param {module:model/RestDeleteNodesRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestDeleteNodesResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestDeleteNodesRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestDeleteNodesResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Handle nodes deletion"
          },
          {
            "name": "headNodeWithHttpInfo",
            "docblock": "Return node meta without the node content itself\n@param {String} node \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestHeadNodeResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestHeadNodeResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Return node meta without the node content itself"
          },
          {
            "name": "headNode",
            "docblock": "Return node meta without the node content itself\n@param {String} node \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestHeadNodeResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestHeadNodeResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Return node meta without the node content itself"
          },
          {
            "name": "restoreNodesWithHttpInfo",
            "docblock": "Handle nodes restoration from recycle bin\n@param {module:model/RestRestoreNodesRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestRestoreNodesResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestRestoreNodesRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestRestoreNodesResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Handle nodes restoration from recycle bin"
          },
          {
            "name": "restoreNodes",
            "docblock": "Handle nodes restoration from recycle bin\n@param {module:model/RestRestoreNodesRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestRestoreNodesResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestRestoreNodesRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestRestoreNodesResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Handle nodes restoration from recycle bin"
          }
        ]
      }
    ],
    "core/http/gen/api/UpdateServiceApi.js": [
      {
        "description": "UpdateService service.\n@module api/UpdateServiceApi\n@version 1.0",
        "displayName": "UpdateServiceApi",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new UpdateServiceApi. \n@alias module:api/UpdateServiceApi\n@class\n@param {module:ApiClient} apiClient Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
            "modifiers": [],
            "params": [
              {
                "name": "apiClient",
                "description": "Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
                "type": {
                  "name": "module:ApiClient"
                }
              }
            ],
            "returns": null,
            "description": "Constructs a new UpdateServiceApi."
          },
          {
            "name": "applyUpdateWithHttpInfo",
            "docblock": "Apply an update to a given version\n@param {String} targetVersion \n@param {module:model/UpdateApplyUpdateRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/UpdateApplyUpdateResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "targetVersion",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/UpdateApplyUpdateRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/UpdateApplyUpdateResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Apply an update to a given version"
          },
          {
            "name": "applyUpdate",
            "docblock": "Apply an update to a given version\n@param {String} targetVersion \n@param {module:model/UpdateApplyUpdateRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/UpdateApplyUpdateResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "targetVersion",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/UpdateApplyUpdateRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/UpdateApplyUpdateResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Apply an update to a given version"
          },
          {
            "name": "updateRequiredWithHttpInfo",
            "docblock": "Check the remote server to see if there are available binaries\n@param {module:model/UpdateUpdateRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/UpdateUpdateResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/UpdateUpdateRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/UpdateUpdateResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Check the remote server to see if there are available binaries"
          },
          {
            "name": "updateRequired",
            "docblock": "Check the remote server to see if there are available binaries\n@param {module:model/UpdateUpdateRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/UpdateUpdateResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/UpdateUpdateRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/UpdateUpdateResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Check the remote server to see if there are available binaries"
          }
        ]
      }
    ],
    "core/http/gen/api/UserMetaServiceApi.js": [
      {
        "description": "UserMetaService service.\n@module api/UserMetaServiceApi\n@version 1.0",
        "displayName": "UserMetaServiceApi",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new UserMetaServiceApi. \n@alias module:api/UserMetaServiceApi\n@class\n@param {module:ApiClient} apiClient Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
            "modifiers": [],
            "params": [
              {
                "name": "apiClient",
                "description": "Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
                "type": {
                  "name": "module:ApiClient"
                }
              }
            ],
            "returns": null,
            "description": "Constructs a new UserMetaServiceApi."
          },
          {
            "name": "deleteUserMetaTagsWithHttpInfo",
            "docblock": "Delete one or all tags for a given namespace (use * for all tags)\n@param {String} namespace \n@param {String} tags \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestDeleteUserMetaTagsResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "namespace",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "tags",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestDeleteUserMetaTagsResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Delete one or all tags for a given namespace (use * for all tags)"
          },
          {
            "name": "deleteUserMetaTags",
            "docblock": "Delete one or all tags for a given namespace (use * for all tags)\n@param {String} namespace \n@param {String} tags \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestDeleteUserMetaTagsResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "namespace",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "tags",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestDeleteUserMetaTagsResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Delete one or all tags for a given namespace (use * for all tags)"
          },
          {
            "name": "listUserMetaNamespaceWithHttpInfo",
            "docblock": "List defined meta namespaces\n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestUserMetaNamespaceCollection} and HTTP response",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestUserMetaNamespaceCollection} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List defined meta namespaces"
          },
          {
            "name": "listUserMetaNamespace",
            "docblock": "List defined meta namespaces\n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestUserMetaNamespaceCollection}",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestUserMetaNamespaceCollection}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List defined meta namespaces"
          },
          {
            "name": "listUserMetaTagsWithHttpInfo",
            "docblock": "List Tags for a given namespace\n@param {String} namespace \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestListUserMetaTagsResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "namespace",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestListUserMetaTagsResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List Tags for a given namespace"
          },
          {
            "name": "listUserMetaTags",
            "docblock": "List Tags for a given namespace\n@param {String} namespace \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestListUserMetaTagsResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "namespace",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestListUserMetaTagsResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List Tags for a given namespace"
          },
          {
            "name": "putUserMetaTagWithHttpInfo",
            "docblock": "Add a new value to Tags for a given namespace\n@param {String} namespace \n@param {module:model/RestPutUserMetaTagRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestPutUserMetaTagResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "namespace",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestPutUserMetaTagRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestPutUserMetaTagResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Add a new value to Tags for a given namespace"
          },
          {
            "name": "putUserMetaTag",
            "docblock": "Add a new value to Tags for a given namespace\n@param {String} namespace \n@param {module:model/RestPutUserMetaTagRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestPutUserMetaTagResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "namespace",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestPutUserMetaTagRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestPutUserMetaTagResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Add a new value to Tags for a given namespace"
          },
          {
            "name": "searchUserMetaWithHttpInfo",
            "docblock": "Search a list of meta by node Id or by User id and by namespace\n@param {module:model/IdmSearchUserMetaRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestUserMetaCollection} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/IdmSearchUserMetaRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestUserMetaCollection} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Search a list of meta by node Id or by User id and by namespace"
          },
          {
            "name": "searchUserMeta",
            "docblock": "Search a list of meta by node Id or by User id and by namespace\n@param {module:model/IdmSearchUserMetaRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestUserMetaCollection}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/IdmSearchUserMetaRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestUserMetaCollection}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Search a list of meta by node Id or by User id and by namespace"
          },
          {
            "name": "updateUserMetaWithHttpInfo",
            "docblock": "Update/delete user meta\n@param {module:model/IdmUpdateUserMetaRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/IdmUpdateUserMetaResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/IdmUpdateUserMetaRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/IdmUpdateUserMetaResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Update/delete user meta"
          },
          {
            "name": "updateUserMeta",
            "docblock": "Update/delete user meta\n@param {module:model/IdmUpdateUserMetaRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/IdmUpdateUserMetaResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/IdmUpdateUserMetaRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/IdmUpdateUserMetaResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Update/delete user meta"
          },
          {
            "name": "updateUserMetaNamespaceWithHttpInfo",
            "docblock": "Admin: update namespaces\n@param {module:model/IdmUpdateUserMetaNamespaceRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/IdmUpdateUserMetaNamespaceResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/IdmUpdateUserMetaNamespaceRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/IdmUpdateUserMetaNamespaceResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Admin: update namespaces"
          },
          {
            "name": "updateUserMetaNamespace",
            "docblock": "Admin: update namespaces\n@param {module:model/IdmUpdateUserMetaNamespaceRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/IdmUpdateUserMetaNamespaceResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/IdmUpdateUserMetaNamespaceRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/IdmUpdateUserMetaNamespaceResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Admin: update namespaces"
          },
          {
            "name": "userBookmarksWithHttpInfo",
            "docblock": "Special API for Bookmarks, will load userMeta and the associated nodes, and return as a node list\n@param {module:model/RestUserBookmarksRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestBulkMetaResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestUserBookmarksRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestBulkMetaResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Special API for Bookmarks, will load userMeta and the associated nodes, and return as a node list"
          },
          {
            "name": "userBookmarks",
            "docblock": "Special API for Bookmarks, will load userMeta and the associated nodes, and return as a node list\n@param {module:model/RestUserBookmarksRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestBulkMetaResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestUserBookmarksRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestBulkMetaResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Special API for Bookmarks, will load userMeta and the associated nodes, and return as a node list"
          }
        ]
      }
    ],
    "core/http/gen/api/UserServiceApi.js": [
      {
        "description": "UserService service.\n@module api/UserServiceApi\n@version 1.0",
        "displayName": "UserServiceApi",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new UserServiceApi. \n@alias module:api/UserServiceApi\n@class\n@param {module:ApiClient} apiClient Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
            "modifiers": [],
            "params": [
              {
                "name": "apiClient",
                "description": "Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
                "type": {
                  "name": "module:ApiClient"
                }
              }
            ],
            "returns": null,
            "description": "Constructs a new UserServiceApi."
          },
          {
            "name": "deleteUserWithHttpInfo",
            "docblock": "Delete a user\n@param {String} login \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestDeleteResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "login",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestDeleteResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Delete a user"
          },
          {
            "name": "deleteUser",
            "docblock": "Delete a user\n@param {String} login \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestDeleteResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "login",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestDeleteResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Delete a user"
          },
          {
            "name": "getUserWithHttpInfo",
            "docblock": "Get a user by login\n@param {String} login \n@param {Object} opts Optional parameters\n@param {String} opts.uuid \n@param {String} opts.groupPath \n@param {String} opts.password \n@param {String} opts.oldPassword \n@param {Boolean} opts.isGroup Group specific data.\n@param {String} opts.groupLabel \n@param {Boolean} opts.policiesContextEditable \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/IdmUser} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "login",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "opts",
                "description": "Optional parameters",
                "type": {
                  "name": "Object"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/IdmUser} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Get a user by login"
          },
          {
            "name": "getUser",
            "docblock": "Get a user by login\n@param {String} login \n@param {Object} opts Optional parameters\n@param {String} opts.uuid \n@param {String} opts.groupPath \n@param {String} opts.password \n@param {String} opts.oldPassword \n@param {Boolean} opts.isGroup Group specific data.\n@param {String} opts.groupLabel \n@param {Boolean} opts.policiesContextEditable \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/IdmUser}",
            "modifiers": [],
            "params": [
              {
                "name": "login",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "opts",
                "description": "Optional parameters",
                "type": {
                  "name": "Object"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/IdmUser}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Get a user by login"
          },
          {
            "name": "putRolesWithHttpInfo",
            "docblock": "Just save a user roles, without other datas\n@param {String} login \n@param {module:model/IdmUser} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/IdmUser} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "login",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/IdmUser"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/IdmUser} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Just save a user roles, without other datas"
          },
          {
            "name": "putRoles",
            "docblock": "Just save a user roles, without other datas\n@param {String} login \n@param {module:model/IdmUser} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/IdmUser}",
            "modifiers": [],
            "params": [
              {
                "name": "login",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/IdmUser"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/IdmUser}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Just save a user roles, without other datas"
          },
          {
            "name": "putUserWithHttpInfo",
            "docblock": "Create or update a user\n@param {String} login \n@param {module:model/IdmUser} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/IdmUser} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "login",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/IdmUser"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/IdmUser} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Create or update a user"
          },
          {
            "name": "putUser",
            "docblock": "Create or update a user\n@param {String} login \n@param {module:model/IdmUser} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/IdmUser}",
            "modifiers": [],
            "params": [
              {
                "name": "login",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/IdmUser"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/IdmUser}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Create or update a user"
          },
          {
            "name": "searchUsersWithHttpInfo",
            "docblock": "List/Search users\n@param {module:model/RestSearchUserRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestUsersCollection} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestSearchUserRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestUsersCollection} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List/Search users"
          },
          {
            "name": "searchUsers",
            "docblock": "List/Search users\n@param {module:model/RestSearchUserRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestUsersCollection}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestSearchUserRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestUsersCollection}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "List/Search users"
          }
        ]
      }
    ],
    "core/http/gen/api/WorkspaceServiceApi.js": [
      {
        "description": "WorkspaceService service.\n@module api/WorkspaceServiceApi\n@version 1.0",
        "displayName": "WorkspaceServiceApi",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new WorkspaceServiceApi. \n@alias module:api/WorkspaceServiceApi\n@class\n@param {module:ApiClient} apiClient Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
            "modifiers": [],
            "params": [
              {
                "name": "apiClient",
                "description": "Optional API client implementation to use,\ndefault to {@link module:ApiClient#instance} if unspecified.",
                "type": {
                  "name": "module:ApiClient"
                }
              }
            ],
            "returns": null,
            "description": "Constructs a new WorkspaceServiceApi."
          },
          {
            "name": "deleteWorkspaceWithHttpInfo",
            "docblock": "Delete an existing workspace\n@param {String} slug \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestDeleteResponse} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "slug",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestDeleteResponse} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Delete an existing workspace"
          },
          {
            "name": "deleteWorkspace",
            "docblock": "Delete an existing workspace\n@param {String} slug \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestDeleteResponse}",
            "modifiers": [],
            "params": [
              {
                "name": "slug",
                "description": null,
                "type": {
                  "name": "String"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestDeleteResponse}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Delete an existing workspace"
          },
          {
            "name": "putWorkspaceWithHttpInfo",
            "docblock": "Create or update a workspace\n@param {String} slug \n@param {module:model/IdmWorkspace} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/IdmWorkspace} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "slug",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/IdmWorkspace"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/IdmWorkspace} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Create or update a workspace"
          },
          {
            "name": "putWorkspace",
            "docblock": "Create or update a workspace\n@param {String} slug \n@param {module:model/IdmWorkspace} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/IdmWorkspace}",
            "modifiers": [],
            "params": [
              {
                "name": "slug",
                "description": null,
                "type": {
                  "name": "String"
                }
              },
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/IdmWorkspace"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/IdmWorkspace}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Create or update a workspace"
          },
          {
            "name": "searchWorkspacesWithHttpInfo",
            "docblock": "Search workspaces on certain keys\n@param {module:model/RestSearchWorkspaceRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestWorkspaceCollection} and HTTP response",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestSearchWorkspaceRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestWorkspaceCollection} and HTTP response",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Search workspaces on certain keys"
          },
          {
            "name": "searchWorkspaces",
            "docblock": "Search workspaces on certain keys\n@param {module:model/RestSearchWorkspaceRequest} body \n@return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestWorkspaceCollection}",
            "modifiers": [],
            "params": [
              {
                "name": "body",
                "description": null,
                "type": {
                  "name": "module:model/RestSearchWorkspaceRequest"
                }
              }
            ],
            "returns": {
              "description": "a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestWorkspaceCollection}",
              "type": {
                "name": "Promise"
              }
            },
            "description": "Search workspaces on certain keys"
          }
        ]
      }
    ],
    "core/http/gen/model/ActivityObject.js": [
      {
        "description": "The ActivityObject model module.\n@module model/ActivityObject\n@version 1.0",
        "displayName": "ActivityObject",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>ActivityObject</code>.\n@alias module:model/ActivityObject\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>ActivityObject</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>ActivityObject</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/ActivityObject} obj Optional instance to populate.\n@return {module:model/ActivityObject} The populated <code>ActivityObject</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/ActivityObject"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>ActivityObject</code> instance.",
              "type": {
                "name": "module:model/ActivityObject"
              }
            },
            "description": "Constructs a <code>ActivityObject</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/ActivityObjectType.js": [
      {
        "description": "Enum class ActivityObjectType.\n@enum {}\n@readonly",
        "displayName": "ActivityObjectType",
        "methods": [
          {
            "name": "constructFromObject",
            "docblock": "Returns a <code>ActivityObjectType</code> enum value from a Javascript object name.\n@param {Object} data The plain JavaScript object containing the name of the enum value.\n@return {module:model/ActivityObjectType} The enum <code>ActivityObjectType</code> value.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "object"
              }
            ],
            "returns": {
              "description": "The enum <code>ActivityObjectType</code> value.",
              "type": {
                "name": "module:model/ActivityObjectType"
              }
            },
            "description": "Returns a <code>ActivityObjectType</code> enum value from a Javascript object name."
          }
        ]
      }
    ],
    "core/http/gen/model/ActivityOwnerType.js": [
      {
        "description": "Enum class ActivityOwnerType.\n@enum {}\n@readonly",
        "displayName": "ActivityOwnerType",
        "methods": [
          {
            "name": "constructFromObject",
            "docblock": "Returns a <code>ActivityOwnerType</code> enum value from a Javascript object name.\n@param {Object} data The plain JavaScript object containing the name of the enum value.\n@return {module:model/ActivityOwnerType} The enum <code>ActivityOwnerType</code> value.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "object"
              }
            ],
            "returns": {
              "description": "The enum <code>ActivityOwnerType</code> value.",
              "type": {
                "name": "module:model/ActivityOwnerType"
              }
            },
            "description": "Returns a <code>ActivityOwnerType</code> enum value from a Javascript object name."
          }
        ]
      }
    ],
    "core/http/gen/model/ActivitySearchSubscriptionsRequest.js": [
      {
        "description": "The ActivitySearchSubscriptionsRequest model module.\n@module model/ActivitySearchSubscriptionsRequest\n@version 1.0",
        "displayName": "ActivitySearchSubscriptionsRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>ActivitySearchSubscriptionsRequest</code>.\n@alias module:model/ActivitySearchSubscriptionsRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>ActivitySearchSubscriptionsRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>ActivitySearchSubscriptionsRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/ActivitySearchSubscriptionsRequest} obj Optional instance to populate.\n@return {module:model/ActivitySearchSubscriptionsRequest} The populated <code>ActivitySearchSubscriptionsRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/ActivitySearchSubscriptionsRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>ActivitySearchSubscriptionsRequest</code> instance.",
              "type": {
                "name": "module:model/ActivitySearchSubscriptionsRequest"
              }
            },
            "description": "Constructs a <code>ActivitySearchSubscriptionsRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/ActivityStreamActivitiesRequest.js": [
      {
        "description": "The ActivityStreamActivitiesRequest model module.\n@module model/ActivityStreamActivitiesRequest\n@version 1.0",
        "displayName": "ActivityStreamActivitiesRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>ActivityStreamActivitiesRequest</code>.\n@alias module:model/ActivityStreamActivitiesRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>ActivityStreamActivitiesRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>ActivityStreamActivitiesRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/ActivityStreamActivitiesRequest} obj Optional instance to populate.\n@return {module:model/ActivityStreamActivitiesRequest} The populated <code>ActivityStreamActivitiesRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/ActivityStreamActivitiesRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>ActivityStreamActivitiesRequest</code> instance.",
              "type": {
                "name": "module:model/ActivityStreamActivitiesRequest"
              }
            },
            "description": "Constructs a <code>ActivityStreamActivitiesRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/ActivityStreamContext.js": [
      {
        "description": "Enum class ActivityStreamContext.\n@enum {}\n@readonly",
        "displayName": "ActivityStreamContext",
        "methods": [
          {
            "name": "constructFromObject",
            "docblock": "Returns a <code>ActivityStreamContext</code> enum value from a Javascript object name.\n@param {Object} data The plain JavaScript object containing the name of the enum value.\n@return {module:model/ActivityStreamContext} The enum <code>ActivityStreamContext</code> value.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "object"
              }
            ],
            "returns": {
              "description": "The enum <code>ActivityStreamContext</code> value.",
              "type": {
                "name": "module:model/ActivityStreamContext"
              }
            },
            "description": "Returns a <code>ActivityStreamContext</code> enum value from a Javascript object name."
          }
        ]
      }
    ],
    "core/http/gen/model/ActivitySubscription.js": [
      {
        "description": "The ActivitySubscription model module.\n@module model/ActivitySubscription\n@version 1.0",
        "displayName": "ActivitySubscription",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>ActivitySubscription</code>.\n@alias module:model/ActivitySubscription\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>ActivitySubscription</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>ActivitySubscription</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/ActivitySubscription} obj Optional instance to populate.\n@return {module:model/ActivitySubscription} The populated <code>ActivitySubscription</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/ActivitySubscription"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>ActivitySubscription</code> instance.",
              "type": {
                "name": "module:model/ActivitySubscription"
              }
            },
            "description": "Constructs a <code>ActivitySubscription</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/ActivitySummaryPointOfView.js": [
      {
        "description": "Enum class ActivitySummaryPointOfView.\n@enum {}\n@readonly",
        "displayName": "ActivitySummaryPointOfView",
        "methods": [
          {
            "name": "constructFromObject",
            "docblock": "Returns a <code>ActivitySummaryPointOfView</code> enum value from a Javascript object name.\n@param {Object} data The plain JavaScript object containing the name of the enum value.\n@return {module:model/ActivitySummaryPointOfView} The enum <code>ActivitySummaryPointOfView</code> value.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "object"
              }
            ],
            "returns": {
              "description": "The enum <code>ActivitySummaryPointOfView</code> value.",
              "type": {
                "name": "module:model/ActivitySummaryPointOfView"
              }
            },
            "description": "Returns a <code>ActivitySummaryPointOfView</code> enum value from a Javascript object name."
          }
        ]
      }
    ],
    "core/http/gen/model/CtlPeer.js": [
      {
        "description": "The CtlPeer model module.\n@module model/CtlPeer\n@version 1.0",
        "displayName": "CtlPeer",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>CtlPeer</code>.\n@alias module:model/CtlPeer\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>CtlPeer</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>CtlPeer</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/CtlPeer} obj Optional instance to populate.\n@return {module:model/CtlPeer} The populated <code>CtlPeer</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/CtlPeer"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>CtlPeer</code> instance.",
              "type": {
                "name": "module:model/CtlPeer"
              }
            },
            "description": "Constructs a <code>CtlPeer</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/CtlService.js": [
      {
        "description": "The CtlService model module.\n@module model/CtlService\n@version 1.0",
        "displayName": "CtlService",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>CtlService</code>.\n@alias module:model/CtlService\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>CtlService</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>CtlService</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/CtlService} obj Optional instance to populate.\n@return {module:model/CtlService} The populated <code>CtlService</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/CtlService"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>CtlService</code> instance.",
              "type": {
                "name": "module:model/CtlService"
              }
            },
            "description": "Constructs a <code>CtlService</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/CtlServiceCommand.js": [
      {
        "description": "Enum class CtlServiceCommand.\n@enum {}\n@readonly",
        "displayName": "CtlServiceCommand",
        "methods": [
          {
            "name": "constructFromObject",
            "docblock": "Returns a <code>CtlServiceCommand</code> enum value from a Javascript object name.\n@param {Object} data The plain JavaScript object containing the name of the enum value.\n@return {module:model/CtlServiceCommand} The enum <code>CtlServiceCommand</code> value.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "object"
              }
            ],
            "returns": {
              "description": "The enum <code>CtlServiceCommand</code> value.",
              "type": {
                "name": "module:model/CtlServiceCommand"
              }
            },
            "description": "Returns a <code>CtlServiceCommand</code> enum value from a Javascript object name."
          }
        ]
      }
    ],
    "core/http/gen/model/CtlServiceStatus.js": [
      {
        "description": "Enum class CtlServiceStatus.\n@enum {}\n@readonly",
        "displayName": "CtlServiceStatus",
        "methods": [
          {
            "name": "constructFromObject",
            "docblock": "Returns a <code>CtlServiceStatus</code> enum value from a Javascript object name.\n@param {Object} data The plain JavaScript object containing the name of the enum value.\n@return {module:model/CtlServiceStatus} The enum <code>CtlServiceStatus</code> value.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "object"
              }
            ],
            "returns": {
              "description": "The enum <code>CtlServiceStatus</code> value.",
              "type": {
                "name": "module:model/CtlServiceStatus"
              }
            },
            "description": "Returns a <code>CtlServiceStatus</code> enum value from a Javascript object name."
          }
        ]
      }
    ],
    "core/http/gen/model/EncryptionAdminCreateKeyRequest.js": [
      {
        "description": "The EncryptionAdminCreateKeyRequest model module.\n@module model/EncryptionAdminCreateKeyRequest\n@version 1.0",
        "displayName": "EncryptionAdminCreateKeyRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>EncryptionAdminCreateKeyRequest</code>.\n@alias module:model/EncryptionAdminCreateKeyRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>EncryptionAdminCreateKeyRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>EncryptionAdminCreateKeyRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/EncryptionAdminCreateKeyRequest} obj Optional instance to populate.\n@return {module:model/EncryptionAdminCreateKeyRequest} The populated <code>EncryptionAdminCreateKeyRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/EncryptionAdminCreateKeyRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>EncryptionAdminCreateKeyRequest</code> instance.",
              "type": {
                "name": "module:model/EncryptionAdminCreateKeyRequest"
              }
            },
            "description": "Constructs a <code>EncryptionAdminCreateKeyRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/EncryptionAdminCreateKeyResponse.js": [
      {
        "description": "The EncryptionAdminCreateKeyResponse model module.\n@module model/EncryptionAdminCreateKeyResponse\n@version 1.0",
        "displayName": "EncryptionAdminCreateKeyResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>EncryptionAdminCreateKeyResponse</code>.\n@alias module:model/EncryptionAdminCreateKeyResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>EncryptionAdminCreateKeyResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>EncryptionAdminCreateKeyResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/EncryptionAdminCreateKeyResponse} obj Optional instance to populate.\n@return {module:model/EncryptionAdminCreateKeyResponse} The populated <code>EncryptionAdminCreateKeyResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/EncryptionAdminCreateKeyResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>EncryptionAdminCreateKeyResponse</code> instance.",
              "type": {
                "name": "module:model/EncryptionAdminCreateKeyResponse"
              }
            },
            "description": "Constructs a <code>EncryptionAdminCreateKeyResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/EncryptionAdminDeleteKeyRequest.js": [
      {
        "description": "The EncryptionAdminDeleteKeyRequest model module.\n@module model/EncryptionAdminDeleteKeyRequest\n@version 1.0",
        "displayName": "EncryptionAdminDeleteKeyRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>EncryptionAdminDeleteKeyRequest</code>.\n@alias module:model/EncryptionAdminDeleteKeyRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>EncryptionAdminDeleteKeyRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>EncryptionAdminDeleteKeyRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/EncryptionAdminDeleteKeyRequest} obj Optional instance to populate.\n@return {module:model/EncryptionAdminDeleteKeyRequest} The populated <code>EncryptionAdminDeleteKeyRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/EncryptionAdminDeleteKeyRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>EncryptionAdminDeleteKeyRequest</code> instance.",
              "type": {
                "name": "module:model/EncryptionAdminDeleteKeyRequest"
              }
            },
            "description": "Constructs a <code>EncryptionAdminDeleteKeyRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/EncryptionAdminDeleteKeyResponse.js": [
      {
        "description": "The EncryptionAdminDeleteKeyResponse model module.\n@module model/EncryptionAdminDeleteKeyResponse\n@version 1.0",
        "displayName": "EncryptionAdminDeleteKeyResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>EncryptionAdminDeleteKeyResponse</code>.\n@alias module:model/EncryptionAdminDeleteKeyResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>EncryptionAdminDeleteKeyResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>EncryptionAdminDeleteKeyResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/EncryptionAdminDeleteKeyResponse} obj Optional instance to populate.\n@return {module:model/EncryptionAdminDeleteKeyResponse} The populated <code>EncryptionAdminDeleteKeyResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/EncryptionAdminDeleteKeyResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>EncryptionAdminDeleteKeyResponse</code> instance.",
              "type": {
                "name": "module:model/EncryptionAdminDeleteKeyResponse"
              }
            },
            "description": "Constructs a <code>EncryptionAdminDeleteKeyResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/EncryptionAdminExportKeyRequest.js": [
      {
        "description": "The EncryptionAdminExportKeyRequest model module.\n@module model/EncryptionAdminExportKeyRequest\n@version 1.0",
        "displayName": "EncryptionAdminExportKeyRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>EncryptionAdminExportKeyRequest</code>.\n@alias module:model/EncryptionAdminExportKeyRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>EncryptionAdminExportKeyRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>EncryptionAdminExportKeyRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/EncryptionAdminExportKeyRequest} obj Optional instance to populate.\n@return {module:model/EncryptionAdminExportKeyRequest} The populated <code>EncryptionAdminExportKeyRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/EncryptionAdminExportKeyRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>EncryptionAdminExportKeyRequest</code> instance.",
              "type": {
                "name": "module:model/EncryptionAdminExportKeyRequest"
              }
            },
            "description": "Constructs a <code>EncryptionAdminExportKeyRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/EncryptionAdminExportKeyResponse.js": [
      {
        "description": "The EncryptionAdminExportKeyResponse model module.\n@module model/EncryptionAdminExportKeyResponse\n@version 1.0",
        "displayName": "EncryptionAdminExportKeyResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>EncryptionAdminExportKeyResponse</code>.\n@alias module:model/EncryptionAdminExportKeyResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>EncryptionAdminExportKeyResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>EncryptionAdminExportKeyResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/EncryptionAdminExportKeyResponse} obj Optional instance to populate.\n@return {module:model/EncryptionAdminExportKeyResponse} The populated <code>EncryptionAdminExportKeyResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/EncryptionAdminExportKeyResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>EncryptionAdminExportKeyResponse</code> instance.",
              "type": {
                "name": "module:model/EncryptionAdminExportKeyResponse"
              }
            },
            "description": "Constructs a <code>EncryptionAdminExportKeyResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/EncryptionAdminImportKeyRequest.js": [
      {
        "description": "The EncryptionAdminImportKeyRequest model module.\n@module model/EncryptionAdminImportKeyRequest\n@version 1.0",
        "displayName": "EncryptionAdminImportKeyRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>EncryptionAdminImportKeyRequest</code>.\n@alias module:model/EncryptionAdminImportKeyRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>EncryptionAdminImportKeyRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>EncryptionAdminImportKeyRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/EncryptionAdminImportKeyRequest} obj Optional instance to populate.\n@return {module:model/EncryptionAdminImportKeyRequest} The populated <code>EncryptionAdminImportKeyRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/EncryptionAdminImportKeyRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>EncryptionAdminImportKeyRequest</code> instance.",
              "type": {
                "name": "module:model/EncryptionAdminImportKeyRequest"
              }
            },
            "description": "Constructs a <code>EncryptionAdminImportKeyRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/EncryptionAdminImportKeyResponse.js": [
      {
        "description": "The EncryptionAdminImportKeyResponse model module.\n@module model/EncryptionAdminImportKeyResponse\n@version 1.0",
        "displayName": "EncryptionAdminImportKeyResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>EncryptionAdminImportKeyResponse</code>.\n@alias module:model/EncryptionAdminImportKeyResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>EncryptionAdminImportKeyResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>EncryptionAdminImportKeyResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/EncryptionAdminImportKeyResponse} obj Optional instance to populate.\n@return {module:model/EncryptionAdminImportKeyResponse} The populated <code>EncryptionAdminImportKeyResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/EncryptionAdminImportKeyResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>EncryptionAdminImportKeyResponse</code> instance.",
              "type": {
                "name": "module:model/EncryptionAdminImportKeyResponse"
              }
            },
            "description": "Constructs a <code>EncryptionAdminImportKeyResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/EncryptionAdminListKeysRequest.js": [
      {
        "description": "The EncryptionAdminListKeysRequest model module.\n@module model/EncryptionAdminListKeysRequest\n@version 1.0",
        "displayName": "EncryptionAdminListKeysRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>EncryptionAdminListKeysRequest</code>.\n@alias module:model/EncryptionAdminListKeysRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>EncryptionAdminListKeysRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>EncryptionAdminListKeysRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/EncryptionAdminListKeysRequest} obj Optional instance to populate.\n@return {module:model/EncryptionAdminListKeysRequest} The populated <code>EncryptionAdminListKeysRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/EncryptionAdminListKeysRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>EncryptionAdminListKeysRequest</code> instance.",
              "type": {
                "name": "module:model/EncryptionAdminListKeysRequest"
              }
            },
            "description": "Constructs a <code>EncryptionAdminListKeysRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/EncryptionAdminListKeysResponse.js": [
      {
        "description": "The EncryptionAdminListKeysResponse model module.\n@module model/EncryptionAdminListKeysResponse\n@version 1.0",
        "displayName": "EncryptionAdminListKeysResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>EncryptionAdminListKeysResponse</code>.\n@alias module:model/EncryptionAdminListKeysResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>EncryptionAdminListKeysResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>EncryptionAdminListKeysResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/EncryptionAdminListKeysResponse} obj Optional instance to populate.\n@return {module:model/EncryptionAdminListKeysResponse} The populated <code>EncryptionAdminListKeysResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/EncryptionAdminListKeysResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>EncryptionAdminListKeysResponse</code> instance.",
              "type": {
                "name": "module:model/EncryptionAdminListKeysResponse"
              }
            },
            "description": "Constructs a <code>EncryptionAdminListKeysResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/EncryptionExport.js": [
      {
        "description": "The EncryptionExport model module.\n@module model/EncryptionExport\n@version 1.0",
        "displayName": "EncryptionExport",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>EncryptionExport</code>.\n@alias module:model/EncryptionExport\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>EncryptionExport</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>EncryptionExport</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/EncryptionExport} obj Optional instance to populate.\n@return {module:model/EncryptionExport} The populated <code>EncryptionExport</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/EncryptionExport"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>EncryptionExport</code> instance.",
              "type": {
                "name": "module:model/EncryptionExport"
              }
            },
            "description": "Constructs a <code>EncryptionExport</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/EncryptionImport.js": [
      {
        "description": "The EncryptionImport model module.\n@module model/EncryptionImport\n@version 1.0",
        "displayName": "EncryptionImport",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>EncryptionImport</code>.\n@alias module:model/EncryptionImport\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>EncryptionImport</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>EncryptionImport</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/EncryptionImport} obj Optional instance to populate.\n@return {module:model/EncryptionImport} The populated <code>EncryptionImport</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/EncryptionImport"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>EncryptionImport</code> instance.",
              "type": {
                "name": "module:model/EncryptionImport"
              }
            },
            "description": "Constructs a <code>EncryptionImport</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/EncryptionKey.js": [
      {
        "description": "The EncryptionKey model module.\n@module model/EncryptionKey\n@version 1.0",
        "displayName": "EncryptionKey",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>EncryptionKey</code>.\n@alias module:model/EncryptionKey\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>EncryptionKey</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>EncryptionKey</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/EncryptionKey} obj Optional instance to populate.\n@return {module:model/EncryptionKey} The populated <code>EncryptionKey</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/EncryptionKey"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>EncryptionKey</code> instance.",
              "type": {
                "name": "module:model/EncryptionKey"
              }
            },
            "description": "Constructs a <code>EncryptionKey</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/EncryptionKeyInfo.js": [
      {
        "description": "The EncryptionKeyInfo model module.\n@module model/EncryptionKeyInfo\n@version 1.0",
        "displayName": "EncryptionKeyInfo",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>EncryptionKeyInfo</code>.\n@alias module:model/EncryptionKeyInfo\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>EncryptionKeyInfo</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>EncryptionKeyInfo</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/EncryptionKeyInfo} obj Optional instance to populate.\n@return {module:model/EncryptionKeyInfo} The populated <code>EncryptionKeyInfo</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/EncryptionKeyInfo"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>EncryptionKeyInfo</code> instance.",
              "type": {
                "name": "module:model/EncryptionKeyInfo"
              }
            },
            "description": "Constructs a <code>EncryptionKeyInfo</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/IdmACL.js": [
      {
        "description": "The IdmACL model module.\n@module model/IdmACL\n@version 1.0",
        "displayName": "IdmACL",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>IdmACL</code>.\n@alias module:model/IdmACL\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>IdmACL</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>IdmACL</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/IdmACL} obj Optional instance to populate.\n@return {module:model/IdmACL} The populated <code>IdmACL</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/IdmACL"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>IdmACL</code> instance.",
              "type": {
                "name": "module:model/IdmACL"
              }
            },
            "description": "Constructs a <code>IdmACL</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/IdmACLAction.js": [
      {
        "description": "The IdmACLAction model module.\n@module model/IdmACLAction\n@version 1.0",
        "displayName": "IdmACLAction",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>IdmACLAction</code>.\n@alias module:model/IdmACLAction\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>IdmACLAction</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>IdmACLAction</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/IdmACLAction} obj Optional instance to populate.\n@return {module:model/IdmACLAction} The populated <code>IdmACLAction</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/IdmACLAction"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>IdmACLAction</code> instance.",
              "type": {
                "name": "module:model/IdmACLAction"
              }
            },
            "description": "Constructs a <code>IdmACLAction</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/IdmACLSingleQuery.js": [
      {
        "description": "The IdmACLSingleQuery model module.\n@module model/IdmACLSingleQuery\n@version 1.0",
        "displayName": "IdmACLSingleQuery",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>IdmACLSingleQuery</code>.\n@alias module:model/IdmACLSingleQuery\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>IdmACLSingleQuery</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>IdmACLSingleQuery</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/IdmACLSingleQuery} obj Optional instance to populate.\n@return {module:model/IdmACLSingleQuery} The populated <code>IdmACLSingleQuery</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/IdmACLSingleQuery"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>IdmACLSingleQuery</code> instance.",
              "type": {
                "name": "module:model/IdmACLSingleQuery"
              }
            },
            "description": "Constructs a <code>IdmACLSingleQuery</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/IdmListPolicyGroupsRequest.js": [
      {
        "description": "The IdmListPolicyGroupsRequest model module.\n@module model/IdmListPolicyGroupsRequest\n@version 1.0",
        "displayName": "IdmListPolicyGroupsRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>IdmListPolicyGroupsRequest</code>.\n@alias module:model/IdmListPolicyGroupsRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>IdmListPolicyGroupsRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>IdmListPolicyGroupsRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/IdmListPolicyGroupsRequest} obj Optional instance to populate.\n@return {module:model/IdmListPolicyGroupsRequest} The populated <code>IdmListPolicyGroupsRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/IdmListPolicyGroupsRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>IdmListPolicyGroupsRequest</code> instance.",
              "type": {
                "name": "module:model/IdmListPolicyGroupsRequest"
              }
            },
            "description": "Constructs a <code>IdmListPolicyGroupsRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/IdmListPolicyGroupsResponse.js": [
      {
        "description": "The IdmListPolicyGroupsResponse model module.\n@module model/IdmListPolicyGroupsResponse\n@version 1.0",
        "displayName": "IdmListPolicyGroupsResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>IdmListPolicyGroupsResponse</code>.\n@alias module:model/IdmListPolicyGroupsResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>IdmListPolicyGroupsResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>IdmListPolicyGroupsResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/IdmListPolicyGroupsResponse} obj Optional instance to populate.\n@return {module:model/IdmListPolicyGroupsResponse} The populated <code>IdmListPolicyGroupsResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/IdmListPolicyGroupsResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>IdmListPolicyGroupsResponse</code> instance.",
              "type": {
                "name": "module:model/IdmListPolicyGroupsResponse"
              }
            },
            "description": "Constructs a <code>IdmListPolicyGroupsResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/IdmNodeType.js": [
      {
        "description": "Enum class IdmNodeType.\n@enum {}\n@readonly",
        "displayName": "IdmNodeType",
        "methods": [
          {
            "name": "constructFromObject",
            "docblock": "Returns a <code>IdmNodeType</code> enum value from a Javascript object name.\n@param {Object} data The plain JavaScript object containing the name of the enum value.\n@return {module:model/IdmNodeType} The enum <code>IdmNodeType</code> value.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "object"
              }
            ],
            "returns": {
              "description": "The enum <code>IdmNodeType</code> value.",
              "type": {
                "name": "module:model/IdmNodeType"
              }
            },
            "description": "Returns a <code>IdmNodeType</code> enum value from a Javascript object name."
          }
        ]
      }
    ],
    "core/http/gen/model/IdmPolicy.js": [
      {
        "description": "The IdmPolicy model module.\n@module model/IdmPolicy\n@version 1.0",
        "displayName": "IdmPolicy",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>IdmPolicy</code>.\n@alias module:model/IdmPolicy\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>IdmPolicy</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>IdmPolicy</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/IdmPolicy} obj Optional instance to populate.\n@return {module:model/IdmPolicy} The populated <code>IdmPolicy</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/IdmPolicy"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>IdmPolicy</code> instance.",
              "type": {
                "name": "module:model/IdmPolicy"
              }
            },
            "description": "Constructs a <code>IdmPolicy</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/IdmPolicyCondition.js": [
      {
        "description": "The IdmPolicyCondition model module.\n@module model/IdmPolicyCondition\n@version 1.0",
        "displayName": "IdmPolicyCondition",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>IdmPolicyCondition</code>.\n@alias module:model/IdmPolicyCondition\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>IdmPolicyCondition</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>IdmPolicyCondition</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/IdmPolicyCondition} obj Optional instance to populate.\n@return {module:model/IdmPolicyCondition} The populated <code>IdmPolicyCondition</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/IdmPolicyCondition"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>IdmPolicyCondition</code> instance.",
              "type": {
                "name": "module:model/IdmPolicyCondition"
              }
            },
            "description": "Constructs a <code>IdmPolicyCondition</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/IdmPolicyEffect.js": [
      {
        "description": "Enum class IdmPolicyEffect.\n@enum {}\n@readonly",
        "displayName": "IdmPolicyEffect",
        "methods": [
          {
            "name": "constructFromObject",
            "docblock": "Returns a <code>IdmPolicyEffect</code> enum value from a Javascript object name.\n@param {Object} data The plain JavaScript object containing the name of the enum value.\n@return {module:model/IdmPolicyEffect} The enum <code>IdmPolicyEffect</code> value.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "object"
              }
            ],
            "returns": {
              "description": "The enum <code>IdmPolicyEffect</code> value.",
              "type": {
                "name": "module:model/IdmPolicyEffect"
              }
            },
            "description": "Returns a <code>IdmPolicyEffect</code> enum value from a Javascript object name."
          }
        ]
      }
    ],
    "core/http/gen/model/IdmPolicyGroup.js": [
      {
        "description": "The IdmPolicyGroup model module.\n@module model/IdmPolicyGroup\n@version 1.0",
        "displayName": "IdmPolicyGroup",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>IdmPolicyGroup</code>.\n@alias module:model/IdmPolicyGroup\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>IdmPolicyGroup</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>IdmPolicyGroup</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/IdmPolicyGroup} obj Optional instance to populate.\n@return {module:model/IdmPolicyGroup} The populated <code>IdmPolicyGroup</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/IdmPolicyGroup"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>IdmPolicyGroup</code> instance.",
              "type": {
                "name": "module:model/IdmPolicyGroup"
              }
            },
            "description": "Constructs a <code>IdmPolicyGroup</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/IdmPolicyResourceGroup.js": [
      {
        "description": "Enum class IdmPolicyResourceGroup.\n@enum {}\n@readonly",
        "displayName": "IdmPolicyResourceGroup",
        "methods": [
          {
            "name": "constructFromObject",
            "docblock": "Returns a <code>IdmPolicyResourceGroup</code> enum value from a Javascript object name.\n@param {Object} data The plain JavaScript object containing the name of the enum value.\n@return {module:model/IdmPolicyResourceGroup} The enum <code>IdmPolicyResourceGroup</code> value.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "object"
              }
            ],
            "returns": {
              "description": "The enum <code>IdmPolicyResourceGroup</code> value.",
              "type": {
                "name": "module:model/IdmPolicyResourceGroup"
              }
            },
            "description": "Returns a <code>IdmPolicyResourceGroup</code> enum value from a Javascript object name."
          }
        ]
      }
    ],
    "core/http/gen/model/IdmRole.js": [
      {
        "description": "The IdmRole model module.\n@module model/IdmRole\n@version 1.0",
        "displayName": "IdmRole",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>IdmRole</code>.\n@alias module:model/IdmRole\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>IdmRole</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>IdmRole</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/IdmRole} obj Optional instance to populate.\n@return {module:model/IdmRole} The populated <code>IdmRole</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/IdmRole"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>IdmRole</code> instance.",
              "type": {
                "name": "module:model/IdmRole"
              }
            },
            "description": "Constructs a <code>IdmRole</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/IdmRoleSingleQuery.js": [
      {
        "description": "The IdmRoleSingleQuery model module.\n@module model/IdmRoleSingleQuery\n@version 1.0",
        "displayName": "IdmRoleSingleQuery",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>IdmRoleSingleQuery</code>.\n@alias module:model/IdmRoleSingleQuery\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>IdmRoleSingleQuery</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>IdmRoleSingleQuery</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/IdmRoleSingleQuery} obj Optional instance to populate.\n@return {module:model/IdmRoleSingleQuery} The populated <code>IdmRoleSingleQuery</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/IdmRoleSingleQuery"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>IdmRoleSingleQuery</code> instance.",
              "type": {
                "name": "module:model/IdmRoleSingleQuery"
              }
            },
            "description": "Constructs a <code>IdmRoleSingleQuery</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/IdmSearchUserMetaRequest.js": [
      {
        "description": "The IdmSearchUserMetaRequest model module.\n@module model/IdmSearchUserMetaRequest\n@version 1.0",
        "displayName": "IdmSearchUserMetaRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>IdmSearchUserMetaRequest</code>.\n@alias module:model/IdmSearchUserMetaRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>IdmSearchUserMetaRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>IdmSearchUserMetaRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/IdmSearchUserMetaRequest} obj Optional instance to populate.\n@return {module:model/IdmSearchUserMetaRequest} The populated <code>IdmSearchUserMetaRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/IdmSearchUserMetaRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>IdmSearchUserMetaRequest</code> instance.",
              "type": {
                "name": "module:model/IdmSearchUserMetaRequest"
              }
            },
            "description": "Constructs a <code>IdmSearchUserMetaRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/IdmUpdateUserMetaNamespaceRequest.js": [
      {
        "description": "The IdmUpdateUserMetaNamespaceRequest model module.\n@module model/IdmUpdateUserMetaNamespaceRequest\n@version 1.0",
        "displayName": "IdmUpdateUserMetaNamespaceRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>IdmUpdateUserMetaNamespaceRequest</code>.\n@alias module:model/IdmUpdateUserMetaNamespaceRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>IdmUpdateUserMetaNamespaceRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>IdmUpdateUserMetaNamespaceRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/IdmUpdateUserMetaNamespaceRequest} obj Optional instance to populate.\n@return {module:model/IdmUpdateUserMetaNamespaceRequest} The populated <code>IdmUpdateUserMetaNamespaceRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/IdmUpdateUserMetaNamespaceRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>IdmUpdateUserMetaNamespaceRequest</code> instance.",
              "type": {
                "name": "module:model/IdmUpdateUserMetaNamespaceRequest"
              }
            },
            "description": "Constructs a <code>IdmUpdateUserMetaNamespaceRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/IdmUpdateUserMetaNamespaceResponse.js": [
      {
        "description": "The IdmUpdateUserMetaNamespaceResponse model module.\n@module model/IdmUpdateUserMetaNamespaceResponse\n@version 1.0",
        "displayName": "IdmUpdateUserMetaNamespaceResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>IdmUpdateUserMetaNamespaceResponse</code>.\n@alias module:model/IdmUpdateUserMetaNamespaceResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>IdmUpdateUserMetaNamespaceResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>IdmUpdateUserMetaNamespaceResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/IdmUpdateUserMetaNamespaceResponse} obj Optional instance to populate.\n@return {module:model/IdmUpdateUserMetaNamespaceResponse} The populated <code>IdmUpdateUserMetaNamespaceResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/IdmUpdateUserMetaNamespaceResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>IdmUpdateUserMetaNamespaceResponse</code> instance.",
              "type": {
                "name": "module:model/IdmUpdateUserMetaNamespaceResponse"
              }
            },
            "description": "Constructs a <code>IdmUpdateUserMetaNamespaceResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/IdmUpdateUserMetaRequest.js": [
      {
        "description": "The IdmUpdateUserMetaRequest model module.\n@module model/IdmUpdateUserMetaRequest\n@version 1.0",
        "displayName": "IdmUpdateUserMetaRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>IdmUpdateUserMetaRequest</code>.\n@alias module:model/IdmUpdateUserMetaRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>IdmUpdateUserMetaRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>IdmUpdateUserMetaRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/IdmUpdateUserMetaRequest} obj Optional instance to populate.\n@return {module:model/IdmUpdateUserMetaRequest} The populated <code>IdmUpdateUserMetaRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/IdmUpdateUserMetaRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>IdmUpdateUserMetaRequest</code> instance.",
              "type": {
                "name": "module:model/IdmUpdateUserMetaRequest"
              }
            },
            "description": "Constructs a <code>IdmUpdateUserMetaRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/IdmUpdateUserMetaResponse.js": [
      {
        "description": "The IdmUpdateUserMetaResponse model module.\n@module model/IdmUpdateUserMetaResponse\n@version 1.0",
        "displayName": "IdmUpdateUserMetaResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>IdmUpdateUserMetaResponse</code>.\n@alias module:model/IdmUpdateUserMetaResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>IdmUpdateUserMetaResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>IdmUpdateUserMetaResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/IdmUpdateUserMetaResponse} obj Optional instance to populate.\n@return {module:model/IdmUpdateUserMetaResponse} The populated <code>IdmUpdateUserMetaResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/IdmUpdateUserMetaResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>IdmUpdateUserMetaResponse</code> instance.",
              "type": {
                "name": "module:model/IdmUpdateUserMetaResponse"
              }
            },
            "description": "Constructs a <code>IdmUpdateUserMetaResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/IdmUser.js": [
      {
        "description": "The IdmUser model module.\n@module model/IdmUser\n@version 1.0",
        "displayName": "IdmUser",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>IdmUser</code>.\n@alias module:model/IdmUser\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>IdmUser</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>IdmUser</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/IdmUser} obj Optional instance to populate.\n@return {module:model/IdmUser} The populated <code>IdmUser</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/IdmUser"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>IdmUser</code> instance.",
              "type": {
                "name": "module:model/IdmUser"
              }
            },
            "description": "Constructs a <code>IdmUser</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/IdmUserMeta.js": [
      {
        "description": "The IdmUserMeta model module.\n@module model/IdmUserMeta\n@version 1.0",
        "displayName": "IdmUserMeta",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>IdmUserMeta</code>.\n@alias module:model/IdmUserMeta\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>IdmUserMeta</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>IdmUserMeta</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/IdmUserMeta} obj Optional instance to populate.\n@return {module:model/IdmUserMeta} The populated <code>IdmUserMeta</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/IdmUserMeta"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>IdmUserMeta</code> instance.",
              "type": {
                "name": "module:model/IdmUserMeta"
              }
            },
            "description": "Constructs a <code>IdmUserMeta</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/IdmUserMetaNamespace.js": [
      {
        "description": "The IdmUserMetaNamespace model module.\n@module model/IdmUserMetaNamespace\n@version 1.0",
        "displayName": "IdmUserMetaNamespace",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>IdmUserMetaNamespace</code>.\n@alias module:model/IdmUserMetaNamespace\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>IdmUserMetaNamespace</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>IdmUserMetaNamespace</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/IdmUserMetaNamespace} obj Optional instance to populate.\n@return {module:model/IdmUserMetaNamespace} The populated <code>IdmUserMetaNamespace</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/IdmUserMetaNamespace"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>IdmUserMetaNamespace</code> instance.",
              "type": {
                "name": "module:model/IdmUserMetaNamespace"
              }
            },
            "description": "Constructs a <code>IdmUserMetaNamespace</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/IdmUserSingleQuery.js": [
      {
        "description": "The IdmUserSingleQuery model module.\n@module model/IdmUserSingleQuery\n@version 1.0",
        "displayName": "IdmUserSingleQuery",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>IdmUserSingleQuery</code>.\n@alias module:model/IdmUserSingleQuery\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>IdmUserSingleQuery</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>IdmUserSingleQuery</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/IdmUserSingleQuery} obj Optional instance to populate.\n@return {module:model/IdmUserSingleQuery} The populated <code>IdmUserSingleQuery</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/IdmUserSingleQuery"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>IdmUserSingleQuery</code> instance.",
              "type": {
                "name": "module:model/IdmUserSingleQuery"
              }
            },
            "description": "Constructs a <code>IdmUserSingleQuery</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/IdmWorkspace.js": [
      {
        "description": "The IdmWorkspace model module.\n@module model/IdmWorkspace\n@version 1.0",
        "displayName": "IdmWorkspace",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>IdmWorkspace</code>.\n@alias module:model/IdmWorkspace\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>IdmWorkspace</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>IdmWorkspace</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/IdmWorkspace} obj Optional instance to populate.\n@return {module:model/IdmWorkspace} The populated <code>IdmWorkspace</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/IdmWorkspace"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>IdmWorkspace</code> instance.",
              "type": {
                "name": "module:model/IdmWorkspace"
              }
            },
            "description": "Constructs a <code>IdmWorkspace</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/IdmWorkspaceScope.js": [
      {
        "description": "Enum class IdmWorkspaceScope.\n@enum {}\n@readonly",
        "displayName": "IdmWorkspaceScope",
        "methods": [
          {
            "name": "constructFromObject",
            "docblock": "Returns a <code>IdmWorkspaceScope</code> enum value from a Javascript object name.\n@param {Object} data The plain JavaScript object containing the name of the enum value.\n@return {module:model/IdmWorkspaceScope} The enum <code>IdmWorkspaceScope</code> value.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "object"
              }
            ],
            "returns": {
              "description": "The enum <code>IdmWorkspaceScope</code> value.",
              "type": {
                "name": "module:model/IdmWorkspaceScope"
              }
            },
            "description": "Returns a <code>IdmWorkspaceScope</code> enum value from a Javascript object name."
          }
        ]
      }
    ],
    "core/http/gen/model/IdmWorkspaceSingleQuery.js": [
      {
        "description": "The IdmWorkspaceSingleQuery model module.\n@module model/IdmWorkspaceSingleQuery\n@version 1.0",
        "displayName": "IdmWorkspaceSingleQuery",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>IdmWorkspaceSingleQuery</code>.\n@alias module:model/IdmWorkspaceSingleQuery\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>IdmWorkspaceSingleQuery</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>IdmWorkspaceSingleQuery</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/IdmWorkspaceSingleQuery} obj Optional instance to populate.\n@return {module:model/IdmWorkspaceSingleQuery} The populated <code>IdmWorkspaceSingleQuery</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/IdmWorkspaceSingleQuery"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>IdmWorkspaceSingleQuery</code> instance.",
              "type": {
                "name": "module:model/IdmWorkspaceSingleQuery"
              }
            },
            "description": "Constructs a <code>IdmWorkspaceSingleQuery</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/InstallCheckResult.js": [
      {
        "description": "The InstallCheckResult model module.\n@module model/InstallCheckResult\n@version 1.0",
        "displayName": "InstallCheckResult",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>InstallCheckResult</code>.\n@alias module:model/InstallCheckResult\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>InstallCheckResult</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>InstallCheckResult</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/InstallCheckResult} obj Optional instance to populate.\n@return {module:model/InstallCheckResult} The populated <code>InstallCheckResult</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/InstallCheckResult"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>InstallCheckResult</code> instance.",
              "type": {
                "name": "module:model/InstallCheckResult"
              }
            },
            "description": "Constructs a <code>InstallCheckResult</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/InstallGetAgreementResponse.js": [
      {
        "description": "The InstallGetAgreementResponse model module.\n@module model/InstallGetAgreementResponse\n@version 1.0",
        "displayName": "InstallGetAgreementResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>InstallGetAgreementResponse</code>.\n@alias module:model/InstallGetAgreementResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>InstallGetAgreementResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>InstallGetAgreementResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/InstallGetAgreementResponse} obj Optional instance to populate.\n@return {module:model/InstallGetAgreementResponse} The populated <code>InstallGetAgreementResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/InstallGetAgreementResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>InstallGetAgreementResponse</code> instance.",
              "type": {
                "name": "module:model/InstallGetAgreementResponse"
              }
            },
            "description": "Constructs a <code>InstallGetAgreementResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/InstallGetDefaultsResponse.js": [
      {
        "description": "The InstallGetDefaultsResponse model module.\n@module model/InstallGetDefaultsResponse\n@version 1.0",
        "displayName": "InstallGetDefaultsResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>InstallGetDefaultsResponse</code>.\n@alias module:model/InstallGetDefaultsResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>InstallGetDefaultsResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>InstallGetDefaultsResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/InstallGetDefaultsResponse} obj Optional instance to populate.\n@return {module:model/InstallGetDefaultsResponse} The populated <code>InstallGetDefaultsResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/InstallGetDefaultsResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>InstallGetDefaultsResponse</code> instance.",
              "type": {
                "name": "module:model/InstallGetDefaultsResponse"
              }
            },
            "description": "Constructs a <code>InstallGetDefaultsResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/InstallInstallConfig.js": [
      {
        "description": "The InstallInstallConfig model module.\n@module model/InstallInstallConfig\n@version 1.0",
        "displayName": "InstallInstallConfig",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>InstallInstallConfig</code>.\n@alias module:model/InstallInstallConfig\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>InstallInstallConfig</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>InstallInstallConfig</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/InstallInstallConfig} obj Optional instance to populate.\n@return {module:model/InstallInstallConfig} The populated <code>InstallInstallConfig</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/InstallInstallConfig"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>InstallInstallConfig</code> instance.",
              "type": {
                "name": "module:model/InstallInstallConfig"
              }
            },
            "description": "Constructs a <code>InstallInstallConfig</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/InstallInstallRequest.js": [
      {
        "description": "The InstallInstallRequest model module.\n@module model/InstallInstallRequest\n@version 1.0",
        "displayName": "InstallInstallRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>InstallInstallRequest</code>.\n@alias module:model/InstallInstallRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>InstallInstallRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>InstallInstallRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/InstallInstallRequest} obj Optional instance to populate.\n@return {module:model/InstallInstallRequest} The populated <code>InstallInstallRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/InstallInstallRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>InstallInstallRequest</code> instance.",
              "type": {
                "name": "module:model/InstallInstallRequest"
              }
            },
            "description": "Constructs a <code>InstallInstallRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/InstallInstallResponse.js": [
      {
        "description": "The InstallInstallResponse model module.\n@module model/InstallInstallResponse\n@version 1.0",
        "displayName": "InstallInstallResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>InstallInstallResponse</code>.\n@alias module:model/InstallInstallResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>InstallInstallResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>InstallInstallResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/InstallInstallResponse} obj Optional instance to populate.\n@return {module:model/InstallInstallResponse} The populated <code>InstallInstallResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/InstallInstallResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>InstallInstallResponse</code> instance.",
              "type": {
                "name": "module:model/InstallInstallResponse"
              }
            },
            "description": "Constructs a <code>InstallInstallResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/InstallPerformCheckRequest.js": [
      {
        "description": "The InstallPerformCheckRequest model module.\n@module model/InstallPerformCheckRequest\n@version 1.0",
        "displayName": "InstallPerformCheckRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>InstallPerformCheckRequest</code>.\n@alias module:model/InstallPerformCheckRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>InstallPerformCheckRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>InstallPerformCheckRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/InstallPerformCheckRequest} obj Optional instance to populate.\n@return {module:model/InstallPerformCheckRequest} The populated <code>InstallPerformCheckRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/InstallPerformCheckRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>InstallPerformCheckRequest</code> instance.",
              "type": {
                "name": "module:model/InstallPerformCheckRequest"
              }
            },
            "description": "Constructs a <code>InstallPerformCheckRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/InstallPerformCheckResponse.js": [
      {
        "description": "The InstallPerformCheckResponse model module.\n@module model/InstallPerformCheckResponse\n@version 1.0",
        "displayName": "InstallPerformCheckResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>InstallPerformCheckResponse</code>.\n@alias module:model/InstallPerformCheckResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>InstallPerformCheckResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>InstallPerformCheckResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/InstallPerformCheckResponse} obj Optional instance to populate.\n@return {module:model/InstallPerformCheckResponse} The populated <code>InstallPerformCheckResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/InstallPerformCheckResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>InstallPerformCheckResponse</code> instance.",
              "type": {
                "name": "module:model/InstallPerformCheckResponse"
              }
            },
            "description": "Constructs a <code>InstallPerformCheckResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/JobsAction.js": [
      {
        "description": "The JobsAction model module.\n@module model/JobsAction\n@version 1.0",
        "displayName": "JobsAction",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>JobsAction</code>.\n@alias module:model/JobsAction\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>JobsAction</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>JobsAction</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/JobsAction} obj Optional instance to populate.\n@return {module:model/JobsAction} The populated <code>JobsAction</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/JobsAction"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>JobsAction</code> instance.",
              "type": {
                "name": "module:model/JobsAction"
              }
            },
            "description": "Constructs a <code>JobsAction</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/JobsActionLog.js": [
      {
        "description": "The JobsActionLog model module.\n@module model/JobsActionLog\n@version 1.0",
        "displayName": "JobsActionLog",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>JobsActionLog</code>.\n@alias module:model/JobsActionLog\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>JobsActionLog</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>JobsActionLog</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/JobsActionLog} obj Optional instance to populate.\n@return {module:model/JobsActionLog} The populated <code>JobsActionLog</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/JobsActionLog"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>JobsActionLog</code> instance.",
              "type": {
                "name": "module:model/JobsActionLog"
              }
            },
            "description": "Constructs a <code>JobsActionLog</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/JobsActionMessage.js": [
      {
        "description": "The JobsActionMessage model module.\n@module model/JobsActionMessage\n@version 1.0",
        "displayName": "JobsActionMessage",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>JobsActionMessage</code>.\n@alias module:model/JobsActionMessage\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>JobsActionMessage</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>JobsActionMessage</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/JobsActionMessage} obj Optional instance to populate.\n@return {module:model/JobsActionMessage} The populated <code>JobsActionMessage</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/JobsActionMessage"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>JobsActionMessage</code> instance.",
              "type": {
                "name": "module:model/JobsActionMessage"
              }
            },
            "description": "Constructs a <code>JobsActionMessage</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/JobsActionOutput.js": [
      {
        "description": "The JobsActionOutput model module.\n@module model/JobsActionOutput\n@version 1.0",
        "displayName": "JobsActionOutput",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>JobsActionOutput</code>.\n@alias module:model/JobsActionOutput\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>JobsActionOutput</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>JobsActionOutput</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/JobsActionOutput} obj Optional instance to populate.\n@return {module:model/JobsActionOutput} The populated <code>JobsActionOutput</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/JobsActionOutput"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>JobsActionOutput</code> instance.",
              "type": {
                "name": "module:model/JobsActionOutput"
              }
            },
            "description": "Constructs a <code>JobsActionOutput</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/JobsCommand.js": [
      {
        "description": "Enum class JobsCommand.\n@enum {}\n@readonly",
        "displayName": "JobsCommand",
        "methods": [
          {
            "name": "constructFromObject",
            "docblock": "Returns a <code>JobsCommand</code> enum value from a Javascript object name.\n@param {Object} data The plain JavaScript object containing the name of the enum value.\n@return {module:model/JobsCommand} The enum <code>JobsCommand</code> value.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "object"
              }
            ],
            "returns": {
              "description": "The enum <code>JobsCommand</code> value.",
              "type": {
                "name": "module:model/JobsCommand"
              }
            },
            "description": "Returns a <code>JobsCommand</code> enum value from a Javascript object name."
          }
        ]
      }
    ],
    "core/http/gen/model/JobsCtrlCommand.js": [
      {
        "description": "The JobsCtrlCommand model module.\n@module model/JobsCtrlCommand\n@version 1.0",
        "displayName": "JobsCtrlCommand",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>JobsCtrlCommand</code>.\n@alias module:model/JobsCtrlCommand\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>JobsCtrlCommand</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>JobsCtrlCommand</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/JobsCtrlCommand} obj Optional instance to populate.\n@return {module:model/JobsCtrlCommand} The populated <code>JobsCtrlCommand</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/JobsCtrlCommand"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>JobsCtrlCommand</code> instance.",
              "type": {
                "name": "module:model/JobsCtrlCommand"
              }
            },
            "description": "Constructs a <code>JobsCtrlCommand</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/JobsCtrlCommandResponse.js": [
      {
        "description": "The JobsCtrlCommandResponse model module.\n@module model/JobsCtrlCommandResponse\n@version 1.0",
        "displayName": "JobsCtrlCommandResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>JobsCtrlCommandResponse</code>.\n@alias module:model/JobsCtrlCommandResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>JobsCtrlCommandResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>JobsCtrlCommandResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/JobsCtrlCommandResponse} obj Optional instance to populate.\n@return {module:model/JobsCtrlCommandResponse} The populated <code>JobsCtrlCommandResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/JobsCtrlCommandResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>JobsCtrlCommandResponse</code> instance.",
              "type": {
                "name": "module:model/JobsCtrlCommandResponse"
              }
            },
            "description": "Constructs a <code>JobsCtrlCommandResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/JobsDeleteTasksRequest.js": [
      {
        "description": "The JobsDeleteTasksRequest model module.\n@module model/JobsDeleteTasksRequest\n@version 1.0",
        "displayName": "JobsDeleteTasksRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>JobsDeleteTasksRequest</code>.\n@alias module:model/JobsDeleteTasksRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>JobsDeleteTasksRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>JobsDeleteTasksRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/JobsDeleteTasksRequest} obj Optional instance to populate.\n@return {module:model/JobsDeleteTasksRequest} The populated <code>JobsDeleteTasksRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/JobsDeleteTasksRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>JobsDeleteTasksRequest</code> instance.",
              "type": {
                "name": "module:model/JobsDeleteTasksRequest"
              }
            },
            "description": "Constructs a <code>JobsDeleteTasksRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/JobsDeleteTasksResponse.js": [
      {
        "description": "The JobsDeleteTasksResponse model module.\n@module model/JobsDeleteTasksResponse\n@version 1.0",
        "displayName": "JobsDeleteTasksResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>JobsDeleteTasksResponse</code>.\n@alias module:model/JobsDeleteTasksResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>JobsDeleteTasksResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>JobsDeleteTasksResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/JobsDeleteTasksResponse} obj Optional instance to populate.\n@return {module:model/JobsDeleteTasksResponse} The populated <code>JobsDeleteTasksResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/JobsDeleteTasksResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>JobsDeleteTasksResponse</code> instance.",
              "type": {
                "name": "module:model/JobsDeleteTasksResponse"
              }
            },
            "description": "Constructs a <code>JobsDeleteTasksResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/JobsJob.js": [
      {
        "description": "The JobsJob model module.\n@module model/JobsJob\n@version 1.0",
        "displayName": "JobsJob",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>JobsJob</code>.\n@alias module:model/JobsJob\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>JobsJob</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>JobsJob</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/JobsJob} obj Optional instance to populate.\n@return {module:model/JobsJob} The populated <code>JobsJob</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/JobsJob"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>JobsJob</code> instance.",
              "type": {
                "name": "module:model/JobsJob"
              }
            },
            "description": "Constructs a <code>JobsJob</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/JobsListJobsRequest.js": [
      {
        "description": "The JobsListJobsRequest model module.\n@module model/JobsListJobsRequest\n@version 1.0",
        "displayName": "JobsListJobsRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>JobsListJobsRequest</code>.\n@alias module:model/JobsListJobsRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>JobsListJobsRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>JobsListJobsRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/JobsListJobsRequest} obj Optional instance to populate.\n@return {module:model/JobsListJobsRequest} The populated <code>JobsListJobsRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/JobsListJobsRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>JobsListJobsRequest</code> instance.",
              "type": {
                "name": "module:model/JobsListJobsRequest"
              }
            },
            "description": "Constructs a <code>JobsListJobsRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/JobsNodesSelector.js": [
      {
        "description": "The JobsNodesSelector model module.\n@module model/JobsNodesSelector\n@version 1.0",
        "displayName": "JobsNodesSelector",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>JobsNodesSelector</code>.\n@alias module:model/JobsNodesSelector\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>JobsNodesSelector</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>JobsNodesSelector</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/JobsNodesSelector} obj Optional instance to populate.\n@return {module:model/JobsNodesSelector} The populated <code>JobsNodesSelector</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/JobsNodesSelector"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>JobsNodesSelector</code> instance.",
              "type": {
                "name": "module:model/JobsNodesSelector"
              }
            },
            "description": "Constructs a <code>JobsNodesSelector</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/JobsSchedule.js": [
      {
        "description": "The JobsSchedule model module.\n@module model/JobsSchedule\n@version 1.0",
        "displayName": "JobsSchedule",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>JobsSchedule</code>.\n@alias module:model/JobsSchedule\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>JobsSchedule</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>JobsSchedule</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/JobsSchedule} obj Optional instance to populate.\n@return {module:model/JobsSchedule} The populated <code>JobsSchedule</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/JobsSchedule"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>JobsSchedule</code> instance.",
              "type": {
                "name": "module:model/JobsSchedule"
              }
            },
            "description": "Constructs a <code>JobsSchedule</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/JobsSourceFilter.js": [
      {
        "description": "The JobsSourceFilter model module.\n@module model/JobsSourceFilter\n@version 1.0",
        "displayName": "JobsSourceFilter",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>JobsSourceFilter</code>.\n@alias module:model/JobsSourceFilter\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>JobsSourceFilter</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>JobsSourceFilter</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/JobsSourceFilter} obj Optional instance to populate.\n@return {module:model/JobsSourceFilter} The populated <code>JobsSourceFilter</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/JobsSourceFilter"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>JobsSourceFilter</code> instance.",
              "type": {
                "name": "module:model/JobsSourceFilter"
              }
            },
            "description": "Constructs a <code>JobsSourceFilter</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/JobsTask.js": [
      {
        "description": "The JobsTask model module.\n@module model/JobsTask\n@version 1.0",
        "displayName": "JobsTask",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>JobsTask</code>.\n@alias module:model/JobsTask\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>JobsTask</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>JobsTask</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/JobsTask} obj Optional instance to populate.\n@return {module:model/JobsTask} The populated <code>JobsTask</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/JobsTask"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>JobsTask</code> instance.",
              "type": {
                "name": "module:model/JobsTask"
              }
            },
            "description": "Constructs a <code>JobsTask</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/JobsTaskStatus.js": [
      {
        "description": "Enum class JobsTaskStatus.\n@enum {}\n@readonly",
        "displayName": "JobsTaskStatus",
        "methods": [
          {
            "name": "constructFromObject",
            "docblock": "Returns a <code>JobsTaskStatus</code> enum value from a Javascript object name.\n@param {Object} data The plain JavaScript object containing the name of the enum value.\n@return {module:model/JobsTaskStatus} The enum <code>JobsTaskStatus</code> value.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "object"
              }
            ],
            "returns": {
              "description": "The enum <code>JobsTaskStatus</code> value.",
              "type": {
                "name": "module:model/JobsTaskStatus"
              }
            },
            "description": "Returns a <code>JobsTaskStatus</code> enum value from a Javascript object name."
          }
        ]
      }
    ],
    "core/http/gen/model/JobsUsersSelector.js": [
      {
        "description": "The JobsUsersSelector model module.\n@module model/JobsUsersSelector\n@version 1.0",
        "displayName": "JobsUsersSelector",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>JobsUsersSelector</code>.\n@alias module:model/JobsUsersSelector\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>JobsUsersSelector</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>JobsUsersSelector</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/JobsUsersSelector} obj Optional instance to populate.\n@return {module:model/JobsUsersSelector} The populated <code>JobsUsersSelector</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/JobsUsersSelector"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>JobsUsersSelector</code> instance.",
              "type": {
                "name": "module:model/JobsUsersSelector"
              }
            },
            "description": "Constructs a <code>JobsUsersSelector</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/ListLogRequestLogFormat.js": [
      {
        "description": "Enum class ListLogRequestLogFormat.\n@enum {}\n@readonly",
        "displayName": "ListLogRequestLogFormat",
        "methods": [
          {
            "name": "constructFromObject",
            "docblock": "Returns a <code>ListLogRequestLogFormat</code> enum value from a Javascript object name.\n@param {Object} data The plain JavaScript object containing the name of the enum value.\n@return {module:model/ListLogRequestLogFormat} The enum <code>ListLogRequestLogFormat</code> value.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "object"
              }
            ],
            "returns": {
              "description": "The enum <code>ListLogRequestLogFormat</code> value.",
              "type": {
                "name": "module:model/ListLogRequestLogFormat"
              }
            },
            "description": "Returns a <code>ListLogRequestLogFormat</code> enum value from a Javascript object name."
          }
        ]
      }
    ],
    "core/http/gen/model/ListSharedResourcesRequestListShareType.js": [
      {
        "description": "Enum class ListSharedResourcesRequestListShareType.\n@enum {}\n@readonly",
        "displayName": "ListSharedResourcesRequestListShareType",
        "methods": [
          {
            "name": "constructFromObject",
            "docblock": "Returns a <code>ListSharedResourcesRequestListShareType</code> enum value from a Javascript object name.\n@param {Object} data The plain JavaScript object containing the name of the enum value.\n@return {module:model/ListSharedResourcesRequestListShareType} The enum <code>ListSharedResourcesRequestListShareType</code> value.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "object"
              }
            ],
            "returns": {
              "description": "The enum <code>ListSharedResourcesRequestListShareType</code> value.",
              "type": {
                "name": "module:model/ListSharedResourcesRequestListShareType"
              }
            },
            "description": "Returns a <code>ListSharedResourcesRequestListShareType</code> enum value from a Javascript object name."
          }
        ]
      }
    ],
    "core/http/gen/model/ListSharedResourcesResponseSharedResource.js": [
      {
        "description": "The ListSharedResourcesResponseSharedResource model module.\n@module model/ListSharedResourcesResponseSharedResource\n@version 1.0",
        "displayName": "ListSharedResourcesResponseSharedResource",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>ListSharedResourcesResponseSharedResource</code>.\n@alias module:model/ListSharedResourcesResponseSharedResource\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>ListSharedResourcesResponseSharedResource</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>ListSharedResourcesResponseSharedResource</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/ListSharedResourcesResponseSharedResource} obj Optional instance to populate.\n@return {module:model/ListSharedResourcesResponseSharedResource} The populated <code>ListSharedResourcesResponseSharedResource</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/ListSharedResourcesResponseSharedResource"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>ListSharedResourcesResponseSharedResource</code> instance.",
              "type": {
                "name": "module:model/ListSharedResourcesResponseSharedResource"
              }
            },
            "description": "Constructs a <code>ListSharedResourcesResponseSharedResource</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/LogListLogRequest.js": [
      {
        "description": "The LogListLogRequest model module.\n@module model/LogListLogRequest\n@version 1.0",
        "displayName": "LogListLogRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>LogListLogRequest</code>.\nListLogRequest launches a parameterised query in the log repository and streams the results.\n@alias module:model/LogListLogRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>LogListLogRequest</code>.\nListLogRequest launches a parameterised query in the log repository and streams the results."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>LogListLogRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/LogListLogRequest} obj Optional instance to populate.\n@return {module:model/LogListLogRequest} The populated <code>LogListLogRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/LogListLogRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>LogListLogRequest</code> instance.",
              "type": {
                "name": "module:model/LogListLogRequest"
              }
            },
            "description": "Constructs a <code>LogListLogRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/LogLogMessage.js": [
      {
        "description": "The LogLogMessage model module.\n@module model/LogLogMessage\n@version 1.0",
        "displayName": "LogLogMessage",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>LogLogMessage</code>.\nLogMessage is the format used to transmit log messages to clients via the REST API.\n@alias module:model/LogLogMessage\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>LogLogMessage</code>.\nLogMessage is the format used to transmit log messages to clients via the REST API."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>LogLogMessage</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/LogLogMessage} obj Optional instance to populate.\n@return {module:model/LogLogMessage} The populated <code>LogLogMessage</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/LogLogMessage"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>LogLogMessage</code> instance.",
              "type": {
                "name": "module:model/LogLogMessage"
              }
            },
            "description": "Constructs a <code>LogLogMessage</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/MailerMail.js": [
      {
        "description": "The MailerMail model module.\n@module model/MailerMail\n@version 1.0",
        "displayName": "MailerMail",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>MailerMail</code>.\n@alias module:model/MailerMail\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>MailerMail</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>MailerMail</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/MailerMail} obj Optional instance to populate.\n@return {module:model/MailerMail} The populated <code>MailerMail</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/MailerMail"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>MailerMail</code> instance.",
              "type": {
                "name": "module:model/MailerMail"
              }
            },
            "description": "Constructs a <code>MailerMail</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/MailerSendMailResponse.js": [
      {
        "description": "The MailerSendMailResponse model module.\n@module model/MailerSendMailResponse\n@version 1.0",
        "displayName": "MailerSendMailResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>MailerSendMailResponse</code>.\n@alias module:model/MailerSendMailResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>MailerSendMailResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>MailerSendMailResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/MailerSendMailResponse} obj Optional instance to populate.\n@return {module:model/MailerSendMailResponse} The populated <code>MailerSendMailResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/MailerSendMailResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>MailerSendMailResponse</code> instance.",
              "type": {
                "name": "module:model/MailerSendMailResponse"
              }
            },
            "description": "Constructs a <code>MailerSendMailResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/MailerUser.js": [
      {
        "description": "The MailerUser model module.\n@module model/MailerUser\n@version 1.0",
        "displayName": "MailerUser",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>MailerUser</code>.\n@alias module:model/MailerUser\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>MailerUser</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>MailerUser</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/MailerUser} obj Optional instance to populate.\n@return {module:model/MailerUser} The populated <code>MailerUser</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/MailerUser"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>MailerUser</code> instance.",
              "type": {
                "name": "module:model/MailerUser"
              }
            },
            "description": "Constructs a <code>MailerUser</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/NodeChangeEventEventType.js": [
      {
        "description": "Enum class NodeChangeEventEventType.\n@enum {}\n@readonly",
        "displayName": "NodeChangeEventEventType",
        "methods": [
          {
            "name": "constructFromObject",
            "docblock": "Returns a <code>NodeChangeEventEventType</code> enum value from a Javascript object name.\n@param {Object} data The plain JavaScript object containing the name of the enum value.\n@return {module:model/NodeChangeEventEventType} The enum <code>NodeChangeEventEventType</code> value.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "object"
              }
            ],
            "returns": {
              "description": "The enum <code>NodeChangeEventEventType</code> value.",
              "type": {
                "name": "module:model/NodeChangeEventEventType"
              }
            },
            "description": "Returns a <code>NodeChangeEventEventType</code> enum value from a Javascript object name."
          }
        ]
      }
    ],
    "core/http/gen/model/ObjectDataSource.js": [
      {
        "description": "The ObjectDataSource model module.\n@module model/ObjectDataSource\n@version 1.0",
        "displayName": "ObjectDataSource",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>ObjectDataSource</code>.\n@alias module:model/ObjectDataSource\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>ObjectDataSource</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>ObjectDataSource</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/ObjectDataSource} obj Optional instance to populate.\n@return {module:model/ObjectDataSource} The populated <code>ObjectDataSource</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/ObjectDataSource"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>ObjectDataSource</code> instance.",
              "type": {
                "name": "module:model/ObjectDataSource"
              }
            },
            "description": "Constructs a <code>ObjectDataSource</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/ObjectEncryptionMode.js": [
      {
        "description": "Enum class ObjectEncryptionMode.\n@enum {}\n@readonly",
        "displayName": "ObjectEncryptionMode",
        "methods": [
          {
            "name": "constructFromObject",
            "docblock": "Returns a <code>ObjectEncryptionMode</code> enum value from a Javascript object name.\n@param {Object} data The plain JavaScript object containing the name of the enum value.\n@return {module:model/ObjectEncryptionMode} The enum <code>ObjectEncryptionMode</code> value.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "object"
              }
            ],
            "returns": {
              "description": "The enum <code>ObjectEncryptionMode</code> value.",
              "type": {
                "name": "module:model/ObjectEncryptionMode"
              }
            },
            "description": "Returns a <code>ObjectEncryptionMode</code> enum value from a Javascript object name."
          }
        ]
      }
    ],
    "core/http/gen/model/ObjectStorageType.js": [
      {
        "description": "Enum class ObjectStorageType.\n@enum {}\n@readonly",
        "displayName": "ObjectStorageType",
        "methods": [
          {
            "name": "constructFromObject",
            "docblock": "Returns a <code>ObjectStorageType</code> enum value from a Javascript object name.\n@param {Object} data The plain JavaScript object containing the name of the enum value.\n@return {module:model/ObjectStorageType} The enum <code>ObjectStorageType</code> value.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "object"
              }
            ],
            "returns": {
              "description": "The enum <code>ObjectStorageType</code> value.",
              "type": {
                "name": "module:model/ObjectStorageType"
              }
            },
            "description": "Returns a <code>ObjectStorageType</code> enum value from a Javascript object name."
          }
        ]
      }
    ],
    "core/http/gen/model/PackagePackageStatus.js": [
      {
        "description": "Enum class PackagePackageStatus.\n@enum {}\n@readonly",
        "displayName": "PackagePackageStatus",
        "methods": [
          {
            "name": "constructFromObject",
            "docblock": "Returns a <code>PackagePackageStatus</code> enum value from a Javascript object name.\n@param {Object} data The plain JavaScript object containing the name of the enum value.\n@return {module:model/PackagePackageStatus} The enum <code>PackagePackageStatus</code> value.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "object"
              }
            ],
            "returns": {
              "description": "The enum <code>PackagePackageStatus</code> value.",
              "type": {
                "name": "module:model/PackagePackageStatus"
              }
            },
            "description": "Returns a <code>PackagePackageStatus</code> enum value from a Javascript object name."
          }
        ]
      }
    ],
    "core/http/gen/model/ProtobufAny.js": [
      {
        "description": "The ProtobufAny model module.\n@module model/ProtobufAny\n@version 1.0",
        "displayName": "ProtobufAny",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>ProtobufAny</code>.\n&#x60;Any&#x60; contains an arbitrary serialized protocol buffer message along with a URL that describes the type of the serialized message.  Protobuf library provides support to pack/unpack Any values in the form of utility functions or additional generated methods of the Any type.  Example 1: Pack and unpack a message in C++.      Foo foo &#x3D; ...;     Any any;     any.PackFrom(foo);     ...     if (any.UnpackTo(&amp;foo)) {       ...     }  Example 2: Pack and unpack a message in Java.      Foo foo &#x3D; ...;     Any any &#x3D; Any.pack(foo);     ...     if (any.is(Foo.class)) {       foo &#x3D; any.unpack(Foo.class);     }   Example 3: Pack and unpack a message in Python.      foo &#x3D; Foo(...)     any &#x3D; Any()     any.Pack(foo)     ...     if any.Is(Foo.DESCRIPTOR):       any.Unpack(foo)       ...   Example 4: Pack and unpack a message in Go       foo :&#x3D; &amp;pb.Foo{...}      any, err :&#x3D; ptypes.MarshalAny(foo)      ...      foo :&#x3D; &amp;pb.Foo{}      if err :&#x3D; ptypes.UnmarshalAny(any, foo); err !&#x3D; nil {        ...      }  The pack methods provided by protobuf library will by default use &#39;type.googleapis.com/full.type.name&#39; as the type URL and the unpack methods only use the fully qualified type name after the last &#39;/&#39; in the type URL, for example \\&quot;foo.bar.com/x/y.z\\&quot; will yield type name \\&quot;y.z\\&quot;.   JSON &#x3D;&#x3D;&#x3D;&#x3D; The JSON representation of an &#x60;Any&#x60; value uses the regular representation of the deserialized, embedded message, with an additional field &#x60;@type&#x60; which contains the type URL. Example:      package google.profile;     message Person {       string first_name &#x3D; 1;       string last_name &#x3D; 2;     }      {       \\&quot;@type\\&quot;: \\&quot;type.googleapis.com/google.profile.Person\\&quot;,       \\&quot;firstName\\&quot;: &lt;string&gt;,       \\&quot;lastName\\&quot;: &lt;string&gt;     }  If the embedded message type is well-known and has a custom JSON representation, that representation will be embedded adding a field &#x60;value&#x60; which holds the custom JSON in addition to the &#x60;@type&#x60; field. Example (for message [google.protobuf.Duration][]):      {       \\&quot;@type\\&quot;: \\&quot;type.googleapis.com/google.protobuf.Duration\\&quot;,       \\&quot;value\\&quot;: \\&quot;1.212s\\&quot;     }\n@alias module:model/ProtobufAny\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>ProtobufAny</code>.\n&#x60;Any&#x60; contains an arbitrary serialized protocol buffer message along with a URL that describes the type of the serialized message.  Protobuf library provides support to pack/unpack Any values in the form of utility functions or additional generated methods of the Any type.  Example 1: Pack and unpack a message in C++.      Foo foo &#x3D; ...;     Any any;     any.PackFrom(foo);     ...     if (any.UnpackTo(&amp;foo)) {       ...     }  Example 2: Pack and unpack a message in Java.      Foo foo &#x3D; ...;     Any any &#x3D; Any.pack(foo);     ...     if (any.is(Foo.class)) {       foo &#x3D; any.unpack(Foo.class);     }   Example 3: Pack and unpack a message in Python.      foo &#x3D; Foo(...)     any &#x3D; Any()     any.Pack(foo)     ...     if any.Is(Foo.DESCRIPTOR):       any.Unpack(foo)       ...   Example 4: Pack and unpack a message in Go       foo :&#x3D; &amp;pb.Foo{...}      any, err :&#x3D; ptypes.MarshalAny(foo)      ...      foo :&#x3D; &amp;pb.Foo{}      if err :&#x3D; ptypes.UnmarshalAny(any, foo); err !&#x3D; nil {        ...      }  The pack methods provided by protobuf library will by default use &#39;type.googleapis.com/full.type.name&#39; as the type URL and the unpack methods only use the fully qualified type name after the last &#39;/&#39; in the type URL, for example \\&quot;foo.bar.com/x/y.z\\&quot; will yield type name \\&quot;y.z\\&quot;.   JSON &#x3D;&#x3D;&#x3D;&#x3D; The JSON representation of an &#x60;Any&#x60; value uses the regular representation of the deserialized, embedded message, with an additional field &#x60;@type&#x60; which contains the type URL. Example:      package google.profile;     message Person {       string first_name &#x3D; 1;       string last_name &#x3D; 2;     }      {       \\&quot;@type\\&quot;: \\&quot;type.googleapis.com/google.profile.Person\\&quot;,       \\&quot;firstName\\&quot;: &lt;string&gt;,       \\&quot;lastName\\&quot;: &lt;string&gt;     }  If the embedded message type is well-known and has a custom JSON representation, that representation will be embedded adding a field &#x60;value&#x60; which holds the custom JSON in addition to the &#x60;@type&#x60; field. Example (for message [google.protobuf.Duration][]):      {       \\&quot;@type\\&quot;: \\&quot;type.googleapis.com/google.protobuf.Duration\\&quot;,       \\&quot;value\\&quot;: \\&quot;1.212s\\&quot;     }"
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>ProtobufAny</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/ProtobufAny} obj Optional instance to populate.\n@return {module:model/ProtobufAny} The populated <code>ProtobufAny</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/ProtobufAny"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>ProtobufAny</code> instance.",
              "type": {
                "name": "module:model/ProtobufAny"
              }
            },
            "description": "Constructs a <code>ProtobufAny</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/ResourcePolicyQueryQueryType.js": [
      {
        "description": "Enum class ResourcePolicyQueryQueryType.\n@enum {}\n@readonly",
        "displayName": "ResourcePolicyQueryQueryType",
        "methods": [
          {
            "name": "constructFromObject",
            "docblock": "Returns a <code>ResourcePolicyQueryQueryType</code> enum value from a Javascript object name.\n@param {Object} data The plain JavaScript object containing the name of the enum value.\n@return {module:model/ResourcePolicyQueryQueryType} The enum <code>ResourcePolicyQueryQueryType</code> value.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "object"
              }
            ],
            "returns": {
              "description": "The enum <code>ResourcePolicyQueryQueryType</code> value.",
              "type": {
                "name": "module:model/ResourcePolicyQueryQueryType"
              }
            },
            "description": "Returns a <code>ResourcePolicyQueryQueryType</code> enum value from a Javascript object name."
          }
        ]
      }
    ],
    "core/http/gen/model/RestACLCollection.js": [
      {
        "description": "The RestACLCollection model module.\n@module model/RestACLCollection\n@version 1.0",
        "displayName": "RestACLCollection",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestACLCollection</code>.\n@alias module:model/RestACLCollection\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestACLCollection</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestACLCollection</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestACLCollection} obj Optional instance to populate.\n@return {module:model/RestACLCollection} The populated <code>RestACLCollection</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestACLCollection"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestACLCollection</code> instance.",
              "type": {
                "name": "module:model/RestACLCollection"
              }
            },
            "description": "Constructs a <code>RestACLCollection</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestBackgroundJobResult.js": [
      {
        "description": "The RestBackgroundJobResult model module.\n@module model/RestBackgroundJobResult\n@version 1.0",
        "displayName": "RestBackgroundJobResult",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestBackgroundJobResult</code>.\n@alias module:model/RestBackgroundJobResult\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestBackgroundJobResult</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestBackgroundJobResult</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestBackgroundJobResult} obj Optional instance to populate.\n@return {module:model/RestBackgroundJobResult} The populated <code>RestBackgroundJobResult</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestBackgroundJobResult"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestBackgroundJobResult</code> instance.",
              "type": {
                "name": "module:model/RestBackgroundJobResult"
              }
            },
            "description": "Constructs a <code>RestBackgroundJobResult</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestBulkMetaResponse.js": [
      {
        "description": "The RestBulkMetaResponse model module.\n@module model/RestBulkMetaResponse\n@version 1.0",
        "displayName": "RestBulkMetaResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestBulkMetaResponse</code>.\n@alias module:model/RestBulkMetaResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestBulkMetaResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestBulkMetaResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestBulkMetaResponse} obj Optional instance to populate.\n@return {module:model/RestBulkMetaResponse} The populated <code>RestBulkMetaResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestBulkMetaResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestBulkMetaResponse</code> instance.",
              "type": {
                "name": "module:model/RestBulkMetaResponse"
              }
            },
            "description": "Constructs a <code>RestBulkMetaResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestCell.js": [
      {
        "description": "The RestCell model module.\n@module model/RestCell\n@version 1.0",
        "displayName": "RestCell",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestCell</code>.\n@alias module:model/RestCell\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestCell</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestCell</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestCell} obj Optional instance to populate.\n@return {module:model/RestCell} The populated <code>RestCell</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestCell"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestCell</code> instance.",
              "type": {
                "name": "module:model/RestCell"
              }
            },
            "description": "Constructs a <code>RestCell</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestCellAcl.js": [
      {
        "description": "The RestCellAcl model module.\n@module model/RestCellAcl\n@version 1.0",
        "displayName": "RestCellAcl",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestCellAcl</code>.\n@alias module:model/RestCellAcl\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestCellAcl</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestCellAcl</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestCellAcl} obj Optional instance to populate.\n@return {module:model/RestCellAcl} The populated <code>RestCellAcl</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestCellAcl"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestCellAcl</code> instance.",
              "type": {
                "name": "module:model/RestCellAcl"
              }
            },
            "description": "Constructs a <code>RestCellAcl</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestChangeCollection.js": [
      {
        "description": "The RestChangeCollection model module.\n@module model/RestChangeCollection\n@version 1.0",
        "displayName": "RestChangeCollection",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestChangeCollection</code>.\n@alias module:model/RestChangeCollection\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestChangeCollection</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestChangeCollection</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestChangeCollection} obj Optional instance to populate.\n@return {module:model/RestChangeCollection} The populated <code>RestChangeCollection</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestChangeCollection"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestChangeCollection</code> instance.",
              "type": {
                "name": "module:model/RestChangeCollection"
              }
            },
            "description": "Constructs a <code>RestChangeCollection</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestChangeRequest.js": [
      {
        "description": "The RestChangeRequest model module.\n@module model/RestChangeRequest\n@version 1.0",
        "displayName": "RestChangeRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestChangeRequest</code>.\n@alias module:model/RestChangeRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestChangeRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestChangeRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestChangeRequest} obj Optional instance to populate.\n@return {module:model/RestChangeRequest} The populated <code>RestChangeRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestChangeRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestChangeRequest</code> instance.",
              "type": {
                "name": "module:model/RestChangeRequest"
              }
            },
            "description": "Constructs a <code>RestChangeRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestConfiguration.js": [
      {
        "description": "The RestConfiguration model module.\n@module model/RestConfiguration\n@version 1.0",
        "displayName": "RestConfiguration",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestConfiguration</code>.\n@alias module:model/RestConfiguration\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestConfiguration</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestConfiguration</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestConfiguration} obj Optional instance to populate.\n@return {module:model/RestConfiguration} The populated <code>RestConfiguration</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestConfiguration"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestConfiguration</code> instance.",
              "type": {
                "name": "module:model/RestConfiguration"
              }
            },
            "description": "Constructs a <code>RestConfiguration</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestControlServiceRequest.js": [
      {
        "description": "The RestControlServiceRequest model module.\n@module model/RestControlServiceRequest\n@version 1.0",
        "displayName": "RestControlServiceRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestControlServiceRequest</code>.\n@alias module:model/RestControlServiceRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestControlServiceRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestControlServiceRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestControlServiceRequest} obj Optional instance to populate.\n@return {module:model/RestControlServiceRequest} The populated <code>RestControlServiceRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestControlServiceRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestControlServiceRequest</code> instance.",
              "type": {
                "name": "module:model/RestControlServiceRequest"
              }
            },
            "description": "Constructs a <code>RestControlServiceRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestCreateNodesRequest.js": [
      {
        "description": "The RestCreateNodesRequest model module.\n@module model/RestCreateNodesRequest\n@version 1.0",
        "displayName": "RestCreateNodesRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestCreateNodesRequest</code>.\n@alias module:model/RestCreateNodesRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestCreateNodesRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestCreateNodesRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestCreateNodesRequest} obj Optional instance to populate.\n@return {module:model/RestCreateNodesRequest} The populated <code>RestCreateNodesRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestCreateNodesRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestCreateNodesRequest</code> instance.",
              "type": {
                "name": "module:model/RestCreateNodesRequest"
              }
            },
            "description": "Constructs a <code>RestCreateNodesRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestCreateSelectionRequest.js": [
      {
        "description": "The RestCreateSelectionRequest model module.\n@module model/RestCreateSelectionRequest\n@version 1.0",
        "displayName": "RestCreateSelectionRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestCreateSelectionRequest</code>.\n@alias module:model/RestCreateSelectionRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestCreateSelectionRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestCreateSelectionRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestCreateSelectionRequest} obj Optional instance to populate.\n@return {module:model/RestCreateSelectionRequest} The populated <code>RestCreateSelectionRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestCreateSelectionRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestCreateSelectionRequest</code> instance.",
              "type": {
                "name": "module:model/RestCreateSelectionRequest"
              }
            },
            "description": "Constructs a <code>RestCreateSelectionRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestCreateSelectionResponse.js": [
      {
        "description": "The RestCreateSelectionResponse model module.\n@module model/RestCreateSelectionResponse\n@version 1.0",
        "displayName": "RestCreateSelectionResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestCreateSelectionResponse</code>.\n@alias module:model/RestCreateSelectionResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestCreateSelectionResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestCreateSelectionResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestCreateSelectionResponse} obj Optional instance to populate.\n@return {module:model/RestCreateSelectionResponse} The populated <code>RestCreateSelectionResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestCreateSelectionResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestCreateSelectionResponse</code> instance.",
              "type": {
                "name": "module:model/RestCreateSelectionResponse"
              }
            },
            "description": "Constructs a <code>RestCreateSelectionResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestDataSourceCollection.js": [
      {
        "description": "The RestDataSourceCollection model module.\n@module model/RestDataSourceCollection\n@version 1.0",
        "displayName": "RestDataSourceCollection",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestDataSourceCollection</code>.\n@alias module:model/RestDataSourceCollection\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestDataSourceCollection</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestDataSourceCollection</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestDataSourceCollection} obj Optional instance to populate.\n@return {module:model/RestDataSourceCollection} The populated <code>RestDataSourceCollection</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestDataSourceCollection"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestDataSourceCollection</code> instance.",
              "type": {
                "name": "module:model/RestDataSourceCollection"
              }
            },
            "description": "Constructs a <code>RestDataSourceCollection</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestDeleteCellResponse.js": [
      {
        "description": "The RestDeleteCellResponse model module.\n@module model/RestDeleteCellResponse\n@version 1.0",
        "displayName": "RestDeleteCellResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestDeleteCellResponse</code>.\n@alias module:model/RestDeleteCellResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestDeleteCellResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestDeleteCellResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestDeleteCellResponse} obj Optional instance to populate.\n@return {module:model/RestDeleteCellResponse} The populated <code>RestDeleteCellResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestDeleteCellResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestDeleteCellResponse</code> instance.",
              "type": {
                "name": "module:model/RestDeleteCellResponse"
              }
            },
            "description": "Constructs a <code>RestDeleteCellResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestDeleteDataSourceResponse.js": [
      {
        "description": "The RestDeleteDataSourceResponse model module.\n@module model/RestDeleteDataSourceResponse\n@version 1.0",
        "displayName": "RestDeleteDataSourceResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestDeleteDataSourceResponse</code>.\n@alias module:model/RestDeleteDataSourceResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestDeleteDataSourceResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestDeleteDataSourceResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestDeleteDataSourceResponse} obj Optional instance to populate.\n@return {module:model/RestDeleteDataSourceResponse} The populated <code>RestDeleteDataSourceResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestDeleteDataSourceResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestDeleteDataSourceResponse</code> instance.",
              "type": {
                "name": "module:model/RestDeleteDataSourceResponse"
              }
            },
            "description": "Constructs a <code>RestDeleteDataSourceResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestDeleteNodesRequest.js": [
      {
        "description": "The RestDeleteNodesRequest model module.\n@module model/RestDeleteNodesRequest\n@version 1.0",
        "displayName": "RestDeleteNodesRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestDeleteNodesRequest</code>.\n@alias module:model/RestDeleteNodesRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestDeleteNodesRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestDeleteNodesRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestDeleteNodesRequest} obj Optional instance to populate.\n@return {module:model/RestDeleteNodesRequest} The populated <code>RestDeleteNodesRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestDeleteNodesRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestDeleteNodesRequest</code> instance.",
              "type": {
                "name": "module:model/RestDeleteNodesRequest"
              }
            },
            "description": "Constructs a <code>RestDeleteNodesRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestDeleteNodesResponse.js": [
      {
        "description": "The RestDeleteNodesResponse model module.\n@module model/RestDeleteNodesResponse\n@version 1.0",
        "displayName": "RestDeleteNodesResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestDeleteNodesResponse</code>.\n@alias module:model/RestDeleteNodesResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestDeleteNodesResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestDeleteNodesResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestDeleteNodesResponse} obj Optional instance to populate.\n@return {module:model/RestDeleteNodesResponse} The populated <code>RestDeleteNodesResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestDeleteNodesResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestDeleteNodesResponse</code> instance.",
              "type": {
                "name": "module:model/RestDeleteNodesResponse"
              }
            },
            "description": "Constructs a <code>RestDeleteNodesResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestDeleteResponse.js": [
      {
        "description": "The RestDeleteResponse model module.\n@module model/RestDeleteResponse\n@version 1.0",
        "displayName": "RestDeleteResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestDeleteResponse</code>.\n@alias module:model/RestDeleteResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestDeleteResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestDeleteResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestDeleteResponse} obj Optional instance to populate.\n@return {module:model/RestDeleteResponse} The populated <code>RestDeleteResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestDeleteResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestDeleteResponse</code> instance.",
              "type": {
                "name": "module:model/RestDeleteResponse"
              }
            },
            "description": "Constructs a <code>RestDeleteResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestDeleteShareLinkResponse.js": [
      {
        "description": "The RestDeleteShareLinkResponse model module.\n@module model/RestDeleteShareLinkResponse\n@version 1.0",
        "displayName": "RestDeleteShareLinkResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestDeleteShareLinkResponse</code>.\n@alias module:model/RestDeleteShareLinkResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestDeleteShareLinkResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestDeleteShareLinkResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestDeleteShareLinkResponse} obj Optional instance to populate.\n@return {module:model/RestDeleteShareLinkResponse} The populated <code>RestDeleteShareLinkResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestDeleteShareLinkResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestDeleteShareLinkResponse</code> instance.",
              "type": {
                "name": "module:model/RestDeleteShareLinkResponse"
              }
            },
            "description": "Constructs a <code>RestDeleteShareLinkResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestDeleteUserMetaTagsResponse.js": [
      {
        "description": "The RestDeleteUserMetaTagsResponse model module.\n@module model/RestDeleteUserMetaTagsResponse\n@version 1.0",
        "displayName": "RestDeleteUserMetaTagsResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestDeleteUserMetaTagsResponse</code>.\n@alias module:model/RestDeleteUserMetaTagsResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestDeleteUserMetaTagsResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestDeleteUserMetaTagsResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestDeleteUserMetaTagsResponse} obj Optional instance to populate.\n@return {module:model/RestDeleteUserMetaTagsResponse} The populated <code>RestDeleteUserMetaTagsResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestDeleteUserMetaTagsResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestDeleteUserMetaTagsResponse</code> instance.",
              "type": {
                "name": "module:model/RestDeleteUserMetaTagsResponse"
              }
            },
            "description": "Constructs a <code>RestDeleteUserMetaTagsResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestDiscoveryResponse.js": [
      {
        "description": "The RestDiscoveryResponse model module.\n@module model/RestDiscoveryResponse\n@version 1.0",
        "displayName": "RestDiscoveryResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestDiscoveryResponse</code>.\n@alias module:model/RestDiscoveryResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestDiscoveryResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestDiscoveryResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestDiscoveryResponse} obj Optional instance to populate.\n@return {module:model/RestDiscoveryResponse} The populated <code>RestDiscoveryResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestDiscoveryResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestDiscoveryResponse</code> instance.",
              "type": {
                "name": "module:model/RestDiscoveryResponse"
              }
            },
            "description": "Constructs a <code>RestDiscoveryResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestError.js": [
      {
        "description": "The RestError model module.\n@module model/RestError\n@version 1.0",
        "displayName": "RestError",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestError</code>.\n@alias module:model/RestError\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestError</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestError</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestError} obj Optional instance to populate.\n@return {module:model/RestError} The populated <code>RestError</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestError"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestError</code> instance.",
              "type": {
                "name": "module:model/RestError"
              }
            },
            "description": "Constructs a <code>RestError</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestFrontBinaryRequest.js": [
      {
        "description": "The RestFrontBinaryRequest model module.\n@module model/RestFrontBinaryRequest\n@version 1.0",
        "displayName": "RestFrontBinaryRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestFrontBinaryRequest</code>.\n@alias module:model/RestFrontBinaryRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestFrontBinaryRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestFrontBinaryRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestFrontBinaryRequest} obj Optional instance to populate.\n@return {module:model/RestFrontBinaryRequest} The populated <code>RestFrontBinaryRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestFrontBinaryRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestFrontBinaryRequest</code> instance.",
              "type": {
                "name": "module:model/RestFrontBinaryRequest"
              }
            },
            "description": "Constructs a <code>RestFrontBinaryRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestFrontBinaryResponse.js": [
      {
        "description": "The RestFrontBinaryResponse model module.\n@module model/RestFrontBinaryResponse\n@version 1.0",
        "displayName": "RestFrontBinaryResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestFrontBinaryResponse</code>.\n@alias module:model/RestFrontBinaryResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestFrontBinaryResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestFrontBinaryResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestFrontBinaryResponse} obj Optional instance to populate.\n@return {module:model/RestFrontBinaryResponse} The populated <code>RestFrontBinaryResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestFrontBinaryResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestFrontBinaryResponse</code> instance.",
              "type": {
                "name": "module:model/RestFrontBinaryResponse"
              }
            },
            "description": "Constructs a <code>RestFrontBinaryResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestFrontBootConfResponse.js": [
      {
        "description": "The RestFrontBootConfResponse model module.\n@module model/RestFrontBootConfResponse\n@version 1.0",
        "displayName": "RestFrontBootConfResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestFrontBootConfResponse</code>.\n@alias module:model/RestFrontBootConfResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestFrontBootConfResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestFrontBootConfResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestFrontBootConfResponse} obj Optional instance to populate.\n@return {module:model/RestFrontBootConfResponse} The populated <code>RestFrontBootConfResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestFrontBootConfResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestFrontBootConfResponse</code> instance.",
              "type": {
                "name": "module:model/RestFrontBootConfResponse"
              }
            },
            "description": "Constructs a <code>RestFrontBootConfResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestFrontEnrollAuthRequest.js": [
      {
        "description": "The RestFrontEnrollAuthRequest model module.\n@module model/RestFrontEnrollAuthRequest\n@version 1.0",
        "displayName": "RestFrontEnrollAuthRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestFrontEnrollAuthRequest</code>.\n@alias module:model/RestFrontEnrollAuthRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestFrontEnrollAuthRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestFrontEnrollAuthRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestFrontEnrollAuthRequest} obj Optional instance to populate.\n@return {module:model/RestFrontEnrollAuthRequest} The populated <code>RestFrontEnrollAuthRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestFrontEnrollAuthRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestFrontEnrollAuthRequest</code> instance.",
              "type": {
                "name": "module:model/RestFrontEnrollAuthRequest"
              }
            },
            "description": "Constructs a <code>RestFrontEnrollAuthRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestFrontEnrollAuthResponse.js": [
      {
        "description": "The RestFrontEnrollAuthResponse model module.\n@module model/RestFrontEnrollAuthResponse\n@version 1.0",
        "displayName": "RestFrontEnrollAuthResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestFrontEnrollAuthResponse</code>.\n@alias module:model/RestFrontEnrollAuthResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestFrontEnrollAuthResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestFrontEnrollAuthResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestFrontEnrollAuthResponse} obj Optional instance to populate.\n@return {module:model/RestFrontEnrollAuthResponse} The populated <code>RestFrontEnrollAuthResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestFrontEnrollAuthResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestFrontEnrollAuthResponse</code> instance.",
              "type": {
                "name": "module:model/RestFrontEnrollAuthResponse"
              }
            },
            "description": "Constructs a <code>RestFrontEnrollAuthResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestFrontMessagesResponse.js": [
      {
        "description": "The RestFrontMessagesResponse model module.\n@module model/RestFrontMessagesResponse\n@version 1.0",
        "displayName": "RestFrontMessagesResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestFrontMessagesResponse</code>.\n@alias module:model/RestFrontMessagesResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestFrontMessagesResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestFrontMessagesResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestFrontMessagesResponse} obj Optional instance to populate.\n@return {module:model/RestFrontMessagesResponse} The populated <code>RestFrontMessagesResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestFrontMessagesResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestFrontMessagesResponse</code> instance.",
              "type": {
                "name": "module:model/RestFrontMessagesResponse"
              }
            },
            "description": "Constructs a <code>RestFrontMessagesResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestFrontPluginsResponse.js": [
      {
        "description": "The RestFrontPluginsResponse model module.\n@module model/RestFrontPluginsResponse\n@version 1.0",
        "displayName": "RestFrontPluginsResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestFrontPluginsResponse</code>.\n@alias module:model/RestFrontPluginsResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestFrontPluginsResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestFrontPluginsResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestFrontPluginsResponse} obj Optional instance to populate.\n@return {module:model/RestFrontPluginsResponse} The populated <code>RestFrontPluginsResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestFrontPluginsResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestFrontPluginsResponse</code> instance.",
              "type": {
                "name": "module:model/RestFrontPluginsResponse"
              }
            },
            "description": "Constructs a <code>RestFrontPluginsResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestFrontSessionRequest.js": [
      {
        "description": "The RestFrontSessionRequest model module.\n@module model/RestFrontSessionRequest\n@version 1.0",
        "displayName": "RestFrontSessionRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestFrontSessionRequest</code>.\n@alias module:model/RestFrontSessionRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestFrontSessionRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestFrontSessionRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestFrontSessionRequest} obj Optional instance to populate.\n@return {module:model/RestFrontSessionRequest} The populated <code>RestFrontSessionRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestFrontSessionRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestFrontSessionRequest</code> instance.",
              "type": {
                "name": "module:model/RestFrontSessionRequest"
              }
            },
            "description": "Constructs a <code>RestFrontSessionRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestFrontSessionResponse.js": [
      {
        "description": "The RestFrontSessionResponse model module.\n@module model/RestFrontSessionResponse\n@version 1.0",
        "displayName": "RestFrontSessionResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestFrontSessionResponse</code>.\n@alias module:model/RestFrontSessionResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestFrontSessionResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestFrontSessionResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestFrontSessionResponse} obj Optional instance to populate.\n@return {module:model/RestFrontSessionResponse} The populated <code>RestFrontSessionResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestFrontSessionResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestFrontSessionResponse</code> instance.",
              "type": {
                "name": "module:model/RestFrontSessionResponse"
              }
            },
            "description": "Constructs a <code>RestFrontSessionResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestFrontStateResponse.js": [
      {
        "description": "The RestFrontStateResponse model module.\n@module model/RestFrontStateResponse\n@version 1.0",
        "displayName": "RestFrontStateResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestFrontStateResponse</code>.\n@alias module:model/RestFrontStateResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestFrontStateResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestFrontStateResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestFrontStateResponse} obj Optional instance to populate.\n@return {module:model/RestFrontStateResponse} The populated <code>RestFrontStateResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestFrontStateResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestFrontStateResponse</code> instance.",
              "type": {
                "name": "module:model/RestFrontStateResponse"
              }
            },
            "description": "Constructs a <code>RestFrontStateResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestGetBulkMetaRequest.js": [
      {
        "description": "The RestGetBulkMetaRequest model module.\n@module model/RestGetBulkMetaRequest\n@version 1.0",
        "displayName": "RestGetBulkMetaRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestGetBulkMetaRequest</code>.\n@alias module:model/RestGetBulkMetaRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestGetBulkMetaRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestGetBulkMetaRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestGetBulkMetaRequest} obj Optional instance to populate.\n@return {module:model/RestGetBulkMetaRequest} The populated <code>RestGetBulkMetaRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestGetBulkMetaRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestGetBulkMetaRequest</code> instance.",
              "type": {
                "name": "module:model/RestGetBulkMetaRequest"
              }
            },
            "description": "Constructs a <code>RestGetBulkMetaRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestHeadNodeResponse.js": [
      {
        "description": "The RestHeadNodeResponse model module.\n@module model/RestHeadNodeResponse\n@version 1.0",
        "displayName": "RestHeadNodeResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestHeadNodeResponse</code>.\n@alias module:model/RestHeadNodeResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestHeadNodeResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestHeadNodeResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestHeadNodeResponse} obj Optional instance to populate.\n@return {module:model/RestHeadNodeResponse} The populated <code>RestHeadNodeResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestHeadNodeResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestHeadNodeResponse</code> instance.",
              "type": {
                "name": "module:model/RestHeadNodeResponse"
              }
            },
            "description": "Constructs a <code>RestHeadNodeResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestListPeerFoldersRequest.js": [
      {
        "description": "The RestListPeerFoldersRequest model module.\n@module model/RestListPeerFoldersRequest\n@version 1.0",
        "displayName": "RestListPeerFoldersRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestListPeerFoldersRequest</code>.\n@alias module:model/RestListPeerFoldersRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestListPeerFoldersRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestListPeerFoldersRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestListPeerFoldersRequest} obj Optional instance to populate.\n@return {module:model/RestListPeerFoldersRequest} The populated <code>RestListPeerFoldersRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestListPeerFoldersRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestListPeerFoldersRequest</code> instance.",
              "type": {
                "name": "module:model/RestListPeerFoldersRequest"
              }
            },
            "description": "Constructs a <code>RestListPeerFoldersRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestListPeersAddressesResponse.js": [
      {
        "description": "The RestListPeersAddressesResponse model module.\n@module model/RestListPeersAddressesResponse\n@version 1.0",
        "displayName": "RestListPeersAddressesResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestListPeersAddressesResponse</code>.\n@alias module:model/RestListPeersAddressesResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestListPeersAddressesResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestListPeersAddressesResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestListPeersAddressesResponse} obj Optional instance to populate.\n@return {module:model/RestListPeersAddressesResponse} The populated <code>RestListPeersAddressesResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestListPeersAddressesResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestListPeersAddressesResponse</code> instance.",
              "type": {
                "name": "module:model/RestListPeersAddressesResponse"
              }
            },
            "description": "Constructs a <code>RestListPeersAddressesResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestListProcessesRequest.js": [
      {
        "description": "The RestListProcessesRequest model module.\n@module model/RestListProcessesRequest\n@version 1.0",
        "displayName": "RestListProcessesRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestListProcessesRequest</code>.\n@alias module:model/RestListProcessesRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestListProcessesRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestListProcessesRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestListProcessesRequest} obj Optional instance to populate.\n@return {module:model/RestListProcessesRequest} The populated <code>RestListProcessesRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestListProcessesRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestListProcessesRequest</code> instance.",
              "type": {
                "name": "module:model/RestListProcessesRequest"
              }
            },
            "description": "Constructs a <code>RestListProcessesRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestListProcessesResponse.js": [
      {
        "description": "The RestListProcessesResponse model module.\n@module model/RestListProcessesResponse\n@version 1.0",
        "displayName": "RestListProcessesResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestListProcessesResponse</code>.\n@alias module:model/RestListProcessesResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestListProcessesResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestListProcessesResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestListProcessesResponse} obj Optional instance to populate.\n@return {module:model/RestListProcessesResponse} The populated <code>RestListProcessesResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestListProcessesResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestListProcessesResponse</code> instance.",
              "type": {
                "name": "module:model/RestListProcessesResponse"
              }
            },
            "description": "Constructs a <code>RestListProcessesResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestListSharedResourcesRequest.js": [
      {
        "description": "The RestListSharedResourcesRequest model module.\n@module model/RestListSharedResourcesRequest\n@version 1.0",
        "displayName": "RestListSharedResourcesRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestListSharedResourcesRequest</code>.\n@alias module:model/RestListSharedResourcesRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestListSharedResourcesRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestListSharedResourcesRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestListSharedResourcesRequest} obj Optional instance to populate.\n@return {module:model/RestListSharedResourcesRequest} The populated <code>RestListSharedResourcesRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestListSharedResourcesRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestListSharedResourcesRequest</code> instance.",
              "type": {
                "name": "module:model/RestListSharedResourcesRequest"
              }
            },
            "description": "Constructs a <code>RestListSharedResourcesRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestListSharedResourcesResponse.js": [
      {
        "description": "The RestListSharedResourcesResponse model module.\n@module model/RestListSharedResourcesResponse\n@version 1.0",
        "displayName": "RestListSharedResourcesResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestListSharedResourcesResponse</code>.\n@alias module:model/RestListSharedResourcesResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestListSharedResourcesResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestListSharedResourcesResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestListSharedResourcesResponse} obj Optional instance to populate.\n@return {module:model/RestListSharedResourcesResponse} The populated <code>RestListSharedResourcesResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestListSharedResourcesResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestListSharedResourcesResponse</code> instance.",
              "type": {
                "name": "module:model/RestListSharedResourcesResponse"
              }
            },
            "description": "Constructs a <code>RestListSharedResourcesResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestListTemplatesResponse.js": [
      {
        "description": "The RestListTemplatesResponse model module.\n@module model/RestListTemplatesResponse\n@version 1.0",
        "displayName": "RestListTemplatesResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestListTemplatesResponse</code>.\n@alias module:model/RestListTemplatesResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestListTemplatesResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestListTemplatesResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestListTemplatesResponse} obj Optional instance to populate.\n@return {module:model/RestListTemplatesResponse} The populated <code>RestListTemplatesResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestListTemplatesResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestListTemplatesResponse</code> instance.",
              "type": {
                "name": "module:model/RestListTemplatesResponse"
              }
            },
            "description": "Constructs a <code>RestListTemplatesResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestListUserMetaTagsResponse.js": [
      {
        "description": "The RestListUserMetaTagsResponse model module.\n@module model/RestListUserMetaTagsResponse\n@version 1.0",
        "displayName": "RestListUserMetaTagsResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestListUserMetaTagsResponse</code>.\n@alias module:model/RestListUserMetaTagsResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestListUserMetaTagsResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestListUserMetaTagsResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestListUserMetaTagsResponse} obj Optional instance to populate.\n@return {module:model/RestListUserMetaTagsResponse} The populated <code>RestListUserMetaTagsResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestListUserMetaTagsResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestListUserMetaTagsResponse</code> instance.",
              "type": {
                "name": "module:model/RestListUserMetaTagsResponse"
              }
            },
            "description": "Constructs a <code>RestListUserMetaTagsResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestLogMessageCollection.js": [
      {
        "description": "The RestLogMessageCollection model module.\n@module model/RestLogMessageCollection\n@version 1.0",
        "displayName": "RestLogMessageCollection",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestLogMessageCollection</code>.\n@alias module:model/RestLogMessageCollection\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestLogMessageCollection</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestLogMessageCollection</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestLogMessageCollection} obj Optional instance to populate.\n@return {module:model/RestLogMessageCollection} The populated <code>RestLogMessageCollection</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestLogMessageCollection"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestLogMessageCollection</code> instance.",
              "type": {
                "name": "module:model/RestLogMessageCollection"
              }
            },
            "description": "Constructs a <code>RestLogMessageCollection</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestMetaCollection.js": [
      {
        "description": "The RestMetaCollection model module.\n@module model/RestMetaCollection\n@version 1.0",
        "displayName": "RestMetaCollection",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestMetaCollection</code>.\n@alias module:model/RestMetaCollection\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestMetaCollection</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestMetaCollection</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestMetaCollection} obj Optional instance to populate.\n@return {module:model/RestMetaCollection} The populated <code>RestMetaCollection</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestMetaCollection"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestMetaCollection</code> instance.",
              "type": {
                "name": "module:model/RestMetaCollection"
              }
            },
            "description": "Constructs a <code>RestMetaCollection</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestMetaNamespaceRequest.js": [
      {
        "description": "The RestMetaNamespaceRequest model module.\n@module model/RestMetaNamespaceRequest\n@version 1.0",
        "displayName": "RestMetaNamespaceRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestMetaNamespaceRequest</code>.\n@alias module:model/RestMetaNamespaceRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestMetaNamespaceRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestMetaNamespaceRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestMetaNamespaceRequest} obj Optional instance to populate.\n@return {module:model/RestMetaNamespaceRequest} The populated <code>RestMetaNamespaceRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestMetaNamespaceRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestMetaNamespaceRequest</code> instance.",
              "type": {
                "name": "module:model/RestMetaNamespaceRequest"
              }
            },
            "description": "Constructs a <code>RestMetaNamespaceRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestMetadata.js": [
      {
        "description": "The RestMetadata model module.\n@module model/RestMetadata\n@version 1.0",
        "displayName": "RestMetadata",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestMetadata</code>.\n@alias module:model/RestMetadata\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestMetadata</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestMetadata</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestMetadata} obj Optional instance to populate.\n@return {module:model/RestMetadata} The populated <code>RestMetadata</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestMetadata"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestMetadata</code> instance.",
              "type": {
                "name": "module:model/RestMetadata"
              }
            },
            "description": "Constructs a <code>RestMetadata</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestNodesCollection.js": [
      {
        "description": "The RestNodesCollection model module.\n@module model/RestNodesCollection\n@version 1.0",
        "displayName": "RestNodesCollection",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestNodesCollection</code>.\n@alias module:model/RestNodesCollection\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestNodesCollection</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestNodesCollection</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestNodesCollection} obj Optional instance to populate.\n@return {module:model/RestNodesCollection} The populated <code>RestNodesCollection</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestNodesCollection"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestNodesCollection</code> instance.",
              "type": {
                "name": "module:model/RestNodesCollection"
              }
            },
            "description": "Constructs a <code>RestNodesCollection</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestOpenApiResponse.js": [
      {
        "description": "The RestOpenApiResponse model module.\n@module model/RestOpenApiResponse\n@version 1.0",
        "displayName": "RestOpenApiResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestOpenApiResponse</code>.\n@alias module:model/RestOpenApiResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestOpenApiResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestOpenApiResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestOpenApiResponse} obj Optional instance to populate.\n@return {module:model/RestOpenApiResponse} The populated <code>RestOpenApiResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestOpenApiResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestOpenApiResponse</code> instance.",
              "type": {
                "name": "module:model/RestOpenApiResponse"
              }
            },
            "description": "Constructs a <code>RestOpenApiResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestPagination.js": [
      {
        "description": "The RestPagination model module.\n@module model/RestPagination\n@version 1.0",
        "displayName": "RestPagination",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestPagination</code>.\n@alias module:model/RestPagination\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestPagination</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestPagination</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestPagination} obj Optional instance to populate.\n@return {module:model/RestPagination} The populated <code>RestPagination</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestPagination"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestPagination</code> instance.",
              "type": {
                "name": "module:model/RestPagination"
              }
            },
            "description": "Constructs a <code>RestPagination</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestProcess.js": [
      {
        "description": "The RestProcess model module.\n@module model/RestProcess\n@version 1.0",
        "displayName": "RestProcess",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestProcess</code>.\n@alias module:model/RestProcess\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestProcess</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestProcess</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestProcess} obj Optional instance to populate.\n@return {module:model/RestProcess} The populated <code>RestProcess</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestProcess"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestProcess</code> instance.",
              "type": {
                "name": "module:model/RestProcess"
              }
            },
            "description": "Constructs a <code>RestProcess</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestPutCellRequest.js": [
      {
        "description": "The RestPutCellRequest model module.\n@module model/RestPutCellRequest\n@version 1.0",
        "displayName": "RestPutCellRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestPutCellRequest</code>.\n@alias module:model/RestPutCellRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestPutCellRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestPutCellRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestPutCellRequest} obj Optional instance to populate.\n@return {module:model/RestPutCellRequest} The populated <code>RestPutCellRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestPutCellRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestPutCellRequest</code> instance.",
              "type": {
                "name": "module:model/RestPutCellRequest"
              }
            },
            "description": "Constructs a <code>RestPutCellRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestPutShareLinkRequest.js": [
      {
        "description": "The RestPutShareLinkRequest model module.\n@module model/RestPutShareLinkRequest\n@version 1.0",
        "displayName": "RestPutShareLinkRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestPutShareLinkRequest</code>.\n@alias module:model/RestPutShareLinkRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestPutShareLinkRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestPutShareLinkRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestPutShareLinkRequest} obj Optional instance to populate.\n@return {module:model/RestPutShareLinkRequest} The populated <code>RestPutShareLinkRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestPutShareLinkRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestPutShareLinkRequest</code> instance.",
              "type": {
                "name": "module:model/RestPutShareLinkRequest"
              }
            },
            "description": "Constructs a <code>RestPutShareLinkRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestPutUserMetaTagRequest.js": [
      {
        "description": "The RestPutUserMetaTagRequest model module.\n@module model/RestPutUserMetaTagRequest\n@version 1.0",
        "displayName": "RestPutUserMetaTagRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestPutUserMetaTagRequest</code>.\n@alias module:model/RestPutUserMetaTagRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestPutUserMetaTagRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestPutUserMetaTagRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestPutUserMetaTagRequest} obj Optional instance to populate.\n@return {module:model/RestPutUserMetaTagRequest} The populated <code>RestPutUserMetaTagRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestPutUserMetaTagRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestPutUserMetaTagRequest</code> instance.",
              "type": {
                "name": "module:model/RestPutUserMetaTagRequest"
              }
            },
            "description": "Constructs a <code>RestPutUserMetaTagRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestPutUserMetaTagResponse.js": [
      {
        "description": "The RestPutUserMetaTagResponse model module.\n@module model/RestPutUserMetaTagResponse\n@version 1.0",
        "displayName": "RestPutUserMetaTagResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestPutUserMetaTagResponse</code>.\n@alias module:model/RestPutUserMetaTagResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestPutUserMetaTagResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestPutUserMetaTagResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestPutUserMetaTagResponse} obj Optional instance to populate.\n@return {module:model/RestPutUserMetaTagResponse} The populated <code>RestPutUserMetaTagResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestPutUserMetaTagResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestPutUserMetaTagResponse</code> instance.",
              "type": {
                "name": "module:model/RestPutUserMetaTagResponse"
              }
            },
            "description": "Constructs a <code>RestPutUserMetaTagResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestRelationResponse.js": [
      {
        "description": "The RestRelationResponse model module.\n@module model/RestRelationResponse\n@version 1.0",
        "displayName": "RestRelationResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestRelationResponse</code>.\n@alias module:model/RestRelationResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestRelationResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestRelationResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestRelationResponse} obj Optional instance to populate.\n@return {module:model/RestRelationResponse} The populated <code>RestRelationResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestRelationResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestRelationResponse</code> instance.",
              "type": {
                "name": "module:model/RestRelationResponse"
              }
            },
            "description": "Constructs a <code>RestRelationResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestResetPasswordRequest.js": [
      {
        "description": "The RestResetPasswordRequest model module.\n@module model/RestResetPasswordRequest\n@version 1.0",
        "displayName": "RestResetPasswordRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestResetPasswordRequest</code>.\n@alias module:model/RestResetPasswordRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestResetPasswordRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestResetPasswordRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestResetPasswordRequest} obj Optional instance to populate.\n@return {module:model/RestResetPasswordRequest} The populated <code>RestResetPasswordRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestResetPasswordRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestResetPasswordRequest</code> instance.",
              "type": {
                "name": "module:model/RestResetPasswordRequest"
              }
            },
            "description": "Constructs a <code>RestResetPasswordRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestResetPasswordResponse.js": [
      {
        "description": "The RestResetPasswordResponse model module.\n@module model/RestResetPasswordResponse\n@version 1.0",
        "displayName": "RestResetPasswordResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestResetPasswordResponse</code>.\n@alias module:model/RestResetPasswordResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestResetPasswordResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestResetPasswordResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestResetPasswordResponse} obj Optional instance to populate.\n@return {module:model/RestResetPasswordResponse} The populated <code>RestResetPasswordResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestResetPasswordResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestResetPasswordResponse</code> instance.",
              "type": {
                "name": "module:model/RestResetPasswordResponse"
              }
            },
            "description": "Constructs a <code>RestResetPasswordResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestResetPasswordTokenResponse.js": [
      {
        "description": "The RestResetPasswordTokenResponse model module.\n@module model/RestResetPasswordTokenResponse\n@version 1.0",
        "displayName": "RestResetPasswordTokenResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestResetPasswordTokenResponse</code>.\n@alias module:model/RestResetPasswordTokenResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestResetPasswordTokenResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestResetPasswordTokenResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestResetPasswordTokenResponse} obj Optional instance to populate.\n@return {module:model/RestResetPasswordTokenResponse} The populated <code>RestResetPasswordTokenResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestResetPasswordTokenResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestResetPasswordTokenResponse</code> instance.",
              "type": {
                "name": "module:model/RestResetPasswordTokenResponse"
              }
            },
            "description": "Constructs a <code>RestResetPasswordTokenResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestResourcePolicyQuery.js": [
      {
        "description": "The RestResourcePolicyQuery model module.\n@module model/RestResourcePolicyQuery\n@version 1.0",
        "displayName": "RestResourcePolicyQuery",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestResourcePolicyQuery</code>.\n@alias module:model/RestResourcePolicyQuery\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestResourcePolicyQuery</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestResourcePolicyQuery</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestResourcePolicyQuery} obj Optional instance to populate.\n@return {module:model/RestResourcePolicyQuery} The populated <code>RestResourcePolicyQuery</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestResourcePolicyQuery"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestResourcePolicyQuery</code> instance.",
              "type": {
                "name": "module:model/RestResourcePolicyQuery"
              }
            },
            "description": "Constructs a <code>RestResourcePolicyQuery</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestRestoreNodesRequest.js": [
      {
        "description": "The RestRestoreNodesRequest model module.\n@module model/RestRestoreNodesRequest\n@version 1.0",
        "displayName": "RestRestoreNodesRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestRestoreNodesRequest</code>.\n@alias module:model/RestRestoreNodesRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestRestoreNodesRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestRestoreNodesRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestRestoreNodesRequest} obj Optional instance to populate.\n@return {module:model/RestRestoreNodesRequest} The populated <code>RestRestoreNodesRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestRestoreNodesRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestRestoreNodesRequest</code> instance.",
              "type": {
                "name": "module:model/RestRestoreNodesRequest"
              }
            },
            "description": "Constructs a <code>RestRestoreNodesRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestRestoreNodesResponse.js": [
      {
        "description": "The RestRestoreNodesResponse model module.\n@module model/RestRestoreNodesResponse\n@version 1.0",
        "displayName": "RestRestoreNodesResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestRestoreNodesResponse</code>.\n@alias module:model/RestRestoreNodesResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestRestoreNodesResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestRestoreNodesResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestRestoreNodesResponse} obj Optional instance to populate.\n@return {module:model/RestRestoreNodesResponse} The populated <code>RestRestoreNodesResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestRestoreNodesResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestRestoreNodesResponse</code> instance.",
              "type": {
                "name": "module:model/RestRestoreNodesResponse"
              }
            },
            "description": "Constructs a <code>RestRestoreNodesResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestRevokeRequest.js": [
      {
        "description": "The RestRevokeRequest model module.\n@module model/RestRevokeRequest\n@version 1.0",
        "displayName": "RestRevokeRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestRevokeRequest</code>.\n@alias module:model/RestRevokeRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestRevokeRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestRevokeRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestRevokeRequest} obj Optional instance to populate.\n@return {module:model/RestRevokeRequest} The populated <code>RestRevokeRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestRevokeRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestRevokeRequest</code> instance.",
              "type": {
                "name": "module:model/RestRevokeRequest"
              }
            },
            "description": "Constructs a <code>RestRevokeRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestRevokeResponse.js": [
      {
        "description": "The RestRevokeResponse model module.\n@module model/RestRevokeResponse\n@version 1.0",
        "displayName": "RestRevokeResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestRevokeResponse</code>.\n@alias module:model/RestRevokeResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestRevokeResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestRevokeResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestRevokeResponse} obj Optional instance to populate.\n@return {module:model/RestRevokeResponse} The populated <code>RestRevokeResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestRevokeResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestRevokeResponse</code> instance.",
              "type": {
                "name": "module:model/RestRevokeResponse"
              }
            },
            "description": "Constructs a <code>RestRevokeResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestRolesCollection.js": [
      {
        "description": "The RestRolesCollection model module.\n@module model/RestRolesCollection\n@version 1.0",
        "displayName": "RestRolesCollection",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestRolesCollection</code>.\n@alias module:model/RestRolesCollection\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestRolesCollection</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestRolesCollection</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestRolesCollection} obj Optional instance to populate.\n@return {module:model/RestRolesCollection} The populated <code>RestRolesCollection</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestRolesCollection"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestRolesCollection</code> instance.",
              "type": {
                "name": "module:model/RestRolesCollection"
              }
            },
            "description": "Constructs a <code>RestRolesCollection</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestSearchACLRequest.js": [
      {
        "description": "The RestSearchACLRequest model module.\n@module model/RestSearchACLRequest\n@version 1.0",
        "displayName": "RestSearchACLRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestSearchACLRequest</code>.\n@alias module:model/RestSearchACLRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestSearchACLRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestSearchACLRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestSearchACLRequest} obj Optional instance to populate.\n@return {module:model/RestSearchACLRequest} The populated <code>RestSearchACLRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestSearchACLRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestSearchACLRequest</code> instance.",
              "type": {
                "name": "module:model/RestSearchACLRequest"
              }
            },
            "description": "Constructs a <code>RestSearchACLRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestSearchResults.js": [
      {
        "description": "The RestSearchResults model module.\n@module model/RestSearchResults\n@version 1.0",
        "displayName": "RestSearchResults",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestSearchResults</code>.\n@alias module:model/RestSearchResults\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestSearchResults</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestSearchResults</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestSearchResults} obj Optional instance to populate.\n@return {module:model/RestSearchResults} The populated <code>RestSearchResults</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestSearchResults"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestSearchResults</code> instance.",
              "type": {
                "name": "module:model/RestSearchResults"
              }
            },
            "description": "Constructs a <code>RestSearchResults</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestSearchRoleRequest.js": [
      {
        "description": "The RestSearchRoleRequest model module.\n@module model/RestSearchRoleRequest\n@version 1.0",
        "displayName": "RestSearchRoleRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestSearchRoleRequest</code>.\n@alias module:model/RestSearchRoleRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestSearchRoleRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestSearchRoleRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestSearchRoleRequest} obj Optional instance to populate.\n@return {module:model/RestSearchRoleRequest} The populated <code>RestSearchRoleRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestSearchRoleRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestSearchRoleRequest</code> instance.",
              "type": {
                "name": "module:model/RestSearchRoleRequest"
              }
            },
            "description": "Constructs a <code>RestSearchRoleRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestSearchUserRequest.js": [
      {
        "description": "The RestSearchUserRequest model module.\n@module model/RestSearchUserRequest\n@version 1.0",
        "displayName": "RestSearchUserRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestSearchUserRequest</code>.\n@alias module:model/RestSearchUserRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestSearchUserRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestSearchUserRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestSearchUserRequest} obj Optional instance to populate.\n@return {module:model/RestSearchUserRequest} The populated <code>RestSearchUserRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestSearchUserRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestSearchUserRequest</code> instance.",
              "type": {
                "name": "module:model/RestSearchUserRequest"
              }
            },
            "description": "Constructs a <code>RestSearchUserRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestSearchWorkspaceRequest.js": [
      {
        "description": "The RestSearchWorkspaceRequest model module.\n@module model/RestSearchWorkspaceRequest\n@version 1.0",
        "displayName": "RestSearchWorkspaceRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestSearchWorkspaceRequest</code>.\n@alias module:model/RestSearchWorkspaceRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestSearchWorkspaceRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestSearchWorkspaceRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestSearchWorkspaceRequest} obj Optional instance to populate.\n@return {module:model/RestSearchWorkspaceRequest} The populated <code>RestSearchWorkspaceRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestSearchWorkspaceRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestSearchWorkspaceRequest</code> instance.",
              "type": {
                "name": "module:model/RestSearchWorkspaceRequest"
              }
            },
            "description": "Constructs a <code>RestSearchWorkspaceRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestServiceCollection.js": [
      {
        "description": "The RestServiceCollection model module.\n@module model/RestServiceCollection\n@version 1.0",
        "displayName": "RestServiceCollection",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestServiceCollection</code>.\n@alias module:model/RestServiceCollection\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestServiceCollection</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestServiceCollection</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestServiceCollection} obj Optional instance to populate.\n@return {module:model/RestServiceCollection} The populated <code>RestServiceCollection</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestServiceCollection"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestServiceCollection</code> instance.",
              "type": {
                "name": "module:model/RestServiceCollection"
              }
            },
            "description": "Constructs a <code>RestServiceCollection</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestSettingsEntry.js": [
      {
        "description": "The RestSettingsEntry model module.\n@module model/RestSettingsEntry\n@version 1.0",
        "displayName": "RestSettingsEntry",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestSettingsEntry</code>.\n@alias module:model/RestSettingsEntry\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestSettingsEntry</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestSettingsEntry</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestSettingsEntry} obj Optional instance to populate.\n@return {module:model/RestSettingsEntry} The populated <code>RestSettingsEntry</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestSettingsEntry"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestSettingsEntry</code> instance.",
              "type": {
                "name": "module:model/RestSettingsEntry"
              }
            },
            "description": "Constructs a <code>RestSettingsEntry</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestSettingsEntryMeta.js": [
      {
        "description": "The RestSettingsEntryMeta model module.\n@module model/RestSettingsEntryMeta\n@version 1.0",
        "displayName": "RestSettingsEntryMeta",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestSettingsEntryMeta</code>.\n@alias module:model/RestSettingsEntryMeta\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestSettingsEntryMeta</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestSettingsEntryMeta</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestSettingsEntryMeta} obj Optional instance to populate.\n@return {module:model/RestSettingsEntryMeta} The populated <code>RestSettingsEntryMeta</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestSettingsEntryMeta"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestSettingsEntryMeta</code> instance.",
              "type": {
                "name": "module:model/RestSettingsEntryMeta"
              }
            },
            "description": "Constructs a <code>RestSettingsEntryMeta</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestSettingsMenuResponse.js": [
      {
        "description": "The RestSettingsMenuResponse model module.\n@module model/RestSettingsMenuResponse\n@version 1.0",
        "displayName": "RestSettingsMenuResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestSettingsMenuResponse</code>.\n@alias module:model/RestSettingsMenuResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestSettingsMenuResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestSettingsMenuResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestSettingsMenuResponse} obj Optional instance to populate.\n@return {module:model/RestSettingsMenuResponse} The populated <code>RestSettingsMenuResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestSettingsMenuResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestSettingsMenuResponse</code> instance.",
              "type": {
                "name": "module:model/RestSettingsMenuResponse"
              }
            },
            "description": "Constructs a <code>RestSettingsMenuResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestSettingsSection.js": [
      {
        "description": "The RestSettingsSection model module.\n@module model/RestSettingsSection\n@version 1.0",
        "displayName": "RestSettingsSection",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestSettingsSection</code>.\n@alias module:model/RestSettingsSection\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestSettingsSection</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestSettingsSection</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestSettingsSection} obj Optional instance to populate.\n@return {module:model/RestSettingsSection} The populated <code>RestSettingsSection</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestSettingsSection"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestSettingsSection</code> instance.",
              "type": {
                "name": "module:model/RestSettingsSection"
              }
            },
            "description": "Constructs a <code>RestSettingsSection</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestShareLink.js": [
      {
        "description": "The RestShareLink model module.\n@module model/RestShareLink\n@version 1.0",
        "displayName": "RestShareLink",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestShareLink</code>.\n@alias module:model/RestShareLink\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestShareLink</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestShareLink</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestShareLink} obj Optional instance to populate.\n@return {module:model/RestShareLink} The populated <code>RestShareLink</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestShareLink"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestShareLink</code> instance.",
              "type": {
                "name": "module:model/RestShareLink"
              }
            },
            "description": "Constructs a <code>RestShareLink</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestShareLinkAccessType.js": [
      {
        "description": "Enum class RestShareLinkAccessType.\n@enum {}\n@readonly",
        "displayName": "RestShareLinkAccessType",
        "methods": [
          {
            "name": "constructFromObject",
            "docblock": "Returns a <code>RestShareLinkAccessType</code> enum value from a Javascript object name.\n@param {Object} data The plain JavaScript object containing the name of the enum value.\n@return {module:model/RestShareLinkAccessType} The enum <code>RestShareLinkAccessType</code> value.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "object"
              }
            ],
            "returns": {
              "description": "The enum <code>RestShareLinkAccessType</code> value.",
              "type": {
                "name": "module:model/RestShareLinkAccessType"
              }
            },
            "description": "Returns a <code>RestShareLinkAccessType</code> enum value from a Javascript object name."
          }
        ]
      }
    ],
    "core/http/gen/model/RestShareLinkTargetUser.js": [
      {
        "description": "The RestShareLinkTargetUser model module.\n@module model/RestShareLinkTargetUser\n@version 1.0",
        "displayName": "RestShareLinkTargetUser",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestShareLinkTargetUser</code>.\n@alias module:model/RestShareLinkTargetUser\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestShareLinkTargetUser</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestShareLinkTargetUser</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestShareLinkTargetUser} obj Optional instance to populate.\n@return {module:model/RestShareLinkTargetUser} The populated <code>RestShareLinkTargetUser</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestShareLinkTargetUser"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestShareLinkTargetUser</code> instance.",
              "type": {
                "name": "module:model/RestShareLinkTargetUser"
              }
            },
            "description": "Constructs a <code>RestShareLinkTargetUser</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestSubscriptionsCollection.js": [
      {
        "description": "The RestSubscriptionsCollection model module.\n@module model/RestSubscriptionsCollection\n@version 1.0",
        "displayName": "RestSubscriptionsCollection",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestSubscriptionsCollection</code>.\n@alias module:model/RestSubscriptionsCollection\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestSubscriptionsCollection</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestSubscriptionsCollection</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestSubscriptionsCollection} obj Optional instance to populate.\n@return {module:model/RestSubscriptionsCollection} The populated <code>RestSubscriptionsCollection</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestSubscriptionsCollection"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestSubscriptionsCollection</code> instance.",
              "type": {
                "name": "module:model/RestSubscriptionsCollection"
              }
            },
            "description": "Constructs a <code>RestSubscriptionsCollection</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestTemplate.js": [
      {
        "description": "The RestTemplate model module.\n@module model/RestTemplate\n@version 1.0",
        "displayName": "RestTemplate",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestTemplate</code>.\n@alias module:model/RestTemplate\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestTemplate</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestTemplate</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestTemplate} obj Optional instance to populate.\n@return {module:model/RestTemplate} The populated <code>RestTemplate</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestTemplate"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestTemplate</code> instance.",
              "type": {
                "name": "module:model/RestTemplate"
              }
            },
            "description": "Constructs a <code>RestTemplate</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestTemplateNode.js": [
      {
        "description": "The RestTemplateNode model module.\n@module model/RestTemplateNode\n@version 1.0",
        "displayName": "RestTemplateNode",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestTemplateNode</code>.\n@alias module:model/RestTemplateNode\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestTemplateNode</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestTemplateNode</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestTemplateNode} obj Optional instance to populate.\n@return {module:model/RestTemplateNode} The populated <code>RestTemplateNode</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestTemplateNode"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestTemplateNode</code> instance.",
              "type": {
                "name": "module:model/RestTemplateNode"
              }
            },
            "description": "Constructs a <code>RestTemplateNode</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestUpdateSharePoliciesRequest.js": [
      {
        "description": "The RestUpdateSharePoliciesRequest model module.\n@module model/RestUpdateSharePoliciesRequest\n@version 1.0",
        "displayName": "RestUpdateSharePoliciesRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestUpdateSharePoliciesRequest</code>.\n@alias module:model/RestUpdateSharePoliciesRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestUpdateSharePoliciesRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestUpdateSharePoliciesRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestUpdateSharePoliciesRequest} obj Optional instance to populate.\n@return {module:model/RestUpdateSharePoliciesRequest} The populated <code>RestUpdateSharePoliciesRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestUpdateSharePoliciesRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestUpdateSharePoliciesRequest</code> instance.",
              "type": {
                "name": "module:model/RestUpdateSharePoliciesRequest"
              }
            },
            "description": "Constructs a <code>RestUpdateSharePoliciesRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestUpdateSharePoliciesResponse.js": [
      {
        "description": "The RestUpdateSharePoliciesResponse model module.\n@module model/RestUpdateSharePoliciesResponse\n@version 1.0",
        "displayName": "RestUpdateSharePoliciesResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestUpdateSharePoliciesResponse</code>.\n@alias module:model/RestUpdateSharePoliciesResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestUpdateSharePoliciesResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestUpdateSharePoliciesResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestUpdateSharePoliciesResponse} obj Optional instance to populate.\n@return {module:model/RestUpdateSharePoliciesResponse} The populated <code>RestUpdateSharePoliciesResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestUpdateSharePoliciesResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestUpdateSharePoliciesResponse</code> instance.",
              "type": {
                "name": "module:model/RestUpdateSharePoliciesResponse"
              }
            },
            "description": "Constructs a <code>RestUpdateSharePoliciesResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestUserBookmarksRequest.js": [
      {
        "description": "The RestUserBookmarksRequest model module.\n@module model/RestUserBookmarksRequest\n@version 1.0",
        "displayName": "RestUserBookmarksRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestUserBookmarksRequest</code>.\n@alias module:model/RestUserBookmarksRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestUserBookmarksRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestUserBookmarksRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestUserBookmarksRequest} obj Optional instance to populate.\n@return {module:model/RestUserBookmarksRequest} The populated <code>RestUserBookmarksRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestUserBookmarksRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestUserBookmarksRequest</code> instance.",
              "type": {
                "name": "module:model/RestUserBookmarksRequest"
              }
            },
            "description": "Constructs a <code>RestUserBookmarksRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestUserJobRequest.js": [
      {
        "description": "The RestUserJobRequest model module.\n@module model/RestUserJobRequest\n@version 1.0",
        "displayName": "RestUserJobRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestUserJobRequest</code>.\n@alias module:model/RestUserJobRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestUserJobRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestUserJobRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestUserJobRequest} obj Optional instance to populate.\n@return {module:model/RestUserJobRequest} The populated <code>RestUserJobRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestUserJobRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestUserJobRequest</code> instance.",
              "type": {
                "name": "module:model/RestUserJobRequest"
              }
            },
            "description": "Constructs a <code>RestUserJobRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestUserJobResponse.js": [
      {
        "description": "The RestUserJobResponse model module.\n@module model/RestUserJobResponse\n@version 1.0",
        "displayName": "RestUserJobResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestUserJobResponse</code>.\n@alias module:model/RestUserJobResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestUserJobResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestUserJobResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestUserJobResponse} obj Optional instance to populate.\n@return {module:model/RestUserJobResponse} The populated <code>RestUserJobResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestUserJobResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestUserJobResponse</code> instance.",
              "type": {
                "name": "module:model/RestUserJobResponse"
              }
            },
            "description": "Constructs a <code>RestUserJobResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestUserJobsCollection.js": [
      {
        "description": "The RestUserJobsCollection model module.\n@module model/RestUserJobsCollection\n@version 1.0",
        "displayName": "RestUserJobsCollection",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestUserJobsCollection</code>.\n@alias module:model/RestUserJobsCollection\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestUserJobsCollection</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestUserJobsCollection</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestUserJobsCollection} obj Optional instance to populate.\n@return {module:model/RestUserJobsCollection} The populated <code>RestUserJobsCollection</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestUserJobsCollection"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestUserJobsCollection</code> instance.",
              "type": {
                "name": "module:model/RestUserJobsCollection"
              }
            },
            "description": "Constructs a <code>RestUserJobsCollection</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestUserMetaCollection.js": [
      {
        "description": "The RestUserMetaCollection model module.\n@module model/RestUserMetaCollection\n@version 1.0",
        "displayName": "RestUserMetaCollection",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestUserMetaCollection</code>.\n@alias module:model/RestUserMetaCollection\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestUserMetaCollection</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestUserMetaCollection</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestUserMetaCollection} obj Optional instance to populate.\n@return {module:model/RestUserMetaCollection} The populated <code>RestUserMetaCollection</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestUserMetaCollection"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestUserMetaCollection</code> instance.",
              "type": {
                "name": "module:model/RestUserMetaCollection"
              }
            },
            "description": "Constructs a <code>RestUserMetaCollection</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestUserMetaNamespaceCollection.js": [
      {
        "description": "The RestUserMetaNamespaceCollection model module.\n@module model/RestUserMetaNamespaceCollection\n@version 1.0",
        "displayName": "RestUserMetaNamespaceCollection",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestUserMetaNamespaceCollection</code>.\n@alias module:model/RestUserMetaNamespaceCollection\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestUserMetaNamespaceCollection</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestUserMetaNamespaceCollection</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestUserMetaNamespaceCollection} obj Optional instance to populate.\n@return {module:model/RestUserMetaNamespaceCollection} The populated <code>RestUserMetaNamespaceCollection</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestUserMetaNamespaceCollection"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestUserMetaNamespaceCollection</code> instance.",
              "type": {
                "name": "module:model/RestUserMetaNamespaceCollection"
              }
            },
            "description": "Constructs a <code>RestUserMetaNamespaceCollection</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestUserStateResponse.js": [
      {
        "description": "The RestUserStateResponse model module.\n@module model/RestUserStateResponse\n@version 1.0",
        "displayName": "RestUserStateResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestUserStateResponse</code>.\n@alias module:model/RestUserStateResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestUserStateResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestUserStateResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestUserStateResponse} obj Optional instance to populate.\n@return {module:model/RestUserStateResponse} The populated <code>RestUserStateResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestUserStateResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestUserStateResponse</code> instance.",
              "type": {
                "name": "module:model/RestUserStateResponse"
              }
            },
            "description": "Constructs a <code>RestUserStateResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestUsersCollection.js": [
      {
        "description": "The RestUsersCollection model module.\n@module model/RestUsersCollection\n@version 1.0",
        "displayName": "RestUsersCollection",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestUsersCollection</code>.\n@alias module:model/RestUsersCollection\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestUsersCollection</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestUsersCollection</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestUsersCollection} obj Optional instance to populate.\n@return {module:model/RestUsersCollection} The populated <code>RestUsersCollection</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestUsersCollection"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestUsersCollection</code> instance.",
              "type": {
                "name": "module:model/RestUsersCollection"
              }
            },
            "description": "Constructs a <code>RestUsersCollection</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestVersioningPolicyCollection.js": [
      {
        "description": "The RestVersioningPolicyCollection model module.\n@module model/RestVersioningPolicyCollection\n@version 1.0",
        "displayName": "RestVersioningPolicyCollection",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestVersioningPolicyCollection</code>.\n@alias module:model/RestVersioningPolicyCollection\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestVersioningPolicyCollection</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestVersioningPolicyCollection</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestVersioningPolicyCollection} obj Optional instance to populate.\n@return {module:model/RestVersioningPolicyCollection} The populated <code>RestVersioningPolicyCollection</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestVersioningPolicyCollection"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestVersioningPolicyCollection</code> instance.",
              "type": {
                "name": "module:model/RestVersioningPolicyCollection"
              }
            },
            "description": "Constructs a <code>RestVersioningPolicyCollection</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/RestWorkspaceCollection.js": [
      {
        "description": "The RestWorkspaceCollection model module.\n@module model/RestWorkspaceCollection\n@version 1.0",
        "displayName": "RestWorkspaceCollection",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>RestWorkspaceCollection</code>.\n@alias module:model/RestWorkspaceCollection\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>RestWorkspaceCollection</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>RestWorkspaceCollection</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/RestWorkspaceCollection} obj Optional instance to populate.\n@return {module:model/RestWorkspaceCollection} The populated <code>RestWorkspaceCollection</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/RestWorkspaceCollection"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>RestWorkspaceCollection</code> instance.",
              "type": {
                "name": "module:model/RestWorkspaceCollection"
              }
            },
            "description": "Constructs a <code>RestWorkspaceCollection</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/ServiceOperationType.js": [
      {
        "description": "Enum class ServiceOperationType.\n@enum {}\n@readonly",
        "displayName": "ServiceOperationType",
        "methods": [
          {
            "name": "constructFromObject",
            "docblock": "Returns a <code>ServiceOperationType</code> enum value from a Javascript object name.\n@param {Object} data The plain JavaScript object containing the name of the enum value.\n@return {module:model/ServiceOperationType} The enum <code>ServiceOperationType</code> value.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "object"
              }
            ],
            "returns": {
              "description": "The enum <code>ServiceOperationType</code> value.",
              "type": {
                "name": "module:model/ServiceOperationType"
              }
            },
            "description": "Returns a <code>ServiceOperationType</code> enum value from a Javascript object name."
          }
        ]
      }
    ],
    "core/http/gen/model/ServiceQuery.js": [
      {
        "description": "The ServiceQuery model module.\n@module model/ServiceQuery\n@version 1.0",
        "displayName": "ServiceQuery",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>ServiceQuery</code>.\n@alias module:model/ServiceQuery\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>ServiceQuery</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>ServiceQuery</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/ServiceQuery} obj Optional instance to populate.\n@return {module:model/ServiceQuery} The populated <code>ServiceQuery</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/ServiceQuery"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>ServiceQuery</code> instance.",
              "type": {
                "name": "module:model/ServiceQuery"
              }
            },
            "description": "Constructs a <code>ServiceQuery</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/ServiceResourcePolicy.js": [
      {
        "description": "The ServiceResourcePolicy model module.\n@module model/ServiceResourcePolicy\n@version 1.0",
        "displayName": "ServiceResourcePolicy",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>ServiceResourcePolicy</code>.\n@alias module:model/ServiceResourcePolicy\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>ServiceResourcePolicy</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>ServiceResourcePolicy</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/ServiceResourcePolicy} obj Optional instance to populate.\n@return {module:model/ServiceResourcePolicy} The populated <code>ServiceResourcePolicy</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/ServiceResourcePolicy"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>ServiceResourcePolicy</code> instance.",
              "type": {
                "name": "module:model/ServiceResourcePolicy"
              }
            },
            "description": "Constructs a <code>ServiceResourcePolicy</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/ServiceResourcePolicyAction.js": [
      {
        "description": "Enum class ServiceResourcePolicyAction.\n@enum {}\n@readonly",
        "displayName": "ServiceResourcePolicyAction",
        "methods": [
          {
            "name": "constructFromObject",
            "docblock": "Returns a <code>ServiceResourcePolicyAction</code> enum value from a Javascript object name.\n@param {Object} data The plain JavaScript object containing the name of the enum value.\n@return {module:model/ServiceResourcePolicyAction} The enum <code>ServiceResourcePolicyAction</code> value.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "object"
              }
            ],
            "returns": {
              "description": "The enum <code>ServiceResourcePolicyAction</code> value.",
              "type": {
                "name": "module:model/ServiceResourcePolicyAction"
              }
            },
            "description": "Returns a <code>ServiceResourcePolicyAction</code> enum value from a Javascript object name."
          }
        ]
      }
    ],
    "core/http/gen/model/ServiceResourcePolicyPolicyEffect.js": [
      {
        "description": "Enum class ServiceResourcePolicyPolicyEffect.\n@enum {}\n@readonly",
        "displayName": "ServiceResourcePolicyPolicyEffect",
        "methods": [
          {
            "name": "constructFromObject",
            "docblock": "Returns a <code>ServiceResourcePolicyPolicyEffect</code> enum value from a Javascript object name.\n@param {Object} data The plain JavaScript object containing the name of the enum value.\n@return {module:model/ServiceResourcePolicyPolicyEffect} The enum <code>ServiceResourcePolicyPolicyEffect</code> value.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "object"
              }
            ],
            "returns": {
              "description": "The enum <code>ServiceResourcePolicyPolicyEffect</code> value.",
              "type": {
                "name": "module:model/ServiceResourcePolicyPolicyEffect"
              }
            },
            "description": "Returns a <code>ServiceResourcePolicyPolicyEffect</code> enum value from a Javascript object name."
          }
        ]
      }
    ],
    "core/http/gen/model/ServiceResourcePolicyQuery.js": [
      {
        "description": "The ServiceResourcePolicyQuery model module.\n@module model/ServiceResourcePolicyQuery\n@version 1.0",
        "displayName": "ServiceResourcePolicyQuery",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>ServiceResourcePolicyQuery</code>.\n@alias module:model/ServiceResourcePolicyQuery\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>ServiceResourcePolicyQuery</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>ServiceResourcePolicyQuery</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/ServiceResourcePolicyQuery} obj Optional instance to populate.\n@return {module:model/ServiceResourcePolicyQuery} The populated <code>ServiceResourcePolicyQuery</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/ServiceResourcePolicyQuery"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>ServiceResourcePolicyQuery</code> instance.",
              "type": {
                "name": "module:model/ServiceResourcePolicyQuery"
              }
            },
            "description": "Constructs a <code>ServiceResourcePolicyQuery</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/TreeChangeLog.js": [
      {
        "description": "The TreeChangeLog model module.\n@module model/TreeChangeLog\n@version 1.0",
        "displayName": "TreeChangeLog",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>TreeChangeLog</code>.\n@alias module:model/TreeChangeLog\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>TreeChangeLog</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>TreeChangeLog</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/TreeChangeLog} obj Optional instance to populate.\n@return {module:model/TreeChangeLog} The populated <code>TreeChangeLog</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/TreeChangeLog"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>TreeChangeLog</code> instance.",
              "type": {
                "name": "module:model/TreeChangeLog"
              }
            },
            "description": "Constructs a <code>TreeChangeLog</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/TreeGeoPoint.js": [
      {
        "description": "The TreeGeoPoint model module.\n@module model/TreeGeoPoint\n@version 1.0",
        "displayName": "TreeGeoPoint",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>TreeGeoPoint</code>.\n@alias module:model/TreeGeoPoint\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>TreeGeoPoint</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>TreeGeoPoint</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/TreeGeoPoint} obj Optional instance to populate.\n@return {module:model/TreeGeoPoint} The populated <code>TreeGeoPoint</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/TreeGeoPoint"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>TreeGeoPoint</code> instance.",
              "type": {
                "name": "module:model/TreeGeoPoint"
              }
            },
            "description": "Constructs a <code>TreeGeoPoint</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/TreeGeoQuery.js": [
      {
        "description": "The TreeGeoQuery model module.\n@module model/TreeGeoQuery\n@version 1.0",
        "displayName": "TreeGeoQuery",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>TreeGeoQuery</code>.\n@alias module:model/TreeGeoQuery\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>TreeGeoQuery</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>TreeGeoQuery</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/TreeGeoQuery} obj Optional instance to populate.\n@return {module:model/TreeGeoQuery} The populated <code>TreeGeoQuery</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/TreeGeoQuery"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>TreeGeoQuery</code> instance.",
              "type": {
                "name": "module:model/TreeGeoQuery"
              }
            },
            "description": "Constructs a <code>TreeGeoQuery</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/TreeListNodesRequest.js": [
      {
        "description": "The TreeListNodesRequest model module.\n@module model/TreeListNodesRequest\n@version 1.0",
        "displayName": "TreeListNodesRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>TreeListNodesRequest</code>.\n@alias module:model/TreeListNodesRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>TreeListNodesRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>TreeListNodesRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/TreeListNodesRequest} obj Optional instance to populate.\n@return {module:model/TreeListNodesRequest} The populated <code>TreeListNodesRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/TreeListNodesRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>TreeListNodesRequest</code> instance.",
              "type": {
                "name": "module:model/TreeListNodesRequest"
              }
            },
            "description": "Constructs a <code>TreeListNodesRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/TreeNode.js": [
      {
        "description": "The TreeNode model module.\n@module model/TreeNode\n@version 1.0",
        "displayName": "TreeNode",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>TreeNode</code>.\n@alias module:model/TreeNode\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>TreeNode</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>TreeNode</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/TreeNode} obj Optional instance to populate.\n@return {module:model/TreeNode} The populated <code>TreeNode</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/TreeNode"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>TreeNode</code> instance.",
              "type": {
                "name": "module:model/TreeNode"
              }
            },
            "description": "Constructs a <code>TreeNode</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/TreeNodeChangeEvent.js": [
      {
        "description": "The TreeNodeChangeEvent model module.\n@module model/TreeNodeChangeEvent\n@version 1.0",
        "displayName": "TreeNodeChangeEvent",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>TreeNodeChangeEvent</code>.\n@alias module:model/TreeNodeChangeEvent\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>TreeNodeChangeEvent</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>TreeNodeChangeEvent</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/TreeNodeChangeEvent} obj Optional instance to populate.\n@return {module:model/TreeNodeChangeEvent} The populated <code>TreeNodeChangeEvent</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/TreeNodeChangeEvent"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>TreeNodeChangeEvent</code> instance.",
              "type": {
                "name": "module:model/TreeNodeChangeEvent"
              }
            },
            "description": "Constructs a <code>TreeNodeChangeEvent</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/TreeNodeType.js": [
      {
        "description": "Enum class TreeNodeType.\n@enum {}\n@readonly",
        "displayName": "TreeNodeType",
        "methods": [
          {
            "name": "constructFromObject",
            "docblock": "Returns a <code>TreeNodeType</code> enum value from a Javascript object name.\n@param {Object} data The plain JavaScript object containing the name of the enum value.\n@return {module:model/TreeNodeType} The enum <code>TreeNodeType</code> value.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "object"
              }
            ],
            "returns": {
              "description": "The enum <code>TreeNodeType</code> value.",
              "type": {
                "name": "module:model/TreeNodeType"
              }
            },
            "description": "Returns a <code>TreeNodeType</code> enum value from a Javascript object name."
          }
        ]
      }
    ],
    "core/http/gen/model/TreeQuery.js": [
      {
        "description": "The TreeQuery model module.\n@module model/TreeQuery\n@version 1.0",
        "displayName": "TreeQuery",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>TreeQuery</code>.\n@alias module:model/TreeQuery\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>TreeQuery</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>TreeQuery</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/TreeQuery} obj Optional instance to populate.\n@return {module:model/TreeQuery} The populated <code>TreeQuery</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/TreeQuery"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>TreeQuery</code> instance.",
              "type": {
                "name": "module:model/TreeQuery"
              }
            },
            "description": "Constructs a <code>TreeQuery</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/TreeReadNodeRequest.js": [
      {
        "description": "The TreeReadNodeRequest model module.\n@module model/TreeReadNodeRequest\n@version 1.0",
        "displayName": "TreeReadNodeRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>TreeReadNodeRequest</code>.\n@alias module:model/TreeReadNodeRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>TreeReadNodeRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>TreeReadNodeRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/TreeReadNodeRequest} obj Optional instance to populate.\n@return {module:model/TreeReadNodeRequest} The populated <code>TreeReadNodeRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/TreeReadNodeRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>TreeReadNodeRequest</code> instance.",
              "type": {
                "name": "module:model/TreeReadNodeRequest"
              }
            },
            "description": "Constructs a <code>TreeReadNodeRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/TreeReadNodeResponse.js": [
      {
        "description": "The TreeReadNodeResponse model module.\n@module model/TreeReadNodeResponse\n@version 1.0",
        "displayName": "TreeReadNodeResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>TreeReadNodeResponse</code>.\n@alias module:model/TreeReadNodeResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>TreeReadNodeResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>TreeReadNodeResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/TreeReadNodeResponse} obj Optional instance to populate.\n@return {module:model/TreeReadNodeResponse} The populated <code>TreeReadNodeResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/TreeReadNodeResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>TreeReadNodeResponse</code> instance.",
              "type": {
                "name": "module:model/TreeReadNodeResponse"
              }
            },
            "description": "Constructs a <code>TreeReadNodeResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/TreeSearchRequest.js": [
      {
        "description": "The TreeSearchRequest model module.\n@module model/TreeSearchRequest\n@version 1.0",
        "displayName": "TreeSearchRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>TreeSearchRequest</code>.\n@alias module:model/TreeSearchRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>TreeSearchRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>TreeSearchRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/TreeSearchRequest} obj Optional instance to populate.\n@return {module:model/TreeSearchRequest} The populated <code>TreeSearchRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/TreeSearchRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>TreeSearchRequest</code> instance.",
              "type": {
                "name": "module:model/TreeSearchRequest"
              }
            },
            "description": "Constructs a <code>TreeSearchRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/TreeSyncChange.js": [
      {
        "description": "The TreeSyncChange model module.\n@module model/TreeSyncChange\n@version 1.0",
        "displayName": "TreeSyncChange",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>TreeSyncChange</code>.\n@alias module:model/TreeSyncChange\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>TreeSyncChange</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>TreeSyncChange</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/TreeSyncChange} obj Optional instance to populate.\n@return {module:model/TreeSyncChange} The populated <code>TreeSyncChange</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/TreeSyncChange"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>TreeSyncChange</code> instance.",
              "type": {
                "name": "module:model/TreeSyncChange"
              }
            },
            "description": "Constructs a <code>TreeSyncChange</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/TreeSyncChangeNode.js": [
      {
        "description": "The TreeSyncChangeNode model module.\n@module model/TreeSyncChangeNode\n@version 1.0",
        "displayName": "TreeSyncChangeNode",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>TreeSyncChangeNode</code>.\n@alias module:model/TreeSyncChangeNode\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>TreeSyncChangeNode</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>TreeSyncChangeNode</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/TreeSyncChangeNode} obj Optional instance to populate.\n@return {module:model/TreeSyncChangeNode} The populated <code>TreeSyncChangeNode</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/TreeSyncChangeNode"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>TreeSyncChangeNode</code> instance.",
              "type": {
                "name": "module:model/TreeSyncChangeNode"
              }
            },
            "description": "Constructs a <code>TreeSyncChangeNode</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/TreeSyncChangeType.js": [
      {
        "description": "Enum class TreeSyncChangeType.\n@enum {}\n@readonly",
        "displayName": "TreeSyncChangeType",
        "methods": [
          {
            "name": "constructFromObject",
            "docblock": "Returns a <code>TreeSyncChangeType</code> enum value from a Javascript object name.\n@param {Object} data The plain JavaScript object containing the name of the enum value.\n@return {module:model/TreeSyncChangeType} The enum <code>TreeSyncChangeType</code> value.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "object"
              }
            ],
            "returns": {
              "description": "The enum <code>TreeSyncChangeType</code> value.",
              "type": {
                "name": "module:model/TreeSyncChangeType"
              }
            },
            "description": "Returns a <code>TreeSyncChangeType</code> enum value from a Javascript object name."
          }
        ]
      }
    ],
    "core/http/gen/model/TreeVersioningKeepPeriod.js": [
      {
        "description": "The TreeVersioningKeepPeriod model module.\n@module model/TreeVersioningKeepPeriod\n@version 1.0",
        "displayName": "TreeVersioningKeepPeriod",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>TreeVersioningKeepPeriod</code>.\n@alias module:model/TreeVersioningKeepPeriod\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>TreeVersioningKeepPeriod</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>TreeVersioningKeepPeriod</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/TreeVersioningKeepPeriod} obj Optional instance to populate.\n@return {module:model/TreeVersioningKeepPeriod} The populated <code>TreeVersioningKeepPeriod</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/TreeVersioningKeepPeriod"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>TreeVersioningKeepPeriod</code> instance.",
              "type": {
                "name": "module:model/TreeVersioningKeepPeriod"
              }
            },
            "description": "Constructs a <code>TreeVersioningKeepPeriod</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/TreeVersioningPolicy.js": [
      {
        "description": "The TreeVersioningPolicy model module.\n@module model/TreeVersioningPolicy\n@version 1.0",
        "displayName": "TreeVersioningPolicy",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>TreeVersioningPolicy</code>.\n@alias module:model/TreeVersioningPolicy\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>TreeVersioningPolicy</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>TreeVersioningPolicy</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/TreeVersioningPolicy} obj Optional instance to populate.\n@return {module:model/TreeVersioningPolicy} The populated <code>TreeVersioningPolicy</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/TreeVersioningPolicy"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>TreeVersioningPolicy</code> instance.",
              "type": {
                "name": "module:model/TreeVersioningPolicy"
              }
            },
            "description": "Constructs a <code>TreeVersioningPolicy</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/TreeWorkspaceRelativePath.js": [
      {
        "description": "The TreeWorkspaceRelativePath model module.\n@module model/TreeWorkspaceRelativePath\n@version 1.0",
        "displayName": "TreeWorkspaceRelativePath",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>TreeWorkspaceRelativePath</code>.\n@alias module:model/TreeWorkspaceRelativePath\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>TreeWorkspaceRelativePath</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>TreeWorkspaceRelativePath</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/TreeWorkspaceRelativePath} obj Optional instance to populate.\n@return {module:model/TreeWorkspaceRelativePath} The populated <code>TreeWorkspaceRelativePath</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/TreeWorkspaceRelativePath"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>TreeWorkspaceRelativePath</code> instance.",
              "type": {
                "name": "module:model/TreeWorkspaceRelativePath"
              }
            },
            "description": "Constructs a <code>TreeWorkspaceRelativePath</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/UpdateApplyUpdateRequest.js": [
      {
        "description": "The UpdateApplyUpdateRequest model module.\n@module model/UpdateApplyUpdateRequest\n@version 1.0",
        "displayName": "UpdateApplyUpdateRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>UpdateApplyUpdateRequest</code>.\n@alias module:model/UpdateApplyUpdateRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>UpdateApplyUpdateRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>UpdateApplyUpdateRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/UpdateApplyUpdateRequest} obj Optional instance to populate.\n@return {module:model/UpdateApplyUpdateRequest} The populated <code>UpdateApplyUpdateRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/UpdateApplyUpdateRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>UpdateApplyUpdateRequest</code> instance.",
              "type": {
                "name": "module:model/UpdateApplyUpdateRequest"
              }
            },
            "description": "Constructs a <code>UpdateApplyUpdateRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/UpdateApplyUpdateResponse.js": [
      {
        "description": "The UpdateApplyUpdateResponse model module.\n@module model/UpdateApplyUpdateResponse\n@version 1.0",
        "displayName": "UpdateApplyUpdateResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>UpdateApplyUpdateResponse</code>.\n@alias module:model/UpdateApplyUpdateResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>UpdateApplyUpdateResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>UpdateApplyUpdateResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/UpdateApplyUpdateResponse} obj Optional instance to populate.\n@return {module:model/UpdateApplyUpdateResponse} The populated <code>UpdateApplyUpdateResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/UpdateApplyUpdateResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>UpdateApplyUpdateResponse</code> instance.",
              "type": {
                "name": "module:model/UpdateApplyUpdateResponse"
              }
            },
            "description": "Constructs a <code>UpdateApplyUpdateResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/UpdatePackage.js": [
      {
        "description": "The UpdatePackage model module.\n@module model/UpdatePackage\n@version 1.0",
        "displayName": "UpdatePackage",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>UpdatePackage</code>.\n@alias module:model/UpdatePackage\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>UpdatePackage</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>UpdatePackage</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/UpdatePackage} obj Optional instance to populate.\n@return {module:model/UpdatePackage} The populated <code>UpdatePackage</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/UpdatePackage"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>UpdatePackage</code> instance.",
              "type": {
                "name": "module:model/UpdatePackage"
              }
            },
            "description": "Constructs a <code>UpdatePackage</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/UpdateUpdateRequest.js": [
      {
        "description": "The UpdateUpdateRequest model module.\n@module model/UpdateUpdateRequest\n@version 1.0",
        "displayName": "UpdateUpdateRequest",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>UpdateUpdateRequest</code>.\n@alias module:model/UpdateUpdateRequest\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>UpdateUpdateRequest</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>UpdateUpdateRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/UpdateUpdateRequest} obj Optional instance to populate.\n@return {module:model/UpdateUpdateRequest} The populated <code>UpdateUpdateRequest</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/UpdateUpdateRequest"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>UpdateUpdateRequest</code> instance.",
              "type": {
                "name": "module:model/UpdateUpdateRequest"
              }
            },
            "description": "Constructs a <code>UpdateUpdateRequest</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/UpdateUpdateResponse.js": [
      {
        "description": "The UpdateUpdateResponse model module.\n@module model/UpdateUpdateResponse\n@version 1.0",
        "displayName": "UpdateUpdateResponse",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructs a new <code>UpdateUpdateResponse</code>.\n@alias module:model/UpdateUpdateResponse\n@class",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Constructs a new <code>UpdateUpdateResponse</code>."
          },
          {
            "name": "constructFromObject",
            "docblock": "Constructs a <code>UpdateUpdateResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n@param {Object} data The plain JavaScript object bearing properties of interest.\n@param {module:model/UpdateUpdateResponse} obj Optional instance to populate.\n@return {module:model/UpdateUpdateResponse} The populated <code>UpdateUpdateResponse</code> instance.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "description": "The plain JavaScript object bearing properties of interest.",
                "type": {
                  "name": "Object"
                }
              },
              {
                "name": "obj",
                "description": "Optional instance to populate.",
                "type": {
                  "name": "module:model/UpdateUpdateResponse"
                }
              }
            ],
            "returns": {
              "description": "The populated <code>UpdateUpdateResponse</code> instance.",
              "type": {
                "name": "module:model/UpdateUpdateResponse"
              }
            },
            "description": "Constructs a <code>UpdateUpdateResponse</code> from a plain JavaScript object, optionally creating a new instance.\nCopies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not."
          }
        ]
      }
    ],
    "core/http/gen/model/UpdateUserMetaNamespaceRequestUserMetaNsOp.js": [
      {
        "description": "Enum class UpdateUserMetaNamespaceRequestUserMetaNsOp.\n@enum {}\n@readonly",
        "displayName": "UpdateUserMetaNamespaceRequestUserMetaNsOp",
        "methods": [
          {
            "name": "constructFromObject",
            "docblock": "Returns a <code>UpdateUserMetaNamespaceRequestUserMetaNsOp</code> enum value from a Javascript object name.\n@param {Object} data The plain JavaScript object containing the name of the enum value.\n@return {module:model/UpdateUserMetaNamespaceRequestUserMetaNsOp} The enum <code>UpdateUserMetaNamespaceRequestUserMetaNsOp</code> value.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "object"
              }
            ],
            "returns": {
              "description": "The enum <code>UpdateUserMetaNamespaceRequestUserMetaNsOp</code> value.",
              "type": {
                "name": "module:model/UpdateUserMetaNamespaceRequestUserMetaNsOp"
              }
            },
            "description": "Returns a <code>UpdateUserMetaNamespaceRequestUserMetaNsOp</code> enum value from a Javascript object name."
          }
        ]
      }
    ],
    "core/http/gen/model/UpdateUserMetaRequestUserMetaOp.js": [
      {
        "description": "Enum class UpdateUserMetaRequestUserMetaOp.\n@enum {}\n@readonly",
        "displayName": "UpdateUserMetaRequestUserMetaOp",
        "methods": [
          {
            "name": "constructFromObject",
            "docblock": "Returns a <code>UpdateUserMetaRequestUserMetaOp</code> enum value from a Javascript object name.\n@param {Object} data The plain JavaScript object containing the name of the enum value.\n@return {module:model/UpdateUserMetaRequestUserMetaOp} The enum <code>UpdateUserMetaRequestUserMetaOp</code> value.",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "object"
              }
            ],
            "returns": {
              "description": "The enum <code>UpdateUserMetaRequestUserMetaOp</code> value.",
              "type": {
                "name": "module:model/UpdateUserMetaRequestUserMetaOp"
              }
            },
            "description": "Returns a <code>UpdateUserMetaRequestUserMetaOp</code> enum value from a Javascript object name."
          }
        ]
      }
    ],
    "core/lang/Logger.es6": [
      {
        "description": "",
        "displayName": "Logger",
        "methods": [
          {
            "name": "log",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "message",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "error",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "message",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "debug",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "message",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const Logger = require('pydio/lang/logger')"
      }
    ],
    "core/lang/Observable.es6": [
      {
        "description": "",
        "displayName": "Observable",
        "methods": [
          {
            "name": "_objectEventSetup",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event_name",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "observe",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event_name",
                "type": null
              },
              {
                "name": "observer",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "stopObserving",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event_name",
                "type": null
              },
              {
                "name": "observer",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "observeOnce",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event_name",
                "type": null
              },
              {
                "name": "outer_observer",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "notify",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event_name",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "hasObservers",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "require": "const Observable = require('pydio/lang/observable')"
      }
    ],
    "core/model/Action.es6": [
      {
        "description": "A \"Command\" object, encapsulating its callbacks, display attributes, etc.",
        "displayName": "Action",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Standard constructor",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Standard constructor"
          },
          {
            "name": "_evalScripts",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "data",
                "type": null
              },
              {
                "name": "localScopeMetadata",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "setManager",
            "docblock": "Sets the manager for this action\n@param manager ActionsManager",
            "modifiers": [],
            "params": [
              {
                "name": "manager",
                "description": "ActionsManager",
                "type": null
              }
            ],
            "returns": null,
            "description": "Sets the manager for this action"
          },
          {
            "name": "apply",
            "docblock": "Execute the action code",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Execute the action code"
          },
          {
            "name": "fireContextChange",
            "docblock": "Updates the action status on context change\n@param dataModel PydioDataModel\n@param usersEnabled boolean\n@param crtUser string\n@returns void",
            "modifiers": [],
            "params": [
              {
                "name": "dataModel",
                "description": "PydioDataModel",
                "type": null
              },
              {
                "name": "usersEnabled",
                "description": "boolean",
                "type": null
              },
              {
                "name": "crtUser",
                "description": "string",
                "type": null
              }
            ],
            "returns": {
              "description": "void",
              "type": null
            },
            "description": "Updates the action status on context change"
          },
          {
            "name": "fireSelectionChange",
            "docblock": "Upates the action status on selection change",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Upates the action status on selection change"
          },
          {
            "name": "getMenuData",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "createFromXML",
            "docblock": "Parses an XML fragment to configure this action\n@param xmlNode Node XML Fragment describing the action",
            "modifiers": [],
            "params": [
              {
                "name": "xmlNode",
                "description": "Node XML Fragment describing the action",
                "type": null
              }
            ],
            "returns": null,
            "description": "Parses an XML fragment to configure this action"
          },
          {
            "name": "buildSubmenuStaticItems",
            "docblock": "Creates the submenu items",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Creates the submenu items"
          },
          {
            "name": "prepareSubmenuDynamicBuilder",
            "docblock": "Caches some data for dynamically built menus",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Caches some data for dynamically built menus"
          },
          {
            "name": "setIconClassName",
            "docblock": "Refresh icon image source\n@param iconClass String Optional class to replace image",
            "modifiers": [],
            "params": [
              {
                "name": "iconClass",
                "description": "String Optional class to replace image",
                "type": null
              }
            ],
            "returns": null,
            "description": "Refresh icon image source"
          },
          {
            "name": "setLabel",
            "docblock": "Refresh the action label\n@param newLabel String the new label\n@param newTitle String the new tooltip",
            "modifiers": [],
            "params": [
              {
                "name": "newLabel",
                "description": "String the new label",
                "type": null
              },
              {
                "name": "newTitle",
                "description": "String the new tooltip",
                "type": null
              }
            ],
            "returns": null,
            "description": "Refresh the action label"
          },
          {
            "name": "refreshInstances",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "refreshFromI18NHash",
            "docblock": "Grab its label from the i18n",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Grab its label from the i18n"
          },
          {
            "name": "toInfoPanel",
            "docblock": "Return data necessary to build InfoPanel\n@returns Object",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "Object",
              "type": null
            },
            "description": "Return data necessary to build InfoPanel"
          },
          {
            "name": "toContextMenu",
            "docblock": "Return necessary data to build contextual menu\n@returns Object",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "Object",
              "type": null
            },
            "description": "Return necessary data to build contextual menu"
          },
          {
            "name": "hideForContext",
            "docblock": "Changes show/hide state",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Changes show/hide state"
          },
          {
            "name": "showForContext",
            "docblock": "Changes show/hide state",
            "modifiers": [],
            "params": [
              {
                "name": "dataModel"
              }
            ],
            "returns": null,
            "description": "Changes show/hide state"
          },
          {
            "name": "hide",
            "docblock": "Changes show/hide state\nNotifies \"hide\" Event",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Changes show/hide state\nNotifies \"hide\" Event"
          },
          {
            "name": "show",
            "docblock": "Changes show/hide state\nNotifies \"show\" Event",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Changes show/hide state\nNotifies \"show\" Event"
          },
          {
            "name": "disable",
            "docblock": "Changes enable/disable state\nNotifies \"disable\" Event",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Changes enable/disable state\nNotifies \"disable\" Event"
          },
          {
            "name": "enable",
            "docblock": "Changes enable/disable state\nNotifies \"enable\" Event",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Changes enable/disable state\nNotifies \"enable\" Event"
          },
          {
            "name": "remove",
            "docblock": "To be called when removing",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "To be called when removing"
          },
          {
            "name": "getKeyedText",
            "docblock": "Create a text label with access-key underlined.\n@param displayString String the label\n@param hasAccessKey Boolean whether there is an accessKey or not\n@param accessKey String The key to underline\n@returns String",
            "modifiers": [],
            "params": [
              {
                "name": "displayString",
                "description": "String the label",
                "type": null
              },
              {
                "name": "hasAccessKey",
                "description": "Boolean whether there is an accessKey or not",
                "type": null
              },
              {
                "name": "accessKey",
                "description": "String The key to underline",
                "type": null
              }
            ],
            "returns": {
              "description": "String",
              "type": null
            },
            "description": "Create a text label with access-key underlined."
          },
          {
            "name": "attributesToObject",
            "docblock": "Utilitary function to transform XML Node attributes into Object mapping keys.\n@param object Object The target object\n@param node Node The source node",
            "modifiers": [],
            "params": [
              {
                "name": "object",
                "description": "Object The target object",
                "type": null
              },
              {
                "name": "node",
                "description": "Node The source node",
                "type": null
              }
            ],
            "returns": null,
            "description": "Utilitary function to transform XML Node attributes into Object mapping keys."
          }
        ],
        "require": "const Action = require('pydio/model/action')"
      }
    ],
    "core/model/AjxpNode.es6": [
      {
        "description": "",
        "displayName": "AjxpNode",
        "methods": [
          {
            "name": "constructor",
            "docblock": "@param path String\n@param isLeaf Boolean\n@param label String\n@param icon String\n@param iNodeProvider IAjxpNodeProvider",
            "modifiers": [],
            "params": [
              {
                "name": "path",
                "description": "String",
                "type": null
              },
              {
                "name": "isLeaf",
                "description": "Boolean",
                "type": null
              },
              {
                "name": "label",
                "description": "String",
                "type": null
              },
              {
                "name": "icon",
                "description": "String",
                "type": null
              },
              {
                "name": "iNodeProvider",
                "description": "IAjxpNodeProvider",
                "type": null
              }
            ],
            "returns": null,
            "description": null
          },
          {
            "name": "isLoaded",
            "docblock": "The node is loaded or not\n@returns Boolean",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "Boolean",
              "type": null
            },
            "description": "The node is loaded or not"
          },
          {
            "name": "isLoading",
            "docblock": "The node is currently loading\n@returns Boolean",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "Boolean",
              "type": null
            },
            "description": "The node is currently loading"
          },
          {
            "name": "setLoaded",
            "docblock": "Changes loaded status\n@param bool Boolean",
            "modifiers": [],
            "params": [
              {
                "name": "bool",
                "description": "Boolean",
                "type": null
              }
            ],
            "returns": null,
            "description": "Changes loaded status"
          },
          {
            "name": "setLoading",
            "docblock": "Manually change loading status\n@param bool",
            "modifiers": [],
            "params": [
              {
                "name": "bool",
                "description": null,
                "type": null
              }
            ],
            "returns": null,
            "description": "Manually change loading status"
          },
          {
            "name": "updateProvider",
            "docblock": "Update node provider\n@param iAjxpNodeProvider",
            "modifiers": [],
            "params": [
              {
                "name": "iAjxpNodeProvider",
                "description": null,
                "type": null
              }
            ],
            "returns": null,
            "description": "Update node provider"
          },
          {
            "name": "load",
            "docblock": "Loads the node using its own provider or the one passed\n@param iAjxpNodeProvider IAjxpNodeProvider Optionnal\n@param additionalParameters Object of optional parameters",
            "modifiers": [],
            "params": [
              {
                "name": "iAjxpNodeProvider",
                "description": "IAjxpNodeProvider Optionnal",
                "type": null
              },
              {
                "name": "additionalParameters",
                "description": "Object of optional parameters",
                "type": null
              }
            ],
            "returns": null,
            "description": "Loads the node using its own provider or the one passed"
          },
          {
            "name": "reload",
            "docblock": "Remove children and reload node\n@param iAjxpNodeProvider IAjxpNodeProvider Optionnal",
            "modifiers": [],
            "params": [
              {
                "name": "iAjxpNodeProvider",
                "description": "IAjxpNodeProvider Optionnal",
                "type": null
              },
              {
                "name": "silentClear"
              }
            ],
            "returns": null,
            "description": "Remove children and reload node"
          },
          {
            "name": "clear",
            "docblock": "Unload child and notify \"force_clear\"",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Unload child and notify \"force_clear\""
          },
          {
            "name": "setRoot",
            "docblock": "Sets this AjxpNode as being the root parent",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Sets this AjxpNode as being the root parent"
          },
          {
            "name": "setChildren",
            "docblock": "Set the node children as a bunch\n@param ajxpNodes AjxpNodes[]",
            "modifiers": [],
            "params": [
              {
                "name": "ajxpNodes",
                "description": "AjxpNodes[]",
                "type": null
              }
            ],
            "returns": null,
            "description": "Set the node children as a bunch"
          },
          {
            "name": "getChildren",
            "docblock": "Get all children as a bunch\n@returns AjxpNode[]",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "AjxpNode[]",
              "type": null
            },
            "description": "Get all children as a bunch"
          },
          {
            "name": "getFirstChildIfExists",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "isMoreRecentThan",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "otherNode",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "addChild",
            "docblock": "Adds a child to children\n@param ajxpNode AjxpNode The child",
            "modifiers": [],
            "params": [
              {
                "name": "ajxpNode",
                "description": "AjxpNode The child",
                "type": null
              }
            ],
            "returns": null,
            "description": "Adds a child to children"
          },
          {
            "name": "removeChild",
            "docblock": "Removes the child from the children\n@param ajxpNode AjxpNode",
            "modifiers": [],
            "params": [
              {
                "name": "ajxpNode",
                "description": "AjxpNode",
                "type": null
              }
            ],
            "returns": null,
            "description": "Removes the child from the children"
          },
          {
            "name": "replaceMetadata",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "newMeta",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "replaceBy",
            "docblock": "Replaces the current node by a new one. Copy all properties deeply\n@param ajxpNode AjxpNode\n@param metaMerge",
            "modifiers": [],
            "params": [
              {
                "name": "ajxpNode",
                "description": "AjxpNode",
                "type": null
              },
              {
                "name": "metaMerge",
                "description": null,
                "type": null
              }
            ],
            "returns": null,
            "description": "Replaces the current node by a new one. Copy all properties deeply"
          },
          {
            "name": "findChildByPath",
            "docblock": "Finds a child node by its path\n@param path String\n@returns AjxpNode",
            "modifiers": [],
            "params": [
              {
                "name": "path",
                "description": "String",
                "type": null
              }
            ],
            "returns": {
              "description": "AjxpNode",
              "type": null
            },
            "description": "Finds a child node by its path"
          },
          {
            "name": "setMetadata",
            "docblock": "Sets the metadata as a bunch\n@param data Map A Map",
            "modifiers": [],
            "params": [
              {
                "name": "data",
                "description": "Map A Map",
                "type": null
              }
            ],
            "returns": null,
            "description": "Sets the metadata as a bunch"
          },
          {
            "name": "getMetadata",
            "docblock": "Gets the metadat\n@returns Map",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "Map",
              "type": null
            },
            "description": "Gets the metadat"
          },
          {
            "name": "isLeaf",
            "docblock": "Is this node a leaf\n@returns Boolean",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "Boolean",
              "type": null
            },
            "description": "Is this node a leaf"
          },
          {
            "name": "isBrowsable",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "getPath",
            "docblock": "@returns String",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "String",
              "type": null
            },
            "description": null
          },
          {
            "name": "getLabel",
            "docblock": "@returns String",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "String",
              "type": null
            },
            "description": null
          },
          {
            "name": "setLabel",
            "docblock": "@param l string",
            "modifiers": [],
            "params": [
              {
                "name": "l",
                "description": "string",
                "type": null
              }
            ],
            "returns": null,
            "description": null
          },
          {
            "name": "getIcon",
            "docblock": "@returns String",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "String",
              "type": null
            },
            "description": null
          },
          {
            "name": "isRecycle",
            "docblock": "@returns Boolean",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "Boolean",
              "type": null
            },
            "description": null
          },
          {
            "name": "getSvgSource",
            "docblock": "@returns String",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "String",
              "type": null
            },
            "description": null
          },
          {
            "name": "hasAjxpMimeInBranch",
            "docblock": "Search the mime type in the parent branch\n@param ajxpMime String\n@returns Boolean",
            "modifiers": [],
            "params": [
              {
                "name": "ajxpMime",
                "description": "String",
                "type": null
              }
            ],
            "returns": {
              "description": "Boolean",
              "type": null
            },
            "description": "Search the mime type in the parent branch"
          },
          {
            "name": "hasMetadataInBranch",
            "docblock": "Search the mime type in the parent branch\n@returns Boolean\n@param metadataKey\n@param metadataValue",
            "modifiers": [],
            "params": [
              {
                "name": "metadataKey",
                "description": null,
                "type": null
              },
              {
                "name": "metadataValue",
                "description": null,
                "type": null
              }
            ],
            "returns": {
              "description": "Boolean",
              "type": null
            },
            "description": "Search the mime type in the parent branch"
          },
          {
            "name": "setParent",
            "docblock": "Sets a reference to the parent node\n@param parentNode AjxpNode",
            "modifiers": [],
            "params": [
              {
                "name": "parentNode",
                "description": "AjxpNode",
                "type": null
              }
            ],
            "returns": null,
            "description": "Sets a reference to the parent node"
          },
          {
            "name": "getParent",
            "docblock": "Gets the parent Node\n@returns AjxpNode",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "AjxpNode",
              "type": null
            },
            "description": "Gets the parent Node"
          },
          {
            "name": "findInArbo",
            "docblock": "Finds this node by path if it already exists in arborescence\n@param rootNode AjxpNode\n@param fakeNodes AjxpNode[]\n@returns AjxpNode|undefined",
            "modifiers": [],
            "params": [
              {
                "name": "rootNode",
                "description": "AjxpNode",
                "type": null
              },
              {
                "name": "fakeNodes",
                "description": "AjxpNode[]",
                "type": null
              }
            ],
            "returns": {
              "description": "AjxpNode|undefined",
              "type": null
            },
            "description": "Finds this node by path if it already exists in arborescence"
          },
          {
            "name": "isRoot",
            "docblock": "@returns Boolean",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "Boolean",
              "type": null
            },
            "description": null
          },
          {
            "name": "isParentOf",
            "docblock": "Check if it's the parent of the given node\n@param node AjxpNode\n@returns Boolean",
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "description": "AjxpNode",
                "type": null
              }
            ],
            "returns": {
              "description": "Boolean",
              "type": null
            },
            "description": "Check if it's the parent of the given node"
          },
          {
            "name": "isChildOf",
            "docblock": "Check if it's a child of the given node\n@param node AjxpNode\n@returns Boolean",
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "description": "AjxpNode",
                "type": null
              }
            ],
            "returns": {
              "description": "Boolean",
              "type": null
            },
            "description": "Check if it's a child of the given node"
          },
          {
            "name": "getAjxpMime",
            "docblock": "Gets the current's node mime type, either by ajxp_mime or by extension.\n@returns String",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "String",
              "type": null
            },
            "description": "Gets the current's node mime type, either by ajxp_mime or by extension."
          },
          {
            "name": "buildRandomSeed",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "ajxpNode",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const AjxpNode = require('pydio/model/node')"
      }
    ],
    "core/model/CellModel.es6": [
      {
        "description": "",
        "displayName": "CellModel",
        "methods": [
          {
            "name": "constructor",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "editMode",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "isDirty",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "isEditable",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "getRootNodes",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "notifyDirty",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "revertChanges",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "getNodeLabelInContext",
            "docblock": "@param node {TreeNode}\n@return string",
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "description": "{TreeNode}",
                "type": null
              }
            ],
            "returns": {
              "description": "string",
              "type": null
            },
            "description": null
          },
          {
            "name": "getAclsSubjects",
            "docblock": "@return {string}",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": null,
              "type": {
                "name": "string"
              }
            },
            "description": null
          },
          {
            "name": "getAcls",
            "docblock": "@return {Object.<String, module:model/RestCellAcl>}",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": null,
              "type": {
                "name": "Object"
              }
            },
            "description": null
          },
          {
            "name": "addUser",
            "docblock": "@param idmObject IdmUser|IdmRole",
            "modifiers": [],
            "params": [
              {
                "name": "idmObject",
                "description": "IdmUser|IdmRole",
                "type": null
              }
            ],
            "returns": null,
            "description": null
          },
          {
            "name": "removeUser",
            "docblock": "@param roleId string",
            "modifiers": [],
            "params": [
              {
                "name": "roleId",
                "description": "string",
                "type": null
              }
            ],
            "returns": null,
            "description": null
          },
          {
            "name": "updateUserRight",
            "docblock": "@param roleId string\n@param right string\n@param value bool",
            "modifiers": [],
            "params": [
              {
                "name": "roleId",
                "description": "string",
                "type": null
              },
              {
                "name": "right",
                "description": "string",
                "type": null
              },
              {
                "name": "value",
                "description": "bool",
                "type": null
              }
            ],
            "returns": null,
            "description": null
          },
          {
            "name": "addRootNode",
            "docblock": "@param node Node\n@param repositoryId String",
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "description": "Node",
                "type": null
              },
              {
                "name": "repositoryId",
                "description": "String",
                "type": null
              }
            ],
            "returns": null,
            "description": null
          },
          {
            "name": "removeRootNode",
            "docblock": "@param uuid string",
            "modifiers": [],
            "params": [
              {
                "name": "uuid",
                "description": "string",
                "type": null
              }
            ],
            "returns": null,
            "description": null
          },
          {
            "name": "hasRootNode",
            "docblock": "@param nodeId\n@return bool",
            "modifiers": [],
            "params": [
              {
                "name": "nodeId",
                "description": null,
                "type": null
              }
            ],
            "returns": {
              "description": "bool",
              "type": null
            },
            "description": null
          },
          {
            "name": "hasDirtyRootNodes",
            "docblock": "Check if there are differences between current root nodes and original ones\n@return {boolean}",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": null,
              "type": {
                "name": "boolean"
              }
            },
            "description": "Check if there are differences between current root nodes and original ones"
          },
          {
            "name": "setLabel",
            "docblock": "@param roomLabel",
            "modifiers": [],
            "params": [
              {
                "name": "roomLabel",
                "description": null,
                "type": null
              }
            ],
            "returns": null,
            "description": null
          },
          {
            "name": "getLabel",
            "docblock": "@return {String}",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": null,
              "type": {
                "name": "String"
              }
            },
            "description": null
          },
          {
            "name": "getDescription",
            "docblock": "@return {String}",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": null,
              "type": {
                "name": "String"
              }
            },
            "description": null
          },
          {
            "name": "getUuid",
            "docblock": "@return {String}",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": null,
              "type": {
                "name": "String"
              }
            },
            "description": null
          },
          {
            "name": "setDescription",
            "docblock": "@param description",
            "modifiers": [],
            "params": [
              {
                "name": "description",
                "description": null,
                "type": null
              }
            ],
            "returns": null,
            "description": null
          },
          {
            "name": "clone",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "room",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "save",
            "docblock": "@return {Promise}",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": null,
              "type": {
                "name": "Promise"
              }
            },
            "description": null
          },
          {
            "name": "load",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "cellId",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "deleteCell",
            "docblock": "@param confirmMessage String\n@return {Promise}",
            "modifiers": [],
            "params": [
              {
                "name": "confirmMessage",
                "description": "String",
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "Promise"
              }
            },
            "description": null
          }
        ]
      }
    ],
    "core/model/ContextMenu.es6": [
      {
        "description": "",
        "displayName": "ContextMenuModel",
        "methods": [
          {
            "name": "super",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "getInstance",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "openAtPosition",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "clientX",
                "type": null
              },
              {
                "name": "clientY",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "openNodeAtPosition",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              },
              {
                "name": "clientX",
                "type": null
              },
              {
                "name": "clientY",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getNode",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "getPosition",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "close",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ],
    "core/model/Controller.es6": [
      {
        "description": "Singleton class that manages all actions. Can be called directly using pydio.getController().",
        "displayName": "Controller",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Standard constructor\n@param pydioObject Pydio\n@param dataModelElementId",
            "modifiers": [],
            "params": [
              {
                "name": "pydioObject",
                "description": "Pydio",
                "type": null
              },
              {
                "name": "dataModelElementId",
                "description": null,
                "type": null
              }
            ],
            "returns": null,
            "description": "Standard constructor"
          },
          {
            "name": "getPydio",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "publishActionEvent",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "eventName",
                "type": null
              },
              {
                "name": "data",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "_connectDataModel",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "updateGuiActions",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "actions",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "deleteFromGuiActions",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "actionName",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "refreshGuiActionsI18n",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "getDataModel",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "destroy",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "getMessage",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "messageId",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "setUser",
            "docblock": "Stores the currently logged user object\n@param oUser User User instance",
            "modifiers": [],
            "params": [
              {
                "name": "oUser",
                "description": "User User instance",
                "type": null
              }
            ],
            "returns": null,
            "description": "Stores the currently logged user object"
          },
          {
            "name": "getContextActions",
            "docblock": "Filter the actions given the srcElement passed as arguments.\n@param actionsSelectorAtt String An identifier among selectionContext, genericContext, a webfx object id\n@param ignoreGroups Array a list of groups to ignore\n@returns Array",
            "modifiers": [],
            "params": [
              {
                "name": "actionsSelectorAtt",
                "description": "String An identifier among selectionContext, genericContext, a webfx object id",
                "type": null
              },
              {
                "name": "ignoreGroups",
                "description": "Array a list of groups to ignore",
                "type": null
              },
              {
                "name": "onlyGroups"
              }
            ],
            "returns": {
              "description": "Array",
              "type": null
            },
            "description": "Filter the actions given the srcElement passed as arguments."
          },
          {
            "name": "getToolbarsActions",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "toolbarsList",
                "type": null
              },
              {
                "name": "groupOtherList",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getActionsForAjxpWidget",
            "docblock": "Generic method to get actions for a given component part.\n@param ajxpClassName String \n@param widgetId String\n@returns []",
            "modifiers": [],
            "params": [
              {
                "name": "ajxpClassName",
                "description": "String",
                "type": null
              },
              {
                "name": "widgetId",
                "description": "String",
                "type": null
              }
            ],
            "returns": {
              "description": "[]",
              "type": null
            },
            "description": "Generic method to get actions for a given component part."
          },
          {
            "name": "fireDefaultAction",
            "docblock": "Finds a default action and fires it.\n@param defaultName String (\"file\", \"dir\", \"dragndrop\", \"ctrldragndrop\")",
            "modifiers": [],
            "params": [
              {
                "name": "defaultName",
                "description": "String (\"file\", \"dir\", \"dragndrop\", \"ctrldragndrop\")",
                "type": null
              }
            ],
            "returns": null,
            "description": "Finds a default action and fires it."
          },
          {
            "name": "fireAction",
            "docblock": "Fire an action based on its name\n@param actionName String The name of the action",
            "modifiers": [],
            "params": [
              {
                "name": "actionName",
                "description": "String The name of the action",
                "type": null
              }
            ],
            "returns": null,
            "description": "Fire an action based on its name"
          },
          {
            "name": "registerKey",
            "docblock": "Registers an accesskey for a given action. \n@param key String The access key\n@param actionName String The name of the action\n@param optionnalCommand String An optionnal argument \nthat will be passed to the action when fired.",
            "modifiers": [],
            "params": [
              {
                "name": "key",
                "description": "String The access key",
                "type": null
              },
              {
                "name": "actionName",
                "description": "String The name of the action",
                "type": null
              },
              {
                "name": "optionnalCommand",
                "description": "String An optionnal argument \nthat will be passed to the action when fired.",
                "type": null
              }
            ],
            "returns": null,
            "description": "Registers an accesskey for a given action."
          },
          {
            "name": "clearRegisteredKeys",
            "docblock": "Remove all registered keys.",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Remove all registered keys."
          },
          {
            "name": "fireActionByKey",
            "docblock": "Triggers an action by its access key.\n@param keyName String A key name",
            "modifiers": [],
            "params": [
              {
                "name": "keyName",
                "description": "String A key name",
                "type": null
              }
            ],
            "returns": null,
            "description": "Triggers an action by its access key."
          },
          {
            "name": "getDefaultAction",
            "docblock": "Get the action defined as default for a given default string\n@param defaultName String\n@returns Action",
            "modifiers": [],
            "params": [
              {
                "name": "defaultName",
                "description": "String",
                "type": null
              }
            ],
            "returns": {
              "description": "Action",
              "type": null
            },
            "description": "Get the action defined as default for a given default string"
          },
          {
            "name": "fireSelectionChange",
            "docblock": "Spreads a selection change to all actions and to registered components",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Spreads a selection change to all actions and to registered components"
          },
          {
            "name": "fireContextChange",
            "docblock": "Spreads a context change to all actions and to registered components \nby triggering actions_refreshed event.",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Spreads a context change to all actions and to registered components \nby triggering actions_refreshed event."
          },
          {
            "name": "notify",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "eventName",
                "type": null
              },
              {
                "name": "memo",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "removeActions",
            "docblock": "Remove all actions",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Remove all actions"
          },
          {
            "name": "loadActionsFromRegistry",
            "docblock": "Create actions from XML Registry\n@param registry DOMDocument",
            "modifiers": [],
            "params": [
              {
                "name": "registry",
                "description": "DOMDocument",
                "type": null
              }
            ],
            "returns": null,
            "description": "Create actions from XML Registry"
          },
          {
            "name": "registerAction",
            "docblock": "Registers an action to this manager (default, accesskey).\n@param action Action",
            "modifiers": [],
            "params": [
              {
                "name": "action",
                "description": "Action",
                "type": null
              }
            ],
            "returns": null,
            "description": "Registers an action to this manager (default, accesskey)."
          },
          {
            "name": "parseActions",
            "docblock": "Parse an XML action node and registers the action\n@param documentElement DOMNode The node to parse",
            "modifiers": [],
            "params": [
              {
                "name": "documentElement",
                "description": "DOMNode The node to parse",
                "type": null
              }
            ],
            "returns": null,
            "description": "Parse an XML action node and registers the action"
          },
          {
            "name": "getActionByName",
            "docblock": "Find an action by its name\n@param actionName String\n@returns Action",
            "modifiers": [],
            "params": [
              {
                "name": "actionName",
                "description": "String",
                "type": null
              }
            ],
            "returns": {
              "description": "Action",
              "type": null
            },
            "description": "Find an action by its name"
          },
          {
            "name": "_sortToolbarsActions",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "toolbars",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const Controller = require('pydio/model/controller')"
      }
    ],
    "core/model/EmptyNodeProvider.es6": [
      {
        "description": "",
        "displayName": "EmptyNodeProvider",
        "methods": [
          {
            "name": "constructor",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "initProvider",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "properties",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "loadNode",
            "docblock": "@param node AjxpNode\n@param nodeCallback Function\n@param childCallback Function",
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "description": "AjxpNode",
                "type": null
              },
              {
                "name": "nodeCallback",
                "description": "Function",
                "type": null
              },
              {
                "name": "childCallback",
                "description": "Function",
                "type": null
              }
            ],
            "returns": null,
            "description": null
          },
          {
            "name": "loadLeafNodeSync",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              },
              {
                "name": "callback",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const EmptyNodeProvider = require('pydio/model/empty-node-provider')"
      }
    ],
    "core/model/IdmObjectHelper.es6": [
      {
        "description": "",
        "displayName": "IdmObjectHelper",
        "methods": [
          {
            "name": "extractLabel",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "pydio",
                "type": null
              },
              {
                "name": "acl",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "extractLabelFromIdmObject",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "idmObject",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "core/model/MetaNodeProvider.es6": [
      {
        "description": "Implementation of the IAjxpNodeProvider interface based on a remote server access.\nDefault for all repositories.",
        "displayName": "MetaNodeProvider",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructor",
            "modifiers": [],
            "params": [
              {
                "name": "properties"
              }
            ],
            "returns": null,
            "description": "Constructor"
          },
          {
            "name": "initProvider",
            "docblock": "Initialize properties\n@param properties Object",
            "modifiers": [],
            "params": [
              {
                "name": "properties",
                "description": "Object",
                "type": null
              }
            ],
            "returns": null,
            "description": "Initialize properties"
          },
          {
            "name": "loadNode",
            "docblock": "Load a node\n@param node AjxpNode\n@param nodeCallback Function On node loaded\n@param childCallback Function On child added\n@param recursive\n@param depth\n@param optionalParameters",
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "description": "AjxpNode",
                "type": null
              },
              {
                "name": "nodeCallback",
                "description": "Function On node loaded",
                "type": null
              },
              {
                "name": "childCallback",
                "description": "Function On child added",
                "type": null
              },
              {
                "name": "recursive",
                "description": null,
                "type": null
              },
              {
                "name": "depth",
                "description": null,
                "type": null
              },
              {
                "name": "optionalParameters",
                "description": null,
                "type": null
              }
            ],
            "returns": null,
            "description": "Load a node"
          },
          {
            "name": "loadLeafNodeSync",
            "docblock": "Load a node\n@param node {AjxpNode}\n@param nodeCallback Function On node loaded\n@param aSync bool\n@param additionalParameters object\n@param errorCallback Function",
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "description": "{AjxpNode}",
                "type": null
              },
              {
                "name": "nodeCallback",
                "description": "Function On node loaded",
                "type": null
              },
              {
                "name": "aSync",
                "description": "bool",
                "type": null
              },
              {
                "name": "additionalParameters",
                "description": "object",
                "type": null
              },
              {
                "name": "errorCallback",
                "description": "Function",
                "type": null
              }
            ],
            "returns": null,
            "description": "Load a node"
          },
          {
            "name": "refreshNodeAndReplace",
            "docblock": "@param node {AjxpNode}\n@param onComplete Function\n@param onError Function",
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "description": "{AjxpNode}",
                "type": null
              },
              {
                "name": "onComplete",
                "description": "Function",
                "type": null
              },
              {
                "name": "onError",
                "description": "Function",
                "type": null
              }
            ],
            "returns": null,
            "description": null
          },
          {
            "name": "parseTreeNode",
            "docblock": "@return AjxpNode | null\n@param obj\n@param workspaceSlug string\n@param defaultSlug string",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "obj",
                "description": null,
                "type": null
              },
              {
                "name": "workspaceSlug",
                "description": "string",
                "type": null
              },
              {
                "name": "defaultSlug",
                "description": "string",
                "type": null
              }
            ],
            "returns": {
              "description": "AjxpNode | null",
              "type": null
            },
            "description": null
          },
          {
            "name": "overlays",
            "docblock": "Update metadata for specific overlays\n@param node AjxpNode",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "node",
                "description": "AjxpNode",
                "type": null
              }
            ],
            "returns": null,
            "description": "Update metadata for specific overlays"
          }
        ],
        "require": "const MetaNodeProvider = require('pydio/model/meta-node-provider')"
      }
    ],
    "core/model/PydioDataModel.es6": [
      {
        "description": "Full container of the data tree. Contains the SelectionModel as well.",
        "displayName": "PydioDataModel",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructor\n> Warning, events are now LOCAL by default",
            "modifiers": [],
            "params": [
              {
                "name": "localEvents"
              }
            ],
            "returns": null,
            "description": "Constructor\n> Warning, events are now LOCAL by default"
          },
          {
            "name": "RemoteDataModelFactory",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "providerProperties",
                "type": null
              },
              {
                "name": "rootLabel",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "setAjxpNodeProvider",
            "docblock": "Sets the data source that will feed the nodes with children.\n@param iAjxpNodeProvider IAjxpNodeProvider",
            "modifiers": [],
            "params": [
              {
                "name": "iAjxpNodeProvider",
                "description": "IAjxpNodeProvider",
                "type": null
              }
            ],
            "returns": null,
            "description": "Sets the data source that will feed the nodes with children."
          },
          {
            "name": "getAjxpNodeProvider",
            "docblock": "Return the current data source provider\n@return IAjxpNodeProvider",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "IAjxpNodeProvider",
              "type": null
            },
            "description": "Return the current data source provider"
          },
          {
            "name": "requireContextChange",
            "docblock": "Changes the current context node.\n@param ajxpNode AjxpNode Target node, either an existing one or a fake one containing the target part.\n@param forceReload Boolean If set to true, the node will be reloaded even if already loaded.",
            "modifiers": [],
            "params": [
              {
                "name": "ajxpNode",
                "description": "AjxpNode Target node, either an existing one or a fake one containing the target part.",
                "type": null
              },
              {
                "name": "forceReload",
                "description": "Boolean If set to true, the node will be reloaded even if already loaded.",
                "type": null
              }
            ],
            "returns": null,
            "description": "Changes the current context node."
          },
          {
            "name": "requireNodeReload",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "nodeOrPath",
                "type": null
              },
              {
                "name": "completeCallback",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "loadPathInfoSync",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "path",
                "type": null
              },
              {
                "name": "callback",
                "type": null
              },
              {
                "name": "additionalParameters",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "loadPathInfoAsync",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "path",
                "type": null
              },
              {
                "name": "callback",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "setRootNode",
            "docblock": "Sets the root of the data store\n@param ajxpRootNode AjxpNode The parent node",
            "modifiers": [],
            "params": [
              {
                "name": "ajxpRootNode",
                "description": "AjxpNode The parent node",
                "type": null
              }
            ],
            "returns": null,
            "description": "Sets the root of the data store"
          },
          {
            "name": "getRootNode",
            "docblock": "Gets the current root node\n@returns AjxpNode",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "AjxpNode",
              "type": null
            },
            "description": "Gets the current root node"
          },
          {
            "name": "setContextNode",
            "docblock": "Sets the current context node\n@param ajxpDataNode AjxpNode\n@param forceEvent Boolean If set to true, event will be triggered even if the current node is already the same.",
            "modifiers": [],
            "params": [
              {
                "name": "ajxpDataNode",
                "description": "AjxpNode",
                "type": null
              },
              {
                "name": "forceEvent",
                "description": "Boolean If set to true, event will be triggered even if the current node is already the same.",
                "type": null
              }
            ],
            "returns": null,
            "description": "Sets the current context node"
          },
          {
            "name": "contextNodeReplaced",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "newNode",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "publish",
            "docblock": "",
            "modifiers": [],
            "params": [
              {
                "name": "eventName",
                "type": null
              },
              {
                "name": "optionalData",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getContextNode",
            "docblock": "Get the current context node\n@returns AjxpNode",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "AjxpNode",
              "type": null
            },
            "description": "Get the current context node"
          },
          {
            "name": "multipleNodesReload",
            "docblock": "After a copy or move operation, many nodes may have to be reloaded\nThis function tries to reload them in the right order and if necessary.\n@param nodes AjxpNodes[] An array of nodes",
            "modifiers": [],
            "params": [
              {
                "name": "nodes",
                "description": "AjxpNodes[] An array of nodes",
                "type": null
              }
            ],
            "returns": null,
            "description": "After a copy or move operation, many nodes may have to be reloaded\nThis function tries to reload them in the right order and if necessary."
          },
          {
            "name": "queueNodeReload",
            "docblock": "Add a node to the queue of nodes to reload.\n@param node AjxpNode",
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "description": "AjxpNode",
                "type": null
              }
            ],
            "returns": null,
            "description": "Add a node to the queue of nodes to reload."
          },
          {
            "name": "nextNodeReloader",
            "docblock": "Queue processor for the nodes to reload",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Queue processor for the nodes to reload"
          },
          {
            "name": "addNode",
            "docblock": "Insert a node somewhere in the datamodel\n@param node AjxpNode\n@param setSelectedAfterAdd bool",
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "description": "AjxpNode",
                "type": null
              },
              {
                "name": "setSelectedAfterAdd",
                "description": "bool",
                "type": null
              }
            ],
            "returns": null,
            "description": "Insert a node somewhere in the datamodel"
          },
          {
            "name": "removeNodeByPath",
            "docblock": "Remove a node by path somewhere\n@param path string\n@param imTime integer|null",
            "modifiers": [],
            "params": [
              {
                "name": "path",
                "description": "string",
                "type": null
              },
              {
                "name": "imTime",
                "description": "integer|null",
                "type": null
              }
            ],
            "returns": null,
            "description": "Remove a node by path somewhere"
          },
          {
            "name": "updateNode",
            "docblock": "Update a node somewhere in the datamodel\n@param node AjxpNode\n@param setSelectedAfterUpdate bool",
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "description": "AjxpNode",
                "type": null
              },
              {
                "name": "setSelectedAfterUpdate",
                "description": "bool",
                "type": null
              }
            ],
            "returns": null,
            "description": "Update a node somewhere in the datamodel"
          },
          {
            "name": "setPendingSelection",
            "docblock": "Sets an array of nodes to be selected after the context is (re)loaded\n@param selection AjxpNode[]",
            "modifiers": [],
            "params": [
              {
                "name": "selection",
                "description": "AjxpNode[]",
                "type": null
              }
            ],
            "returns": null,
            "description": "Sets an array of nodes to be selected after the context is (re)loaded"
          },
          {
            "name": "getPendingSelection",
            "docblock": "Gets the array of nodes to be selected after the context is (re)loaded\n@returns AjxpNode[]",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "AjxpNode[]",
              "type": null
            },
            "description": "Gets the array of nodes to be selected after the context is (re)loaded"
          },
          {
            "name": "clearPendingSelection",
            "docblock": "Clears the nodes to be selected",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Clears the nodes to be selected"
          },
          {
            "name": "setSelectedNodes",
            "docblock": "Set an array of nodes as the current selection\n@param ajxpDataNodes AjxpNode[] The nodes to select\n@param source String The source of this selection action",
            "modifiers": [],
            "params": [
              {
                "name": "ajxpDataNodes",
                "description": "AjxpNode[] The nodes to select",
                "type": null
              },
              {
                "name": "source",
                "description": "String The source of this selection action",
                "type": null
              }
            ],
            "returns": null,
            "description": "Set an array of nodes as the current selection"
          },
          {
            "name": "getSelectedNodes",
            "docblock": "Gets the currently selected nodes\n@returns AjxpNode[]",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "AjxpNode[]",
              "type": null
            },
            "description": "Gets the currently selected nodes"
          },
          {
            "name": "getSelectionSource",
            "docblock": "Gets the source of the last selection action\n@returns String",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "String",
              "type": null
            },
            "description": "Gets the source of the last selection action"
          },
          {
            "name": "setSelectionSource",
            "docblock": "Manually sets the source of the selection\n@param object",
            "modifiers": [],
            "params": [
              {
                "name": "object",
                "description": null,
                "type": null
              }
            ],
            "returns": null,
            "description": "Manually sets the source of the selection"
          },
          {
            "name": "selectAll",
            "docblock": "Select all the children of the current context node",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Select all the children of the current context node"
          },
          {
            "name": "isEmpty",
            "docblock": "Whether the selection is empty\n@returns Boolean",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "Boolean",
              "type": null
            },
            "description": "Whether the selection is empty"
          },
          {
            "name": "hasReadOnly",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "selectionHasRootNode",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "isUnique",
            "docblock": "Whether the selection is unique\n@returns Boolean",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "Boolean",
              "type": null
            },
            "description": "Whether the selection is unique"
          },
          {
            "name": "hasFile",
            "docblock": "Whether the selection has a file selected.\nShould be hasLeaf\n@returns Boolean",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "Boolean",
              "type": null
            },
            "description": "Whether the selection has a file selected.\nShould be hasLeaf"
          },
          {
            "name": "hasDir",
            "docblock": "Whether the selection has a dir selected\n@returns Boolean",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "Boolean",
              "type": null
            },
            "description": "Whether the selection has a dir selected"
          },
          {
            "name": "isRecycle",
            "docblock": "Whether the current context is the recycle bin\n@returns Boolean",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "Boolean",
              "type": null
            },
            "description": "Whether the current context is the recycle bin"
          },
          {
            "name": "isMultiple",
            "docblock": "Whether the selection has more than one node selected\n@returns Boolean",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "Boolean",
              "type": null
            },
            "description": "Whether the selection has more than one node selected"
          },
          {
            "name": "hasMime",
            "docblock": "Whether the selection has a file with one of the mimes\n@param mimeTypes Array Array of mime types\n@returns Boolean",
            "modifiers": [],
            "params": [
              {
                "name": "mimeTypes",
                "description": "Array Array of mime types",
                "type": null
              }
            ],
            "returns": {
              "description": "Boolean",
              "type": null
            },
            "description": "Whether the selection has a file with one of the mimes"
          },
          {
            "name": "getFileNames",
            "docblock": "Get all selected filenames as an array.\n@param separator String Is a separator, will return a string joined\n@returns Array|String|bool",
            "modifiers": [],
            "params": [
              {
                "name": "separator",
                "description": "String Is a separator, will return a string joined",
                "type": null
              }
            ],
            "returns": {
              "description": "Array|String|bool",
              "type": null
            },
            "description": "Get all selected filenames as an array."
          },
          {
            "name": "getContextFileNames",
            "docblock": "Get all the filenames of the current context node children\n@param separator String If passed, will join the array as a string\n@return Array|String|bool",
            "modifiers": [],
            "params": [
              {
                "name": "separator",
                "description": "String If passed, will join the array as a string",
                "type": null
              }
            ],
            "returns": {
              "description": "Array|String|bool",
              "type": null
            },
            "description": "Get all the filenames of the current context node children"
          },
          {
            "name": "fileNameExists",
            "docblock": "Whether the context node has a child with this basename\n@param newFileName String The name to check\n@returns Boolean\n@param local\n@param contextNode",
            "modifiers": [],
            "params": [
              {
                "name": "newFileName",
                "description": "String The name to check",
                "type": null
              },
              {
                "name": "local",
                "description": null,
                "type": null
              },
              {
                "name": "contextNode",
                "description": null,
                "type": null
              }
            ],
            "returns": {
              "description": "Boolean",
              "type": null
            },
            "description": "Whether the context node has a child with this basename"
          },
          {
            "name": "getUniqueFileName",
            "docblock": "Gets the first name of the current selection\n@returns String",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "String",
              "type": null
            },
            "description": "Gets the first name of the current selection"
          },
          {
            "name": "getUniqueNode",
            "docblock": "Gets the first node of the selection, or Null\n@returns AjxpNode",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "AjxpNode",
              "type": null
            },
            "description": "Gets the first node of the selection, or Null"
          },
          {
            "name": "getNode",
            "docblock": "Gets a node from the current selection\n@param i Integer the node index\n@returns AjxpNode",
            "modifiers": [],
            "params": [
              {
                "name": "i",
                "description": "Integer the node index",
                "type": null
              }
            ],
            "returns": {
              "description": "AjxpNode",
              "type": null
            },
            "description": "Gets a node from the current selection"
          },
          {
            "name": "updateFormOrUrl",
            "docblock": "Will add the current selection nodes as serializable data to the element passed :\neither as hidden input elements if it's a form, or as query parameters if it's an url\n@param oFormElement HTMLForm The form\n@param sUrl String An url to complete\n@returns String",
            "modifiers": [],
            "params": [
              {
                "name": "oFormElement",
                "description": "HTMLForm The form",
                "type": null
              },
              {
                "name": "sUrl",
                "description": "String An url to complete",
                "type": null
              }
            ],
            "returns": {
              "description": "String",
              "type": null
            },
            "description": "Will add the current selection nodes as serializable data to the element passed :\neither as hidden input elements if it's a form, or as query parameters if it's an url"
          },
          {
            "name": "_addHiddenField",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "oFormElement",
                "type": null
              },
              {
                "name": "sFieldName",
                "type": null
              },
              {
                "name": "sFieldValue",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const PydioDataModel = require('pydio/model/data-model')"
      }
    ],
    "core/model/Registry.es6": [
      {
        "description": "",
        "displayName": "Registry",
        "methods": [
          {
            "name": "constructor",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "pydioObject",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "loadFromString",
            "docblock": "Parse XML String directly\n@param s",
            "modifiers": [],
            "params": [
              {
                "name": "s",
                "description": null,
                "type": null
              }
            ],
            "returns": null,
            "description": "Parse XML String directly"
          },
          {
            "name": "loadXML",
            "docblock": "",
            "modifiers": [],
            "params": [
              {
                "name": "documentElement",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "load",
            "docblock": "Load registry from server\n@param xPath\n@param completeFunc\n@param repositoryId",
            "modifiers": [],
            "params": [
              {
                "name": "xPath",
                "description": null,
                "type": null
              },
              {
                "name": "completeFunc",
                "description": null,
                "type": null
              },
              {
                "name": "repositoryId",
                "description": null,
                "type": null
              }
            ],
            "returns": null,
            "description": "Load registry from server"
          },
          {
            "name": "refreshXmlRegistryPart",
            "docblock": "Inserts a document fragment retrieved from server inside the full tree.\nThe node must contains the xPath attribute to locate it inside the registry.\n@param documentElement DOMNode",
            "modifiers": [],
            "params": [
              {
                "name": "documentElement",
                "description": "DOMNode",
                "type": null
              }
            ],
            "returns": null,
            "description": "Inserts a document fragment retrieved from server inside the full tree.\nThe node must contains the xPath attribute to locate it inside the registry."
          },
          {
            "name": "parseUser",
            "docblock": "Translate the XML answer to a new User object",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Translate the XML answer to a new User object"
          },
          {
            "name": "getXML",
            "docblock": "@returns {Element|*|null}",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": null,
              "type": {
                "name": "union",
                "value": [
                  "Element",
                  null,
                  null
                ]
              }
            },
            "description": null
          },
          {
            "name": "initExtension",
            "docblock": "Find Extension initialisation nodes (activeCondition, onInit, etc), parses\nthe XML and execute JS.\n@param xmlNode {Element} The extension node\n@param extensionDefinition Object Information already collected about this extension\n@returns Boolean",
            "modifiers": [],
            "params": [
              {
                "name": "xmlNode",
                "description": "{Element} The extension node",
                "type": null
              },
              {
                "name": "extensionDefinition",
                "description": "Object Information already collected about this extension",
                "type": null
              }
            ],
            "returns": {
              "description": "Boolean",
              "type": null
            },
            "description": "Find Extension initialisation nodes (activeCondition, onInit, etc), parses\nthe XML and execute JS."
          },
          {
            "name": "refreshExtensionsRegistry",
            "docblock": "Refresh the currently active extensions\nExtensions are editors and uploaders for the moment.",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Refresh the currently active extensions\nExtensions are editors and uploaders for the moment."
          },
          {
            "name": "getActiveExtensionByType",
            "docblock": "Find the currently active extensions by type\n@param extensionType String \"editor\" or \"uploader\"\n@returns {array}",
            "modifiers": [],
            "params": [
              {
                "name": "extensionType",
                "description": "String \"editor\" or \"uploader\"",
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "array"
              }
            },
            "description": "Find the currently active extensions by type"
          },
          {
            "name": "findEditorById",
            "docblock": "Find a given editor by its id\n@param editorId String\n@returns AbstractEditor",
            "modifiers": [],
            "params": [
              {
                "name": "editorId",
                "description": "String",
                "type": null
              }
            ],
            "returns": {
              "description": "AbstractEditor",
              "type": null
            },
            "description": "Find a given editor by its id"
          },
          {
            "name": "findEditorsForMime",
            "docblock": "Find Editors that can handle a given mime type\n@param mime String\n@returns AbstractEditor[]\n@param restrictToPreviewProviders",
            "modifiers": [],
            "params": [
              {
                "name": "mime",
                "description": "String",
                "type": null
              },
              {
                "name": "restrictToPreviewProviders",
                "description": null,
                "type": null
              }
            ],
            "returns": {
              "description": "AbstractEditor[]",
              "type": null
            },
            "description": "Find Editors that can handle a given mime type"
          },
          {
            "name": "loadEditorResources",
            "docblock": "Trigger the load method of the resourcesManager.\n@param resourcesManager ResourcesManager\n@param callback triggered after JS loaded",
            "modifiers": [],
            "params": [
              {
                "name": "resourcesManager",
                "description": "ResourcesManager",
                "type": null
              },
              {
                "name": "callback",
                "description": "triggered after JS loaded",
                "type": null
              }
            ],
            "returns": null,
            "description": "Trigger the load method of the resourcesManager."
          },
          {
            "name": "getPluginConfigs",
            "docblock": "@param pluginQuery\n@returns {Map}",
            "modifiers": [],
            "params": [
              {
                "name": "pluginQuery",
                "description": null,
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "Map"
              }
            },
            "description": null
          },
          {
            "name": "getDefaultImageFromParameters",
            "docblock": "@param pluginId\n@param paramName\n@returns {string}",
            "modifiers": [],
            "params": [
              {
                "name": "pluginId",
                "description": null,
                "type": null
              },
              {
                "name": "paramName",
                "description": null,
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "string"
              }
            },
            "description": null
          },
          {
            "name": "hasPluginOfType",
            "docblock": "@param type\n@param name\n@returns {bool}",
            "modifiers": [],
            "params": [
              {
                "name": "type",
                "description": null,
                "type": null
              },
              {
                "name": "name",
                "description": null,
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "bool"
              }
            },
            "description": null
          },
          {
            "name": "getFilesExtensions",
            "docblock": "@return {Map|Map<string, object>}",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": null,
              "type": {
                "name": "union",
                "value": [
                  "Map",
                  null
                ]
              }
            },
            "description": null
          }
        ],
        "require": "const Registry = require('pydio/model/registry')"
      }
    ],
    "core/model/RemoteNodeProvider.es6": [
      {
        "description": "Implementation of the IAjxpNodeProvider interface based on a remote server access.\nDefault for all repositories.",
        "displayName": "RemoteNodeProvider",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructor",
            "modifiers": [],
            "params": [
              {
                "name": "properties"
              }
            ],
            "returns": null,
            "description": "Constructor"
          },
          {
            "name": "initProvider",
            "docblock": "Initialize properties\n@param properties Object",
            "modifiers": [],
            "params": [
              {
                "name": "properties",
                "description": "Object",
                "type": null
              }
            ],
            "returns": null,
            "description": "Initialize properties"
          },
          {
            "name": "loadNode",
            "docblock": "Load a node\n@param node AjxpNode\n@param nodeCallback Function On node loaded\n@param childCallback Function On child added\n@param recursive\n@param depth\n@param optionalParameters",
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "description": "AjxpNode",
                "type": null
              },
              {
                "name": "nodeCallback",
                "description": "Function On node loaded",
                "type": null
              },
              {
                "name": "childCallback",
                "description": "Function On child added",
                "type": null
              },
              {
                "name": "recursive",
                "description": null,
                "type": null
              },
              {
                "name": "depth",
                "description": null,
                "type": null
              },
              {
                "name": "optionalParameters",
                "description": null,
                "type": null
              }
            ],
            "returns": null,
            "description": "Load a node"
          },
          {
            "name": "loadLeafNodeSync",
            "docblock": "Load a node\n@param node AjxpNode\n@param nodeCallback Function On node loaded\n@param aSync bool\n@param additionalParameters object",
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "description": "AjxpNode",
                "type": null
              },
              {
                "name": "nodeCallback",
                "description": "Function On node loaded",
                "type": null
              },
              {
                "name": "aSync",
                "description": "bool",
                "type": null
              },
              {
                "name": "additionalParameters",
                "description": "object",
                "type": null
              }
            ],
            "returns": null,
            "description": "Load a node"
          },
          {
            "name": "refreshNodeAndReplace",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              },
              {
                "name": "onComplete",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "parseNodes",
            "docblock": "Parse the answer and create AjxpNodes\n@param origNode AjxpNode\n@param transport Ajax.Response\n@param nodeCallback Function\n@param childCallback Function\n@param childrenOnly",
            "modifiers": [],
            "params": [
              {
                "name": "origNode",
                "description": "AjxpNode",
                "type": null
              },
              {
                "name": "transport",
                "description": "Ajax.Response",
                "type": null
              },
              {
                "name": "nodeCallback",
                "description": "Function",
                "type": null
              },
              {
                "name": "childCallback",
                "description": "Function",
                "type": null
              },
              {
                "name": "childrenOnly",
                "description": null,
                "type": null
              }
            ],
            "returns": null,
            "description": "Parse the answer and create AjxpNodes"
          },
          {
            "name": "parseAjxpNodesDiffs",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "xmlElement",
                "type": null
              },
              {
                "name": "targetDataModel",
                "type": null
              },
              {
                "name": "targetRepositoryId",
                "type": null
              },
              {
                "name": "setContextChildrenSelected",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "parseAjxpNode",
            "docblock": "Parses XML Node and create AjxpNode\n@param xmlNode XMLNode",
            "modifiers": [],
            "params": [
              {
                "name": "xmlNode",
                "description": "XMLNode",
                "type": null
              }
            ],
            "returns": null,
            "description": "Parses XML Node and create AjxpNode"
          }
        ],
        "require": "const RemoteNodeProvider = require('pydio/model/remote-node-provider')"
      }
    ],
    "core/model/Repository.es6": [
      {
        "description": "Container for a Repository.",
        "displayName": "Repository",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructor\n@param id String\n@param xmlDef XMLNode",
            "modifiers": [],
            "params": [
              {
                "name": "id",
                "description": "String",
                "type": null
              },
              {
                "name": "xmlDef",
                "description": "XMLNode",
                "type": null
              }
            ],
            "returns": null,
            "description": "Constructor"
          },
          {
            "name": "isInternal",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "driverName",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getId",
            "docblock": "@returns String",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "String",
              "type": null
            },
            "description": null
          },
          {
            "name": "getShareId",
            "docblock": "@returns String",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "String",
              "type": null
            },
            "description": null
          },
          {
            "name": "asCell",
            "docblock": "@return {Promise<CellModel>}",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": null,
              "type": {
                "name": "Promise"
              }
            },
            "description": null
          },
          {
            "name": "getLabel",
            "docblock": "@returns String",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "String",
              "type": null
            },
            "description": null
          },
          {
            "name": "setLabel",
            "docblock": "@param label String",
            "modifiers": [],
            "params": [
              {
                "name": "label",
                "description": "String",
                "type": null
              }
            ],
            "returns": null,
            "description": null
          },
          {
            "name": "getLettersBadge",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "getDescription",
            "docblock": "@return String",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "String",
              "type": null
            },
            "description": null
          },
          {
            "name": "getIcon",
            "docblock": "@returns String",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "String",
              "type": null
            },
            "description": null
          },
          {
            "name": "setIcon",
            "docblock": "@param icon String",
            "modifiers": [],
            "params": [
              {
                "name": "icon",
                "description": "String",
                "type": null
              }
            ],
            "returns": null,
            "description": null
          },
          {
            "name": "getOwner",
            "docblock": "@return String",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "String",
              "type": null
            },
            "description": null
          },
          {
            "name": "getAccessType",
            "docblock": "@returns String",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "String",
              "type": null
            },
            "description": null
          },
          {
            "name": "setAccessType",
            "docblock": "@param access String",
            "modifiers": [],
            "params": [
              {
                "name": "access",
                "description": "String",
                "type": null
              }
            ],
            "returns": null,
            "description": null
          },
          {
            "name": "loadResources",
            "docblock": "Triggers ResourcesManager.load",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Triggers ResourcesManager.load"
          },
          {
            "name": "getNodeProviderDef",
            "docblock": "@returns Object",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "Object",
              "type": null
            },
            "description": null
          },
          {
            "name": "setSlug",
            "docblock": "@param slug String",
            "modifiers": [],
            "params": [
              {
                "name": "slug",
                "description": "String",
                "type": null
              }
            ],
            "returns": null,
            "description": null
          },
          {
            "name": "getSlug",
            "docblock": "@returns String",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "String",
              "type": null
            },
            "description": null
          },
          {
            "name": "getOverlay",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "hasContentFilter",
            "docblock": "@returns {boolean}",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": null,
              "type": {
                "name": "boolean"
              }
            },
            "description": null
          },
          {
            "name": "hasUserScope",
            "docblock": "@returns {boolean}",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": null,
              "type": {
                "name": "boolean"
              }
            },
            "description": null
          },
          {
            "name": "getRepositoryType",
            "docblock": "@returns {string}",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": null,
              "type": {
                "name": "string"
              }
            },
            "description": null
          },
          {
            "name": "getAccessStatus",
            "docblock": "@returns {string}",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": null,
              "type": {
                "name": "string"
              }
            },
            "description": null
          },
          {
            "name": "setAccessStatus",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "status",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getLastConnection",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "loadFromXml",
            "docblock": "Parses XML Node\n@param repoNode XMLNode",
            "modifiers": [],
            "params": [
              {
                "name": "repoNode",
                "description": "XMLNode",
                "type": null
              }
            ],
            "returns": null,
            "description": "Parses XML Node"
          }
        ],
        "require": "const Repository = require('pydio/model/repository')"
      }
    ],
    "core/model/SettingsNodeProvider.es6": [
      {
        "description": "Implementation of the IAjxpNodeProvider interface based on a remote server access.\nDefault for all repositories.",
        "displayName": "SettingsNodeProvider",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructor",
            "modifiers": [],
            "params": [
              {
                "name": "properties"
              }
            ],
            "returns": null,
            "description": "Constructor"
          },
          {
            "name": "initProvider",
            "docblock": "Initialize properties\n@param properties Object",
            "modifiers": [],
            "params": [
              {
                "name": "properties",
                "description": "Object",
                "type": null
              }
            ],
            "returns": null,
            "description": "Initialize properties"
          },
          {
            "name": "loadNode",
            "docblock": "Load a node\n@param node AjxpNode\n@param nodeCallback Function On node loaded\n@param childCallback Function On child added\n@param recursive\n@param depth\n@param optionalParameters",
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "description": "AjxpNode",
                "type": null
              },
              {
                "name": "nodeCallback",
                "description": "Function On node loaded",
                "type": null
              },
              {
                "name": "childCallback",
                "description": "Function On child added",
                "type": null
              },
              {
                "name": "recursive",
                "description": null,
                "type": null
              },
              {
                "name": "depth",
                "description": null,
                "type": null
              },
              {
                "name": "optionalParameters",
                "description": null,
                "type": null
              }
            ],
            "returns": null,
            "description": "Load a node"
          },
          {
            "name": "loadLeafNodeSync",
            "docblock": "Load a node\n@param node AjxpNode\n@param nodeCallback Function On node loaded\n@param aSync bool\n@param additionalParameters object",
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "description": "AjxpNode",
                "type": null
              },
              {
                "name": "nodeCallback",
                "description": "Function On node loaded",
                "type": null
              },
              {
                "name": "aSync",
                "description": "bool",
                "type": null
              },
              {
                "name": "additionalParameters",
                "description": "object",
                "type": null
              }
            ],
            "returns": null,
            "description": "Load a node"
          },
          {
            "name": "refreshNodeAndReplace",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              },
              {
                "name": "onComplete",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "parseSection",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "parentPath",
                "type": null
              },
              {
                "name": "section",
                "type": null
              },
              {
                "name": "childCallback",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "loadMenu",
            "docblock": "@return {Promise}",
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": {
              "description": null,
              "type": {
                "name": "Promise"
              }
            },
            "description": null
          }
        ]
      }
    ],
    "core/model/User.es6": [
      {
        "description": "Abstraction of the currently logged user. Can be a \"fake\" user when users management\nsystem is disabled",
        "displayName": "User",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructor\n@param id String The user unique id\n@param xmlDef XMLNode Registry Fragment\n@param pydioObject Pydio",
            "modifiers": [],
            "params": [
              {
                "name": "id",
                "description": "String The user unique id",
                "type": null
              },
              {
                "name": "xmlDef",
                "description": "XMLNode Registry Fragment",
                "type": null
              },
              {
                "name": "pydioObject",
                "description": "Pydio",
                "type": null
              }
            ],
            "returns": null,
            "description": "Constructor"
          },
          {
            "name": "setActiveRepository",
            "docblock": "Set current repository\n@param id String",
            "modifiers": [],
            "params": [
              {
                "name": "id",
                "description": "String",
                "type": null
              }
            ],
            "returns": null,
            "description": "Set current repository"
          },
          {
            "name": "getActiveRepository",
            "docblock": "Gets the current active repository\n@returns String",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "String",
              "type": null
            },
            "description": "Gets the current active repository"
          },
          {
            "name": "canRead",
            "docblock": "Whether current repo is allowed to be read\n@returns Boolean",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "Boolean",
              "type": null
            },
            "description": "Whether current repo is allowed to be read"
          },
          {
            "name": "canWrite",
            "docblock": "Whether current repo is allowed to be written\n@param node {AjxpNode}\n@returns Boolean",
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "description": "{AjxpNode}",
                "type": null
              }
            ],
            "returns": {
              "description": "Boolean",
              "type": null
            },
            "description": "Whether current repo is allowed to be written"
          },
          {
            "name": "canCrossRepositoryCopy",
            "docblock": "Whether current repo is allowed to be cross-copied\n@returns Boolean",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "Boolean",
              "type": null
            },
            "description": "Whether current repo is allowed to be cross-copied"
          },
          {
            "name": "getPreference",
            "docblock": "Get a user preference by its name\n@returns Mixed",
            "modifiers": [],
            "params": [
              {
                "name": "prefName"
              },
              {
                "name": "fromJSON"
              }
            ],
            "returns": {
              "description": "Mixed",
              "type": null
            },
            "description": "Get a user preference by its name"
          },
          {
            "name": "getRepositoriesList",
            "docblock": "Get all repositories \n@returns {Map}",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": null,
              "type": {
                "name": "Map"
              }
            },
            "description": "Get all repositories"
          },
          {
            "name": "setPreference",
            "docblock": "Set a preference value\n@param prefName String\n@param prefValue Mixed\n@param toJSON Boolean Whether to convert the value to JSON representation",
            "modifiers": [],
            "params": [
              {
                "name": "prefName",
                "description": "String",
                "type": null
              },
              {
                "name": "prefValue",
                "description": "Mixed",
                "type": null
              },
              {
                "name": "toJSON",
                "description": "Boolean Whether to convert the value to JSON representation",
                "type": null
              }
            ],
            "returns": null,
            "description": "Set a preference value"
          },
          {
            "name": "setRepositoriesList",
            "docblock": "Set the repositories as a bunch\n@param repoHash Map",
            "modifiers": [],
            "params": [
              {
                "name": "repoHash",
                "description": "Map",
                "type": null
              }
            ],
            "returns": null,
            "description": "Set the repositories as a bunch"
          },
          {
            "name": "hasCrossRepositories",
            "docblock": "Whether there are any repositories allowing crossCopy\n@returns Boolean",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "Boolean",
              "type": null
            },
            "description": "Whether there are any repositories allowing crossCopy"
          },
          {
            "name": "getCrossRepositories",
            "docblock": "Get repositories allowing cross copy\n@returns {Map}",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": null,
              "type": {
                "name": "Map"
              }
            },
            "description": "Get repositories allowing cross copy"
          },
          {
            "name": "getRepositoryIcon",
            "docblock": "Get the current repository Icon\n@param repoId String\n@returns String",
            "modifiers": [],
            "params": [
              {
                "name": "repoId",
                "description": "String",
                "type": null
              }
            ],
            "returns": {
              "description": "String",
              "type": null
            },
            "description": "Get the current repository Icon"
          },
          {
            "name": "savePreference",
            "docblock": "Send the preference to the server for saving",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Send the preference to the server for saving"
          },
          {
            "name": "getIdmUser",
            "docblock": "@return {Promise<IdmUser>}",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": null,
              "type": {
                "name": "Promise"
              }
            },
            "description": null
          },
          {
            "name": "getActiveRepositoryAsCell",
            "docblock": "@return {Promise<CellModel>}",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": null,
              "type": {
                "name": "Promise"
              }
            },
            "description": null
          },
          {
            "name": "getActiveRepositoryObject",
            "docblock": "Return active repository object\n@return {Repository}",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": null,
              "type": {
                "name": "Repository"
              }
            },
            "description": "Return active repository object"
          },
          {
            "name": "loadFromXml",
            "docblock": "Parse the registry fragment to load this user\n@param userNodes DOMNode",
            "modifiers": [],
            "params": [
              {
                "name": "userNodes",
                "description": "DOMNode",
                "type": null
              }
            ],
            "returns": null,
            "description": "Parse the registry fragment to load this user"
          }
        ],
        "require": "const User = require('pydio/model/user')"
      }
    ],
    "core/util/ActivityMonitor.es6": [
      {
        "description": "A monitor for user \"idle\" state to prevent session timing out.",
        "displayName": "ActivityMonitor",
        "methods": [
          {
            "name": "constructor",
            "docblock": "Constructor\n@param pydio Pydio",
            "modifiers": [],
            "params": [
              {
                "name": "pydio",
                "description": "Pydio",
                "type": null
              }
            ],
            "returns": null,
            "description": "Constructor"
          },
          {
            "name": "startServerLongPoller",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "stopServerLongPoller",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "startIdlePoller",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "restartAt",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "stopIdlePoller",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "register",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "unregister",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "activityObserver",
            "docblock": "Listener to clear the timer",
            "modifiers": [],
            "params": [
              {
                "name": "event"
              }
            ],
            "returns": null,
            "description": "Listener to clear the timer"
          },
          {
            "name": "updateLastActive",
            "docblock": "Set last activity time",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Set last activity time"
          },
          {
            "name": "idleObserver",
            "docblock": "Listener for \"idle\" state of the user",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Listener for \"idle\" state of the user"
          },
          {
            "name": "exitIdleState",
            "docblock": "Reactivate window",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Reactivate window"
          },
          {
            "name": "setWarningState",
            "docblock": "Put the window in \"warning\" state : overlay, shaking timer, chronometer.",
            "modifiers": [],
            "params": [
              {
                "name": "warningTimerString"
              },
              {
                "name": "timeSeconds"
              }
            ],
            "returns": null,
            "description": "Put the window in \"warning\" state : overlay, shaking timer, chronometer."
          },
          {
            "name": "getWarningTimer",
            "docblock": "Chronometer for warning before timeout\n@param time Integer",
            "modifiers": [],
            "params": [
              {
                "name": "time",
                "description": "Integer",
                "type": null
              }
            ],
            "returns": null,
            "description": "Chronometer for warning before timeout"
          },
          {
            "name": "removeWarningState",
            "docblock": "Removes the overlay of warning state",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Removes the overlay of warning state"
          },
          {
            "name": "getNow",
            "docblock": "Utility to get the time\n@returns Integer",
            "modifiers": [],
            "params": [],
            "returns": {
              "description": "Integer",
              "type": null
            },
            "description": "Utility to get the time"
          }
        ],
        "require": "const ActivityMonitor = require('pydio/util/activity-monitor')"
      }
    ],
    "core/util/CookiesManager.es6": [
      {
        "description": "",
        "displayName": "CookiesManager",
        "methods": [
          {
            "name": "supported",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "constructor",
            "docblock": "Initializes the cookie jar with the options.",
            "modifiers": [],
            "params": [
              {
                "name": "options"
              }
            ],
            "returns": null,
            "description": "Initializes the cookie jar with the options."
          },
          {
            "name": "putCookie",
            "docblock": "Adds a name values pair.",
            "modifiers": [],
            "params": [
              {
                "name": "name"
              },
              {
                "name": "value"
              }
            ],
            "returns": null,
            "description": "Adds a name values pair."
          },
          {
            "name": "removeCookie",
            "docblock": "Removes a particular cookie (name value pair) form the Cookie Jar.",
            "modifiers": [],
            "params": [
              {
                "name": "name"
              }
            ],
            "returns": null,
            "description": "Removes a particular cookie (name value pair) form the Cookie Jar."
          },
          {
            "name": "getCookie",
            "docblock": "Return a particular cookie by name;",
            "modifiers": [],
            "params": [
              {
                "name": "name"
              }
            ],
            "returns": null,
            "description": "Return a particular cookie by name;"
          },
          {
            "name": "emptyAll",
            "docblock": "Empties the Cookie Jar. Deletes all the cookies.",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Empties the Cookie Jar. Deletes all the cookies."
          },
          {
            "name": "getPack",
            "docblock": "Returns all cookies as a single object",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Returns all cookies as a single object"
          },
          {
            "name": "getKeys",
            "docblock": "Returns all keys.",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Returns all keys."
          }
        ],
        "require": "const CookiesManager = require('pydio/util/cookies')"
      }
    ],
    "core/util/DOMUtils.es6": [
      {
        "description": "Utilitary class for language specific methods",
        "displayName": "DOMUtils",
        "methods": [
          {
            "name": "getBeziersTransition",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "getBoxShadowDepth",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "depth",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getUrlFromBase",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "getViewportWidth",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "getViewportHeight",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "imageLoader",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "imageUrl",
                "type": null
              },
              {
                "name": "onLoad",
                "type": null
              },
              {
                "name": "onError",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "observeWindowResize",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "callback",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "stopObservingWindowResize",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "callback",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "selectBaseFileName",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "htmlInput",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const DOMUtils = require('pydio/util/dom')"
      }
    ],
    "core/util/FuncUtils.es6": [
      {
        "description": "Utilitary class for language specific methods",
        "displayName": "FuncUtils",
        "methods": [
          {
            "name": "Empty",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "Identity",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "object",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "executeFunctionByName",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "functionName",
                "type": null
              },
              {
                "name": "context",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getFunctionByName",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "functionName",
                "type": null
              },
              {
                "name": "context",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "bufferCallback",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "name",
                "type": null
              },
              {
                "name": "time",
                "type": null
              },
              {
                "name": "callback",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const FuncUtils = require('pydio/util/func')"
      }
    ],
    "core/util/HasherUtils.es6": [
      {
        "description": "Utilitary class for hashing methods",
        "displayName": "HasherUtils",
        "methods": [
          {
            "name": "constructor",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "hex_md5",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "s",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "b64_md5",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "s",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "str_md5",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "s",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "hex_hmac_md5",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "key",
                "type": null
              },
              {
                "name": "data",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "b64_hmac_md5",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "key",
                "type": null
              },
              {
                "name": "data",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "str_hmac_md5",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "key",
                "type": null
              },
              {
                "name": "data",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "base64_encode",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "utf8_encode",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "string",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "md5_vm_test",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "core_md5",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "x",
                "type": null
              },
              {
                "name": "len",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "md5_cmn",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "q",
                "type": null
              },
              {
                "name": "a",
                "type": null
              },
              {
                "name": "b",
                "type": null
              },
              {
                "name": "x",
                "type": null
              },
              {
                "name": "s",
                "type": null
              },
              {
                "name": "t",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "md5_ff",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "a",
                "type": null
              },
              {
                "name": "b",
                "type": null
              },
              {
                "name": "c",
                "type": null
              },
              {
                "name": "d",
                "type": null
              },
              {
                "name": "x",
                "type": null
              },
              {
                "name": "s",
                "type": null
              },
              {
                "name": "t",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "md5_gg",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "a",
                "type": null
              },
              {
                "name": "b",
                "type": null
              },
              {
                "name": "c",
                "type": null
              },
              {
                "name": "d",
                "type": null
              },
              {
                "name": "x",
                "type": null
              },
              {
                "name": "s",
                "type": null
              },
              {
                "name": "t",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "md5_hh",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "a",
                "type": null
              },
              {
                "name": "b",
                "type": null
              },
              {
                "name": "c",
                "type": null
              },
              {
                "name": "d",
                "type": null
              },
              {
                "name": "x",
                "type": null
              },
              {
                "name": "s",
                "type": null
              },
              {
                "name": "t",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "md5_ii",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "a",
                "type": null
              },
              {
                "name": "b",
                "type": null
              },
              {
                "name": "c",
                "type": null
              },
              {
                "name": "d",
                "type": null
              },
              {
                "name": "x",
                "type": null
              },
              {
                "name": "s",
                "type": null
              },
              {
                "name": "t",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "core_hmac_md5",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "key",
                "type": null
              },
              {
                "name": "data",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "safe_add",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "x",
                "type": null
              },
              {
                "name": "y",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "bit_rol",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "num",
                "type": null
              },
              {
                "name": "cnt",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "str2binl",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "str",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "binl2str",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "bin",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "binl2hex",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "binarray",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "binl2b64",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "binarray",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const HasherUtils = require('pydio/util/hasher')"
      }
    ],
    "core/util/LangUtils.es6": [
      {
        "description": "Utilitary class for language specific methods",
        "displayName": "LangUtils",
        "methods": [
          {
            "name": "arrayWithout",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "array",
                "type": null
              },
              {
                "name": "key",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "objectMerge",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "obj1",
                "type": null
              },
              {
                "name": "obj2",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "parseUrl",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "data",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "computeStringSlug",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "forceJSONArrayToObject",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "container",
                "type": null
              },
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "deepCopy",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "source",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "simpleCopy",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "source",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "mergeObjectsRecursive",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "source",
                "type": null
              },
              {
                "name": "destination",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "objectValues",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "object",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "trimLeft",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "string",
                "type": null
              },
              {
                "name": "charlist",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "trimRight",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "string",
                "type": null
              },
              {
                "name": "charlist",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "trim",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "string",
                "type": null
              },
              {
                "name": "charlist",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "arraySorter",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "key",
                "type": null
              },
              {
                "name": "isFunc",
                "type": null
              },
              {
                "name": "toLower",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const LangUtils = require('pydio/util/lang')"
      }
    ],
    "core/util/PassUtils.es6": [
      {
        "description": "Utils to compute password strength",
        "displayName": "PassUtils",
        "methods": [
          {
            "name": "isValidLogin",
            "docblock": "Check if loginString is lowercase, a valid email or just alphanumeric\n@param loginString\n@return {string} Error string or empty string",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "loginString",
                "description": null,
                "type": null
              }
            ],
            "returns": {
              "description": "Error string or empty string",
              "type": {
                "name": "string"
              }
            },
            "description": "Check if loginString is lowercase, a valid email or just alphanumeric"
          },
          {
            "name": "getState",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "passValue",
                "type": null
              },
              {
                "name": "confirmValue",
                "type": null
              },
              {
                "name": "crtState",
                "type": null
              },
              {
                "name": "onChange",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getOptions",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "checkPasswordStrength",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "value",
                "type": null
              },
              {
                "name": "callback",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getPasswordScore",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "value",
                "type": null
              },
              {
                "name": "minchar",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const PassUtils = require('pydio/util/pass')"
      }
    ],
    "core/util/PathUtils.es6": [
      {
        "description": "Utilitary class for manipulating file/folders pathes",
        "displayName": "PathUtils",
        "methods": [
          {
            "name": "getBasename",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "fileName",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getDirname",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "fileName",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getAjxpMimeType",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "item",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getFileExtension",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "fileName",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "roundFileSize",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "filesize",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "formatModifDate",
            "docblock": "@param dateObject Date\n@param format String\n@returns {*}",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "dateObject",
                "description": "Date",
                "type": null
              },
              {
                "name": "format",
                "description": "String",
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "mixed"
              }
            },
            "description": null
          }
        ],
        "require": "const PathUtils = require('pydio/util/path')"
      }
    ],
    "core/util/PeriodicalExecuter.es6": [
      {
        "description": "",
        "displayName": "PeriodicalExecuter",
        "methods": [
          {
            "name": "constructor",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "callback",
                "type": null
              },
              {
                "name": "frequency",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "registerCallback",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "execute",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "stop",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "onTimerEvent",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "require": "const PeriodicalExecuter = require('pydio/util/periodical-executer')"
      }
    ],
    "core/util/XMLUtils.es6": [
      {
        "description": "Utilitary class for manipulating XML",
        "displayName": "XMLUtils",
        "methods": [
          {
            "name": "XPathSelectSingleNode",
            "docblock": "Selects the first XmlNode that matches the XPath expression.\n\n@param element {Element | Document} root element for the search\n@param query {String} XPath query\n@return {Element} first matching element\n@signature function(element, query)",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "element",
                "description": "{Element | Document} root element for the search",
                "type": null
              },
              {
                "name": "query",
                "description": "{String} XPath query",
                "type": null
              }
            ],
            "returns": {
              "description": "first matching element",
              "type": {
                "name": "Element"
              }
            },
            "description": "Selects the first XmlNode that matches the XPath expression."
          },
          {
            "name": "XPathSelectNodes",
            "docblock": "Selects a list of nodes matching the XPath expression.\n\n@param element {Element | Document} root element for the search\n@param query {String} XPath query\n@return {Element[]} List of matching elements\n@signature function(element, query)",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "element",
                "description": "{Element | Document} root element for the search",
                "type": null
              },
              {
                "name": "query",
                "description": "{String} XPath query",
                "type": null
              }
            ],
            "returns": {
              "description": "List of matching elements",
              "type": {
                "name": "Array"
              }
            },
            "description": "Selects a list of nodes matching the XPath expression."
          },
          {
            "name": "XPathGetSingleNodeText",
            "docblock": "Selects the first XmlNode that matches the XPath expression and returns the text content of the element\n\n@param element {Element|Document} root element for the search\n@param query {String}  XPath query\n@return {String} the joined text content of the found element or null if not appropriate.\n@signature function(element, query)",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "element",
                "description": "{Element|Document} root element for the search",
                "type": null
              },
              {
                "name": "query",
                "description": "{String}  XPath query",
                "type": null
              }
            ],
            "returns": {
              "description": "the joined text content of the found element or null if not appropriate.",
              "type": {
                "name": "String"
              }
            },
            "description": "Selects the first XmlNode that matches the XPath expression and returns the text content of the element"
          },
          {
            "name": "getDomNodeText",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "node",
                "type": null
              },
              {
                "name": "includeCData",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "parseXml",
            "docblock": "@param xmlStr\n@returns {*}",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "xmlStr",
                "description": null,
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "mixed"
              }
            },
            "description": null
          }
        ],
        "require": "const XMLUtils = require('pydio/util/xml')"
      }
    ],
    "Components/chat/Chat.js": [
      {
        "description": "",
        "displayName": "Chat",
        "methods": [
          {
            "name": "onRoomMessage",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "msg",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onNewMessage",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "msg",
                "type": null
              },
              {
                "name": "deleteMsg",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "join",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "roomType",
                "type": null
              },
              {
                "name": "roomObjectId",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "stop",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "postMessage",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "deleteMessage",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "msg",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "keyDown",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const {Chat} = require('pydio').requireLib('components')"
      }
    ],
    "Components/chat/ChatIcon.js": [
      {
        "description": "",
        "displayName": "ChatIcon",
        "methods": [
          {
            "name": "onMessage",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "msg",
                "type": null
              },
              {
                "name": "deleteMsg",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "listenToRoom",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "roomType",
                "type": null
              },
              {
                "name": "objectId",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "leaveRoom",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "roomType",
                "type": null
              },
              {
                "name": "objectId",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onClick",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "require": "const {ChatIcon} = require('pydio').requireLib('components')"
      }
    ],
    "Components/chat/ChatUsers.js": [
      {
        "description": "",
        "displayName": "ChatUsers",
        "methods": [],
        "require": "const {ChatUsers} = require('pydio').requireLib('components')"
      }
    ],
    "Components/chat/Message.js": [
      {
        "description": "",
        "displayName": "Message",
        "methods": [],
        "require": "const {Message} = require('pydio').requireLib('components')"
      }
    ],
    "Components/dynamic-grid/DynamicGrid.js": [
      {
        "description": "Automatic layout for presenting draggable cards to users. Used for user and admin dashboard.",
        "methods": [
          {
            "name": "saveFullLayouts",
            "docblock": "Save layouts in the users preference.\n\n@param {object} allLayouts Responsive layouts passed for saving",
            "modifiers": [],
            "params": [
              {
                "name": "allLayouts",
                "description": "Responsive layouts passed for saving",
                "type": {
                  "name": "object"
                }
              }
            ],
            "returns": null,
            "description": "Save layouts in the users preference."
          },
          {
            "name": "onLayoutChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "currentLayout",
                "type": null
              },
              {
                "name": "allLayouts",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "removeCard",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "itemKey",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "buildCards",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "cards",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const {DynamicGrid} = require('pydio').requireLib('components')"
      },
      {
        "description": "",
        "methods": [
          {
            "name": "removeCard",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "cardId",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "addCard",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "cardDefinition",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "resetCardsAndLayout",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "toggleEditMode",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "storeNamespace": {
            "type": {
              "name": "string"
            },
            "required": true,
            "description": ""
          },
          "builderNamespaces": {
            "type": {
              "name": "array"
            },
            "required": false,
            "description": ""
          },
          "defaultCards": {
            "type": {
              "name": "array"
            },
            "required": false,
            "description": ""
          },
          "pydio": {
            "type": {
              "name": "instanceOf",
              "value": "Pydio"
            },
            "required": false,
            "description": ""
          },
          "disableDrag": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "disableEdit": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "Components/dynamic-grid/GridBuilder.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "listAvailableWidgets",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "secondPass",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onDropDownChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "index",
                "type": null
              },
              {
                "name": "item",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "cancel",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "onFormValueChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "newValues",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onFormSubmit",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "resetLayout",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "namespaces": {
            "type": {
              "name": "array"
            },
            "required": false,
            "description": ""
          },
          "onCreateCard": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "onEditStatusChange": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          }
        },
        "require": "const {GridBuilder} = require('pydio').requireLib('components')"
      }
    ],
    "Components/dynamic-grid/GridItemMixin.js": [
      {
        "description": "",
        "methods": [],
        "require": "const {GridItemMixin} = require('pydio').requireLib('components')"
      }
    ],
    "Components/editor/ReactEditorOpener.js": [
      {
        "description": "",
        "displayName": "ReactEditorOpener",
        "methods": [],
        "props": {
          "node": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.instanceOf(AjxpNode).isRequired"
            },
            "required": false,
            "description": ""
          },
          "registry": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.instanceOf(Registry).isRequired"
            },
            "required": false,
            "description": ""
          },
          "editorData": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.object.isRequired"
            },
            "required": false,
            "description": ""
          },
          "icon": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.bool"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "false",
              "computed": false
            }
          }
        },
        "require": "const {ReactEditorOpener} = require('pydio').requireLib('components')"
      }
    ],
    "Components/list/ConfigurableListEntry.js": [
      {
        "description": "Callback based material list entry with custom icon render, firstLine, secondLine, etc.",
        "methods": [],
        "props": {
          "node": {
            "type": {
              "name": "instanceOf",
              "value": "AjxpNode"
            },
            "required": false,
            "description": ""
          },
          "renderIcon": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "renderFirstLine": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "renderSecondLine": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "renderThirdLine": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "renderActions": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "style": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          }
        },
        "require": "const {ConfigurableListEntry} = require('pydio').requireLib('components')"
      }
    ],
    "Components/list/InlineEditor.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "submit",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "catchClicks",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "e",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onKeyDown",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "e",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "node": {
            "type": {
              "name": "instanceOf",
              "value": "AjxpNode"
            },
            "required": false,
            "description": ""
          },
          "callback": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "onClose": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "detached": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          }
        },
        "require": "const {InlineEditor} = require('pydio').requireLib('components')"
      }
    ],
    "Components/list/ListEntry.js": [
      {
        "description": "Material List Entry",
        "displayName": "ListEntry",
        "methods": [
          {
            "name": "onClick",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onDoubleClick",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "showSelector": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.bool"
            },
            "required": false,
            "description": ""
          },
          "selected": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.bool"
            },
            "required": false,
            "description": ""
          },
          "selectorDisabled": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.bool"
            },
            "required": false,
            "description": ""
          },
          "onSelect": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.func"
            },
            "required": false,
            "description": ""
          },
          "onClick": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.func"
            },
            "required": false,
            "description": ""
          },
          "iconCell": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.element"
            },
            "required": false,
            "description": ""
          },
          "mainIcon": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.string"
            },
            "required": false,
            "description": ""
          },
          "firstLine": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.node"
            },
            "required": false,
            "description": ""
          },
          "secondLine": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.node"
            },
            "required": false,
            "description": ""
          },
          "thirdLine": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.node"
            },
            "required": false,
            "description": ""
          },
          "actions": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.element"
            },
            "required": false,
            "description": ""
          },
          "activeDroppable": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.bool"
            },
            "required": false,
            "description": ""
          },
          "className": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.string"
            },
            "required": false,
            "description": ""
          },
          "style": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.object"
            },
            "required": false,
            "description": ""
          },
          "noHover": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.bool"
            },
            "required": false,
            "description": ""
          }
        },
        "require": "const {ListEntry} = require('pydio').requireLib('components')"
      },
      {
        "description": "",
        "displayName": "ContextMenuWrapper",
        "methods": []
      }
    ],
    "Components/list/ListPaginator.js": [
      {
        "description": "Pagination component reading metadata \"paginationData\" from current node.",
        "methods": [
          {
            "name": "changePage",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onMenuChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "index",
                "type": null
              },
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "dataModel": {
            "type": {
              "name": "instanceOf",
              "value": "PydioDataModel"
            },
            "required": true,
            "description": ""
          },
          "node": {
            "type": {
              "name": "instanceOf",
              "value": "AjxpNode"
            },
            "required": false,
            "description": ""
          }
        },
        "require": "const {ListPaginator} = require('pydio').requireLib('components')"
      }
    ],
    "Components/list/MaterialTable.js": [
      {
        "description": "Simple material table\ncolumns are objects of shape {name, label, style, headerStyle}",
        "displayName": "MaterialTable",
        "methods": [
          {
            "name": "onRowSelection",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "indexes",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const {MaterialTable} = require('pydio').requireLib('components')"
      }
    ],
    "Components/list/SimpleList.js": [
      {
        "description": "Generic List component, using Infinite for cell virtualization, pagination, various\ndisplays, etc... It provides many hooks for rendering cells on-demand.",
        "methods": [
          {
            "name": "clickRow",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "gridRow",
                "type": null
              },
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "doubleClickRow",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "gridRow",
                "type": null
              },
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onColumnSort",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "column",
                "type": null
              },
              {
                "name": "stateSetCallback",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "computeSelectionFromCurrentPlusTargetNode",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "currentSelection",
                "type": null
              },
              {
                "name": "targetNode",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onKeyDown",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "e",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "observeNodeChildren",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              },
              {
                "name": "stop",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "_loadNodeIfNotLoaded",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "_loadingListener",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "_loadedListener",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "reload",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "loadStartingAtCursor",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "wireReloadListeners",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "stopReloadListeners",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "toggleSelector",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "toggleSelection",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "selectAll",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "applyMultipleAction",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "ev",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getActionsForNode",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "dm",
                "type": null
              },
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "updateInfiniteContainerHeight",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "retries",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "computeElementHeightResponsive",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "updateElementHeightResponsive",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "patchInfiniteGrid",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "els",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onScroll",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "scrollTop",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "scrollToLast",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "scrollToView",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "buildElementsFromNodeEntries",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "nodeEntries",
                "type": null
              },
              {
                "name": "showSelector",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "buildElements",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "start",
                "type": null
              },
              {
                "name": "end",
                "type": null
              },
              {
                "name": "node",
                "type": null
              },
              {
                "name": "showSelector",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "rebuildLoadedElements",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "handleInfiniteLoad",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "remoteSortingInfo",
            "docblock": "Extract remote sorting info from current node metadata",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Extract remote sorting info from current node metadata"
          },
          {
            "name": "renderToolbar",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "hiddenMode",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "infiniteSliceCount": {
            "type": {
              "name": "number"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "30",
              "computed": false
            }
          },
          "filterNodes": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "customToolbar": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "tableKeys": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "autoRefresh": {
            "type": {
              "name": "number"
            },
            "required": false,
            "description": ""
          },
          "reloadAtCursor": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "clearSelectionOnReload": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "true",
              "computed": false
            }
          },
          "heightAutoWithMax": {
            "type": {
              "name": "number"
            },
            "required": false,
            "description": ""
          },
          "containerHeight": {
            "type": {
              "name": "number"
            },
            "required": false,
            "description": ""
          },
          "observeNodeReload": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "defaultGroupBy": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "defaultGroupByLabel": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "skipParentNavigation": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "skipInternalDataModel": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "delayInitialLoad": {
            "type": {
              "name": "number"
            },
            "required": false,
            "description": ""
          },
          "entryEnableSelector": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "renderCustomEntry": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "entryRenderIcon": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "entryRenderActions": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "entryRenderFirstLine": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "entryRenderSecondLine": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "entryRenderThirdLine": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "entryHandleClicks": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "hideToolbar": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "computeActionsForNode": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "multipleActions": {
            "type": {
              "name": "array"
            },
            "required": false,
            "description": ""
          },
          "openEditor": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "openCollection": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "elementStyle": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "passScrollingStateToChildren": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "elementHeight": {
            "type": {
              "name": "union",
              "value": [
                {
                  "name": "number"
                },
                {
                  "name": "object"
                }
              ]
            },
            "required": true,
            "description": ""
          }
        },
        "require": "const {SimpleList} = require('pydio').requireLib('components')"
      }
    ],
    "Components/list/SortColumns.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "onMenuClicked",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "object",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onHeaderClick",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "key",
                "type": null
              },
              {
                "name": "callback",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getColumnsItems",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "displayMode",
                "type": null
              },
              {
                "name": "controller",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "buildSortingMenuItems",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "controller",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "tableKeys": {
            "type": {
              "name": "object"
            },
            "required": true,
            "description": ""
          },
          "columnClicked": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "sortingInfo": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "displayMode": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          }
        },
        "require": "const {SortColumns} = require('pydio').requireLib('components')"
      }
    ],
    "Components/menu/ButtonComposed.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "showMenu",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "menuClicked",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "index",
                "type": null
              },
              {
                "name": "object",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "buttonTitle": {
            "type": {
              "name": "union",
              "value": [
                {
                  "name": "string"
                },
                {
                  "name": "object"
                }
              ]
            },
            "required": true,
            "description": ""
          },
          "masterAction": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": ""
          },
          "menuItems": {
            "type": {
              "name": "array"
            },
            "required": true,
            "description": ""
          },
          "className": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "raised": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "direction": {
            "type": {
              "name": "enum",
              "value": [
                {
                  "value": "'left'",
                  "computed": false
                },
                {
                  "value": "'right'",
                  "computed": false
                }
              ]
            },
            "required": false,
            "description": ""
          }
        },
        "require": "const {ButtonComposed} = require('pydio').requireLib('components')"
      }
    ],
    "Components/menu/ButtonMenu.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "showMenu",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "menuClicked",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "index",
                "type": null
              },
              {
                "name": "object",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "buttonTitle": {
            "type": {
              "name": "union",
              "value": [
                {
                  "name": "string"
                },
                {
                  "name": "object"
                }
              ]
            },
            "required": true,
            "description": ""
          },
          "menuItems": {
            "type": {
              "name": "array"
            },
            "required": true,
            "description": ""
          },
          "className": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "raised": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "direction": {
            "type": {
              "name": "enum",
              "value": [
                {
                  "value": "'left'",
                  "computed": false
                },
                {
                  "value": "'right'",
                  "computed": false
                }
              ]
            },
            "required": false,
            "description": ""
          }
        },
        "require": "const {ButtonMenu} = require('pydio').requireLib('components')"
      }
    ],
    "Components/menu/ContextMenu.js": [
      {
        "description": "",
        "displayName": "ContextMenu",
        "methods": [
          {
            "name": "modelOpen",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "openMenu",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "context",
                "type": null
              },
              {
                "name": "position",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "computeMenuItems",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "context",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "computeVisiblePosition",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "position",
                "type": null
              },
              {
                "name": "items",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const {ContextMenu} = require('pydio').requireLib('components')"
      }
    ],
    "Components/menu/IconButtonMenu.js": [
      {
        "description": "",
        "displayName": "IconButtonMenu",
        "methods": [
          {
            "name": "showMenu",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "closeMenu",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "index",
                "type": null
              },
              {
                "name": "menuItem",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "buttonTitle": {
            "type": {
              "name": "string"
            },
            "required": true,
            "description": ""
          },
          "buttonClassName": {
            "type": {
              "name": "string"
            },
            "required": true,
            "description": ""
          },
          "className": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "popoverDirection": {
            "type": {
              "name": "enum",
              "value": [
                {
                  "value": "'right'",
                  "computed": false
                },
                {
                  "value": "'left'",
                  "computed": false
                }
              ]
            },
            "required": false,
            "description": ""
          },
          "popoverPosition": {
            "type": {
              "name": "enum",
              "value": [
                {
                  "value": "'top'",
                  "computed": false
                },
                {
                  "value": "'bottom'",
                  "computed": false
                }
              ]
            },
            "required": false,
            "description": ""
          },
          "menuProps": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "menuItems": {
            "type": {
              "name": "array"
            },
            "required": true,
            "description": ""
          }
        },
        "require": "const {IconButtonMenu} = require('pydio').requireLib('components')"
      }
    ],
    "Components/menu/IconButtonPopover.js": [
      {
        "description": "",
        "displayName": "IconButtonPopover",
        "methods": [
          {
            "name": "showPopover",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "buttonTitle": {
            "type": {
              "name": "string"
            },
            "required": true,
            "description": ""
          },
          "buttonClassName": {
            "type": {
              "name": "string"
            },
            "required": true,
            "description": ""
          },
          "className": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "direction": {
            "type": {
              "name": "enum",
              "value": [
                {
                  "value": "'right'",
                  "computed": false
                },
                {
                  "value": "'left'",
                  "computed": false
                }
              ]
            },
            "required": false,
            "description": ""
          },
          "popoverContent": {
            "type": {
              "name": "object"
            },
            "required": true,
            "description": ""
          }
        },
        "require": "const {IconButtonPopover} = require('pydio').requireLib('components')"
      }
    ],
    "Components/menu/PopupMenu.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "showMenu",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "style",
                "type": null
              },
              {
                "name": "menuItems",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "hideMenu",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "menuClicked",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "index",
                "type": null
              },
              {
                "name": "menuItem",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "menuItems": {
            "type": {
              "name": "array"
            },
            "required": true,
            "description": ""
          },
          "onExternalClickCheckElements": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "className": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "style": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "onMenuClosed": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          }
        },
        "require": "const {PopupMenu} = require('pydio').requireLib('components')"
      }
    ],
    "Components/menu/Toolbar.js": [
      {
        "description": "",
        "methods": [],
        "props": {
          "toolbars": {
            "type": {
              "name": "array"
            },
            "required": false,
            "description": ""
          },
          "groupOtherList": {
            "type": {
              "name": "array"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "[]",
              "computed": false
            }
          },
          "renderingType": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "'button'",
              "computed": false
            }
          },
          "controller": {
            "type": {
              "name": "instanceOf",
              "value": "Controller"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "global.pydio.Controller",
              "computed": true
            }
          },
          "toolbarStyle": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "buttonStyle": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "fabAction": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "buttonMenuNoLabel": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          }
        },
        "require": "const {Toolbar} = require('pydio').requireLib('components')"
      }
    ],
    "Components/menu/Utils.js": [
      {
        "description": "",
        "displayName": "itemsToMenu",
        "methods": [],
        "require": "const {Utils} = require('pydio').requireLib('components')"
      }
    ],
    "Components/users/TeamCreationForm.js": [
      {
        "description": "Simple form for creating a team",
        "displayName": "TeamCreationForm",
        "methods": [
          {
            "name": "onChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "e",
                "type": null
              },
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "submitCreationForm",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "onTeamCreated": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": "Callback triggered after team creation succeeded"
          },
          "onCancel": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": "Request modal close"
          }
        },
        "require": "const {TeamCreationForm} = require('pydio').requireLib('components')"
      }
    ],
    "Components/users/UserCreationForm.js": [
      {
        "description": "",
        "displayName": "UserCreationForm",
        "methods": [
          {
            "name": "getCreateUserParameters",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "editMode",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getParameters",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "getValuesForPost",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "prefix",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onValuesChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "newValues",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "changeValidStatus",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "status",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "submitCreationForm",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "cancelCreationForm",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "newUserName": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "onUserCreated": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": ""
          },
          "onCancel": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": ""
          },
          "editMode": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "false",
              "computed": false
            }
          },
          "userData": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          }
        },
        "require": "const {UserCreationForm} = require('pydio').requireLib('components')"
      }
    ],
    "Components/users/UsersCompleter.js": [
      {
        "description": "Ready to use autocomplete field that will load users/groups/roles from\nthe server (using user_list_authorized_users API).\nUsed for sharing, addressbooks, send email, etc.\n\nCan also open a \"selector-style\" adress book.",
        "methods": [
          {
            "name": "suggestionLoader",
            "docblock": "Loads values from server\n@param {string} input Currently searched text\n@param {Function} callback Called with the values",
            "modifiers": [],
            "params": [
              {
                "name": "input",
                "description": "Currently searched text",
                "type": {
                  "name": "string"
                }
              },
              {
                "name": "callback",
                "description": "Called with the values",
                "type": {
                  "name": "Function"
                }
              }
            ],
            "returns": null,
            "description": "Loads values from server"
          },
          {
            "name": "textFieldUpdate",
            "docblock": "Called when the field is updated\n@param value",
            "modifiers": [],
            "params": [
              {
                "name": "value",
                "description": null,
                "type": null
              }
            ],
            "returns": null,
            "description": "Called when the field is updated"
          },
          {
            "name": "getPendingSearchText",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "loadBuffered",
            "docblock": "Debounced call for rendering search\n@param value {string}\n@param timeout {int}",
            "modifiers": [],
            "params": [
              {
                "name": "value",
                "description": "{string}",
                "type": null
              },
              {
                "name": "timeout",
                "description": "{int}",
                "type": null
              }
            ],
            "returns": null,
            "description": "Debounced call for rendering search"
          },
          {
            "name": "onCompleterRequest",
            "docblock": "Called when user selects a value from the list\n@param value\n@param index",
            "modifiers": [],
            "params": [
              {
                "name": "value",
                "description": null,
                "type": null
              },
              {
                "name": "index",
                "description": null,
                "type": null
              }
            ],
            "returns": null,
            "description": "Called when user selects a value from the list"
          },
          {
            "name": "onUserCreated",
            "docblock": "Triggers onValueSelected props callback\n@param {Pydio.User} newUser",
            "modifiers": [],
            "params": [
              {
                "name": "newUser",
                "description": null,
                "type": {
                  "name": "Pydio.User"
                }
              }
            ],
            "returns": null,
            "description": "Triggers onValueSelected props callback"
          },
          {
            "name": "onCreationCancelled",
            "docblock": "Close user creation form",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Close user creation form"
          },
          {
            "name": "openAddressBook",
            "docblock": "Open address book inside a Popover\n@param event",
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "description": null,
                "type": null
              }
            ],
            "returns": null,
            "description": "Open address book inside a Popover"
          },
          {
            "name": "closeAddressBook",
            "docblock": "Close address book popover",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Close address book popover"
          },
          {
            "name": "onAddressBookItemSelected",
            "docblock": "Triggered when user clicks on an entry from adress book.\n@param item",
            "modifiers": [],
            "params": [
              {
                "name": "item",
                "description": null,
                "type": null
              }
            ],
            "returns": null,
            "description": "Triggered when user clicks on an entry from adress book."
          }
        ],
        "props": {
          "renderSuggestion": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": "Method called to render a commponent, taking a UserObject as input"
          },
          "onValueSelected": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": "Callback when a value is finally selected"
          },
          "fieldLabel": {
            "type": {
              "name": "string"
            },
            "required": true,
            "description": "Floating Label Text displayed on the field"
          },
          "excludes": {
            "type": {
              "name": "array"
            },
            "required": true,
            "description": "Array of values to ignore"
          },
          "usersOnly": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": "Display only users, no groups nor roles"
          },
          "usersFrom": {
            "type": {
              "name": "enum",
              "value": [
                {
                  "value": "'local'",
                  "computed": false
                },
                {
                  "value": "'remote'",
                  "computed": false
                },
                {
                  "value": "'any'",
                  "computed": false
                }
              ]
            },
            "required": false,
            "description": "Display users from local directory and/or from remote."
          },
          "existingOnly": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": "Do not propose a \"Create user\" option"
          },
          "freeValueAllowed": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": "Allow free typing"
          },
          "className": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": "Will be passed to the root component"
          }
        },
        "require": "const {UsersCompleter} = require('pydio').requireLib('components')"
      }
    ],
    "Components/users/addressbook/AddressBook.js": [
      {
        "description": "High level component to browse users, groups and teams, either in a large format (mode='book') or a more compact\nformat (mode='selector'|'popover').\nAddress book allows to create external users, teams, and also to browse trusted server directories if Federated Sharing\nis active.",
        "methods": [
          {
            "name": "onFolderClicked",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "item",
                "type": null
              },
              {
                "name": "callback",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onUserListItemClicked",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "item",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onCreateAction",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "item",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "closeCreateDialogAndReload",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "onCardUpdateAction",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "item",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onDeleteAction",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "parentItem",
                "type": null
              },
              {
                "name": "selection",
                "type": null
              },
              {
                "name": "skipConfirm",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "openPopover",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "closePopover",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "reloadCurrentNode",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "reloadCurrentAtPage",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "letterOrRange",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "reloadCurrentWithSearch",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "pydio": {
            "type": {
              "name": "instanceOf",
              "value": "Pydio"
            },
            "required": false,
            "description": "Main instance of pydio"
          },
          "mode": {
            "type": {
              "name": "enum",
              "value": [
                {
                  "value": "'book'",
                  "computed": false
                },
                {
                  "value": "'selector'",
                  "computed": false
                },
                {
                  "value": "'popover'",
                  "computed": false
                }
              ]
            },
            "required": false,
            "description": "Display mode, either large (book) or small picker ('selector', 'popover').",
            "defaultValue": {
              "value": "'book'",
              "computed": false
            }
          },
          "bookColumn": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": "Use book mode but display as column"
          },
          "onItemSelected": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": "Callback triggered in 'selector' mode whenever an item is clicked."
          },
          "usersOnly": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": "Display users only, no teams or groups",
            "defaultValue": {
              "value": "false",
              "computed": false
            }
          },
          "usersFrom": {
            "type": {
              "name": "enum",
              "value": [
                {
                  "value": "'local'",
                  "computed": false
                },
                {
                  "value": "'remote'",
                  "computed": false
                },
                {
                  "value": "'any'",
                  "computed": false
                }
              ]
            },
            "required": false,
            "description": "Choose various user sources, either the local directory or remote ( = trusted ) servers.",
            "defaultValue": {
              "value": "'any'",
              "computed": false
            }
          },
          "disableSearch": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": "Disable the search engine",
            "defaultValue": {
              "value": "false",
              "computed": false
            }
          },
          "muiTheme": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": "Theme object passed by muiThemeable() wrapper"
          },
          "popoverStyle": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": "Will be passed to the Popover object"
          },
          "popoverButton": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": "Used as a button to open the selector in a popover"
          },
          "popoverContainerStyle": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": "Will be passed to the Popover container object"
          },
          "popoverIconButtonStyle": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": "Will be passed to the Popover Icon Button."
          },
          "teamsOnly": {
            "defaultValue": {
              "value": "false",
              "computed": false
            },
            "required": false
          }
        },
        "require": "const {AddressBook} = require('pydio').requireLib('components')"
      }
    ],
    "Components/users/addressbook/AlphaPaginator.js": [
      {
        "description": "Alphabet and pages generator to give a first-letter-based pagination",
        "displayName": "AlphaPaginator",
        "methods": [],
        "props": {
          "item": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": "Currently selected Item"
          },
          "paginatorCallback": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": "When a letter is clicked, function(letter)"
          },
          "pydio": {
            "type": {
              "name": "instanceOf",
              "value": "Pydio"
            },
            "required": false,
            "description": "Main instance of pydio"
          },
          "mode": {
            "type": {
              "name": "enum",
              "value": [
                {
                  "value": "'book'",
                  "computed": false
                },
                {
                  "value": "'selector'",
                  "computed": false
                },
                {
                  "value": "'popover'",
                  "computed": false
                }
              ]
            },
            "required": true,
            "description": "Display mode, either large (book) or small picker ('selector', 'popover')."
          }
        },
        "require": "const {AlphaPaginator} = require('pydio').requireLib('components')"
      }
    ],
    "Components/users/addressbook/NestedListItem.js": [
      {
        "description": "Left panel of the address book\nDisplay treeview hierarchy of users, teams, groups.",
        "displayName": "NestedListItem",
        "methods": [
          {
            "name": "onTouchTap",
            "docblock": "Triggers this.props.onTouchTap",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Triggers this.props.onTouchTap"
          },
          {
            "name": "buildNestedItems",
            "docblock": "Recursively build other NestedListItem\n@param data",
            "modifiers": [],
            "params": [
              {
                "name": "data",
                "description": null,
                "type": null
              }
            ],
            "returns": null,
            "description": "Recursively build other NestedListItem"
          }
        ],
        "props": {
          "nestedLevel": {
            "type": {
              "name": "number"
            },
            "required": false,
            "description": "Keeps track of the current depth level"
          },
          "selected": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": "Currently selected node id"
          },
          "onTouchTap": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": "Callback triggered when an entry is selected"
          }
        },
        "require": "const {NestedListItem} = require('pydio').requireLib('components')"
      }
    ],
    "Components/users/addressbook/RightPanelCard.js": [
      {
        "description": "Container for UserCard or TeamCard",
        "displayName": "RightPanelCard",
        "methods": [],
        "props": {
          "pydio": {
            "type": {
              "name": "instanceOf",
              "value": "Pydio"
            },
            "required": false,
            "description": "Pydio instance"
          },
          "item": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": "Selected item"
          },
          "style": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": "Applies to root container"
          },
          "onRequestClose": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": "Forwarded to child"
          },
          "onDeleteAction": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": "Forwarded to child"
          },
          "onUpdateAction": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": "Forwarded to child"
          }
        },
        "require": "const {RightPanelCard} = require('pydio').requireLib('components')"
      }
    ],
    "Components/users/addressbook/SearchForm.js": [
      {
        "description": "Ready to use Form + Result List for search users",
        "displayName": "SearchForm",
        "methods": [
          {
            "name": "search",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "onChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "searchLabel": {
            "type": {
              "name": "string"
            },
            "required": true,
            "description": "Label displayed in the search field"
          },
          "onSearch": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": "Callback triggered to search"
          },
          "style": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": "Will be appended to the root element"
          },
          "underlineShow": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": "To be applied on TextField"
          }
        },
        "require": "const {SearchForm} = require('pydio').requireLib('components')"
      }
    ],
    "Components/users/addressbook/SearchPanel.js": [
      {
        "description": "Ready to use Form + Result List for search users",
        "displayName": "SearchPanel",
        "methods": [
          {
            "name": "onSearch",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "params": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": "Optional parameters added to listUsers() request"
          },
          "searchLabel": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": "Label displayed in the toolbar"
          },
          "onItemClicked": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": "Callback triggered when a search result is clicked"
          },
          "item": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": "Currently selected item, required for navigation"
          },
          "onFolderClicked": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": "Callback triggered if the result is a collection"
          }
        },
        "require": "const {SearchPanel} = require('pydio').requireLib('components')"
      }
    ],
    "Components/users/addressbook/TeamCard.js": [
      {
        "description": "Display info about a Team inside a popover-able card",
        "displayName": "TeamCard",
        "methods": [
          {
            "name": "loadMembers",
            "docblock": "Use loader to get team participants\n@param item",
            "modifiers": [],
            "params": [
              {
                "name": "item",
                "description": null,
                "type": null
              }
            ],
            "returns": null,
            "description": "Use loader to get team participants"
          },
          {
            "name": "onLabelChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "e",
                "type": null
              },
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "updateLabel",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "pydio": {
            "type": {
              "name": "instanceOf",
              "value": "Pydio"
            },
            "required": false,
            "description": "Pydio instance"
          },
          "item": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": "Team data object"
          },
          "style": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": "Applied to root container"
          },
          "onRequestClose": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": "Called to dismiss the popover"
          },
          "onDeleteAction": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": "Delete current team"
          },
          "onUpdateAction": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": "Update current team"
          }
        },
        "require": "const {TeamCard} = require('pydio').requireLib('components')"
      }
    ],
    "Components/users/addressbook/UserCard.js": [
      {
        "description": "Card presentation of a user. Relies on the UserAvatar object,\nplus the PydioForm.UserCreationForm when in edit mode.",
        "displayName": "UserCard",
        "methods": [],
        "props": {
          "pydio": {
            "type": {
              "name": "instanceOf",
              "value": "Pydio"
            },
            "required": false,
            "description": "Pydio instance"
          },
          "item": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": "Team data object"
          },
          "style": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": "Applied to root container"
          },
          "onRequestClose": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": "Called to dismiss the popover"
          },
          "onDeleteAction": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": "Delete current team"
          },
          "onUpdateAction": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": "Update current team"
          }
        },
        "require": "const {UserCard} = require('pydio').requireLib('components')"
      }
    ],
    "Components/users/addressbook/UsersList.js": [
      {
        "description": "",
        "displayName": "UsersList",
        "methods": [
          {
            "name": "onLabelKeyEnter",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "e",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onLabelChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "e",
                "type": null
              },
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "updateLabel",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "item": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "onCreateAction": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "onDeleteAction": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "onItemClicked": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "onFolderClicked": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "onEditLabel": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "mode": {
            "type": {
              "name": "enum",
              "value": [
                {
                  "value": "'book'",
                  "computed": false
                },
                {
                  "value": "'selector'",
                  "computed": false
                },
                {
                  "value": "'inner'",
                  "computed": false
                }
              ]
            },
            "required": false,
            "description": ""
          },
          "bookColumn": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          }
        },
        "require": "const {UsersList} = require('pydio').requireLib('components')"
      }
    ],
    "Components/users/avatar/ActionsPanel.js": [
      {
        "description": "",
        "displayName": "ActionsPanel",
        "methods": [
          {
            "name": "onTeamSelected",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "item",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onUserSelected",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "item",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "openPicker",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "openPolicies",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "openMailer",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "user": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": "User data, props must pass at least one of 'user' or 'team'"
          },
          "team": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": "Team data, props must pass at least one of 'user' or 'team'"
          },
          "userEditable": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": "For users, whether it is editable or not"
          }
        },
        "require": "const {ActionsPanel} = require('pydio').requireLib('components')"
      }
    ],
    "Components/users/avatar/GraphPanel.js": [
      {
        "description": "Display information about user or team relations",
        "displayName": "GraphPanel",
        "methods": [],
        "require": "const {GraphPanel} = require('pydio').requireLib('components')"
      }
    ],
    "Components/users/avatar/UserAvatar.js": [
      {
        "description": "Generic component for display a user and her avatar (first letters or photo)",
        "displayName": "UserAvatar",
        "methods": [
          {
            "name": "loadPublicData",
            "docblock": "@param userId string\n@param idmUser {IdmUser}",
            "modifiers": [],
            "params": [
              {
                "name": "userId",
                "description": "string",
                "type": null
              },
              {
                "name": "idmUser",
                "description": "{IdmUser}",
                "type": null
              }
            ],
            "returns": null,
            "description": null
          }
        ],
        "props": {
          "userId": {
            "type": {
              "name": "string"
            },
            "required": true,
            "description": "Id of the user to be loaded"
          },
          "pydio": {
            "type": {
              "name": "instanceOf",
              "value": "Pydio"
            },
            "required": false,
            "description": "Pydio instance"
          },
          "userLabel": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": "Label of the user, if we already have it (otherwise will be loaded)"
          },
          "userType": {
            "type": {
              "name": "enum",
              "value": [
                {
                  "value": "'user'",
                  "computed": false
                },
                {
                  "value": "'group'",
                  "computed": false
                },
                {
                  "value": "'remote'",
                  "computed": false
                },
                {
                  "value": "'team'",
                  "computed": false
                }
              ]
            },
            "required": false,
            "description": "Type of user",
            "defaultValue": {
              "value": "'user'",
              "computed": false
            }
          },
          "icon": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": "Icon to be displayed in avatar"
          },
          "richCard": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": "Display a rich card or a simple avatar+label chip"
          },
          "richOnHover": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": "If not rich, display a rich card as popover on mouseover"
          },
          "richOnClick": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": "If not rich, display a rich card as popover on click"
          },
          "userEditable": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": "Add edit action to the card"
          },
          "onEditAction": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": "Triggered after successful edition"
          },
          "onDeleteAction": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": "Triggered after deletion"
          },
          "reloadAction": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": "Triggered if a reload is required"
          },
          "displayLabel": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": "Display label element or not",
            "defaultValue": {
              "value": "true",
              "computed": false
            }
          },
          "displayLocalLabel": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": "Display label element or not"
          },
          "displayAvatar": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": "Display avatar element or not",
            "defaultValue": {
              "value": "true",
              "computed": false
            }
          },
          "avatarOnly": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": "Display only avatar"
          },
          "useDefaultAvatar": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": "Use default avatar"
          },
          "avatarSize": {
            "type": {
              "name": "number"
            },
            "required": false,
            "description": "Avatar size, 40px by default",
            "defaultValue": {
              "value": "40",
              "computed": false
            }
          },
          "avatarLetters": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": "If only the default icon is available, will display\nthe first letters of the name instead"
          },
          "noActionsPanel": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": "Do not display ActionsPanel in RichCard mode"
          },
          "className": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": "Add class name to root element",
            "defaultValue": {
              "value": "'user-avatar-widget'",
              "computed": false
            }
          },
          "labelClassName": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": "Add class name to label element",
            "defaultValue": {
              "value": "'user-label'",
              "computed": false
            }
          },
          "avatarClassName": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": "Add class name to avatar element",
            "defaultValue": {
              "value": "'user-avatar'",
              "computed": false
            }
          },
          "style": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": "Add style to root element"
          },
          "labelStyle": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": "Add style to label element"
          },
          "avatarStyle": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": "Add style to avatar element"
          }
        },
        "require": "const {UserAvatar} = require('pydio').requireLib('components')"
      }
    ],
    "Components/views/EmptyStateView.js": [
      {
        "description": "",
        "displayName": "EmptyStateView",
        "methods": [],
        "props": {
          "pydio": {
            "type": {
              "name": "instanceOf",
              "value": "Pydio"
            },
            "required": true,
            "description": ""
          },
          "iconClassName": {
            "type": {
              "name": "string"
            },
            "required": true,
            "description": ""
          },
          "primaryTextId": {
            "type": {
              "name": "string"
            },
            "required": true,
            "description": ""
          },
          "secondaryTextId": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "actionLabelId": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "actionCallback": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "actionStyle": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "style": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "iconStyle": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "legendStyle": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "getMessage": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          }
        },
        "require": "const {EmptyStateView} = require('pydio').requireLib('components')"
      }
    ],
    "Components/views/ModalAppBar.js": [
      {
        "description": "",
        "displayName": "ModalAppBar",
        "methods": [],
        "require": "const {ModalAppBar} = require('pydio').requireLib('components')"
      }
    ],
    "Components/views/TreeView.js": [
      {
        "description": "",
        "displayName": "ContextMenuWrapper",
        "methods": [],
        "require": "const {TreeView} = require('pydio').requireLib('components')"
      },
      {
        "description": "Tree Node",
        "methods": [
          {
            "name": "listenToNode",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "stopListening",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "_nodeToChildren",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "onNodeSelect",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "ev",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onChildDisplayToggle",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "ev",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "nodeIsSelected",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "n",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "collapse": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "false",
              "computed": false
            }
          },
          "forceExpand": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "childrenOnly": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "false",
              "computed": false
            }
          },
          "depth": {
            "type": {
              "name": "number"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "0",
              "computed": false
            }
          },
          "onNodeSelect": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "function(node){}",
              "computed": false
            }
          },
          "node": {
            "type": {
              "name": "instanceOf",
              "value": "AjxpNode"
            },
            "required": false,
            "description": ""
          },
          "dataModel": {
            "type": {
              "name": "instanceOf",
              "value": "PydioDataModel"
            },
            "required": false,
            "description": ""
          },
          "forceLabel": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "nodeIsSelected": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "checkboxes": {
            "type": {
              "name": "array"
            },
            "required": false,
            "description": ""
          },
          "checkboxesValues": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "checkboxesComputeStatus": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "onCheckboxCheck": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "paddingOffset": {
            "type": {
              "name": "number"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "0",
              "computed": false
            }
          }
        }
      },
      {
        "description": "Simple openable / loadable tree taking AjxpNode as inputs",
        "methods": [
          {
            "name": "onNodeSelect",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "showRoot": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "true",
              "computed": false
            }
          },
          "rootLabel": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "onNodeSelect": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "this.onNodeSelect",
              "computed": true
            }
          },
          "node": {
            "type": {
              "name": "instanceOf",
              "value": "AjxpNode"
            },
            "required": true,
            "description": ""
          },
          "dataModel": {
            "type": {
              "name": "instanceOf",
              "value": "PydioDataModel"
            },
            "required": true,
            "description": ""
          },
          "selectable": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "selectableMultiple": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "initialSelectionModel": {
            "type": {
              "name": "array"
            },
            "required": false,
            "description": ""
          },
          "onSelectionChange": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "forceExpand": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "nodeIsSelected": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "checkboxes": {
            "type": {
              "name": "array"
            },
            "required": false,
            "description": ""
          },
          "checkboxesValues": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "checkboxesComputeStatus": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "onCheckboxCheck": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "paddingOffset": {
            "type": {
              "name": "number"
            },
            "required": false,
            "description": ""
          }
        }
      },
      {
        "description": "",
        "methods": [
          {
            "name": "onNodeSelect",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "showRoot": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "true",
              "computed": false
            }
          },
          "rootLabel": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "onNodeSelect": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "this.onNodeSelect",
              "computed": true
            }
          },
          "node": {
            "type": {
              "name": "instanceOf",
              "value": "AjxpNode"
            },
            "required": true,
            "description": ""
          },
          "dataModel": {
            "type": {
              "name": "instanceOf",
              "value": "PydioDataModel"
            },
            "required": true,
            "description": ""
          },
          "selectable": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "selectableMultiple": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "initialSelectionModel": {
            "type": {
              "name": "array"
            },
            "required": false,
            "description": ""
          },
          "onSelectionChange": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "forceExpand": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "nodeIsSelected": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "checkboxes": {
            "type": {
              "name": "array"
            },
            "required": false,
            "description": ""
          },
          "checkboxesValues": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "checkboxesComputeStatus": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "onCheckboxCheck": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "paddingOffset": {
            "type": {
              "name": "number"
            },
            "required": false,
            "description": ""
          }
        }
      },
      {
        "description": "",
        "methods": [
          {
            "name": "nodeObserver",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "treeNodeSelected",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "n",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "nodeIsSelected",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "n",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "pydio": {
            "type": {
              "name": "instanceOf",
              "value": "Pydio"
            },
            "required": true,
            "description": ""
          },
          "dataModel": {
            "type": {
              "name": "instanceOf",
              "value": "PydioDataModel"
            },
            "required": true,
            "description": ""
          },
          "className": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "onNodeSelected": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "draggable": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "CoreActions/dialog/PasswordDialog.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "getButtons",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "updater",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "submit",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "passValidStatusChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "status",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "dialogTitle": {
            "defaultValue": {
              "value": "pydio.MessageHash[194]",
              "computed": true
            },
            "required": false
          },
          "dialogIsModal": {
            "defaultValue": {
              "value": "true",
              "computed": false
            },
            "required": false
          },
          "dialogSize": {
            "defaultValue": {
              "value": "'sm'",
              "computed": false
            },
            "required": false
          }
        }
      }
    ],
    "CoreActions/dialog/SplashDialog.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "submit",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "openDocs",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "openForum",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "openGithub",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "dialogTitle": {
            "defaultValue": {
              "value": "''",
              "computed": false
            },
            "required": false
          },
          "dialogSize": {
            "defaultValue": {
              "value": "'lg'",
              "computed": false
            },
            "required": false
          },
          "dialogIsModal": {
            "defaultValue": {
              "value": "false",
              "computed": false
            },
            "required": false
          },
          "dialogPadding": {
            "defaultValue": {
              "value": "false",
              "computed": false
            },
            "required": false
          },
          "dialogScrollBody": {
            "defaultValue": {
              "value": "true",
              "computed": false
            },
            "required": false
          }
        }
      }
    ],
    "Form/fields/AutocompleteBox.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "handleUpdateInput",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "searchText",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "handleNewRequest",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "chosenValue",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const {AutocompleteBox} = require('pydio').requireLib('form')"
      }
    ],
    "Form/fields/AutocompleteTree.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "handleUpdateInput",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "searchText",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "handleNewRequest",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "chosenValue",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "loadValues",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const {AutocompleteTree} = require('pydio').requireLib('form')"
      }
    ],
    "Form/fields/FileDropzone.js": [
      {
        "description": "UI to drop a file (or click to browse), used by the InputImage component.",
        "methods": [
          {
            "name": "onDragLeave",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "e",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onDragOver",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "e",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onFilePicked",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "e",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onFolderPicked",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "e",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onDrop",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "e",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onClick",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "open",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "openFolderPicker",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "onDrop": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "function(){}",
              "computed": false
            }
          },
          "ignoreNativeDrop": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "size": {
            "type": {
              "name": "number"
            },
            "required": false,
            "description": ""
          },
          "style": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "dragActiveStyle": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "supportClick": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "true",
              "computed": false
            }
          },
          "accept": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "multiple": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "true",
              "computed": false
            }
          }
        },
        "require": "const {FileDropzone} = require('pydio').requireLib('form')"
      }
    ],
    "Form/fields/InputBoolean.js": [
      {
        "description": "Boolean input",
        "methods": [
          {
            "name": "onCheck",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "newValue",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getBooleanState",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "skipBufferChanges": {
            "defaultValue": {
              "value": "true",
              "computed": false
            },
            "required": false
          }
        },
        "require": "const {InputBoolean} = require('pydio').requireLib('form')"
      }
    ],
    "Form/fields/InputButton.js": [
      {
        "description": "Simple RaisedButton executing the applyButtonAction",
        "methods": [
          {
            "name": "applyButton",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "require": "const {InputButton} = require('pydio').requireLib('form')"
      }
    ],
    "Form/fields/InputImage.js": [
      {
        "description": "UI for displaying and uploading an image,\nusing the binaryContext string.",
        "methods": [
          {
            "name": "getBinaryUrl",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "props",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getUploadUrl",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "uploadComplete",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "newBinaryName",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "htmlUpload",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "onDrop",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "files",
                "type": null
              },
              {
                "name": "event",
                "type": null
              },
              {
                "name": "dropzone",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "clearImage",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "attributes": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "binary_context": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          }
        },
        "require": "const {InputImage} = require('pydio').requireLib('form')"
      }
    ],
    "Form/fields/InputInteger.js": [
      {
        "description": "Text input that is converted to integer, and\nthe UI can react to arrows for incrementing/decrementing values",
        "methods": [
          {
            "name": "keyDown",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const {InputInteger} = require('pydio').requireLib('form')"
      }
    ],
    "Form/fields/InputSelectBox.js": [
      {
        "description": "Select box input conforming to Pydio standard form parameter.",
        "methods": [
          {
            "name": "onDropDownChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "index",
                "type": null
              },
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onMultipleSelect",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "index",
                "type": null
              },
              {
                "name": "newValue",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onMultipleRemove",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "skipBufferChanges": {
            "defaultValue": {
              "value": "true",
              "computed": false
            },
            "required": false
          }
        },
        "require": "const {InputSelectBox} = require('pydio').requireLib('form')"
      }
    ],
    "Form/fields/MonitoringLabel.js": [
      {
        "description": "",
        "methods": [],
        "require": "const {MonitoringLabel} = require('pydio').requireLib('form')"
      }
    ],
    "Form/fields/TextField.js": [
      {
        "description": "Text input, can be single line, multiLine, or password, depending on the\nattributes.type key.",
        "methods": [],
        "require": "const {TextField} = require('pydio').requireLib('form')"
      }
    ],
    "Form/fields/ValidLogin.js": [
      {
        "description": "Text input, can be single line, multiLine, or password, depending on the\nattributes.type key.",
        "methods": [
          {
            "name": "textValueChanged",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const {ValidLogin} = require('pydio').requireLib('form')"
      }
    ],
    "Form/fields/ValidPassword.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "isValid",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "checkMinLength",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getMessage",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "messageId",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "updatePassState",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "onPasswordChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onConfirmChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const {ValidPassword} = require('pydio').requireLib('form')"
      }
    ],
    "Form/panel/FormHelper.js": [
      {
        "description": "Display a form companion linked to a given input.\nProps: helperData : contains the pluginId and the whole paramAttributes",
        "methods": [
          {
            "name": "closeHelper",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "helperData": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "close": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": ""
          }
        },
        "require": "const {FormHelper} = require('pydio').requireLib('form')"
      }
    ],
    "Form/panel/FormPanel.js": [
      {
        "description": "Form Panel is a ready to use form builder inherited for Pydio's legacy parameters formats ('standard form').\nIt is very versatile and can basically take a set of parameters defined in the XML manifests (or defined manually\nin JS) and display them as a user form.\nIt is a controlled component: it takes a {values} object and triggers back an onChange() function.\n\nSee also Manager class to get some utilitary functions to parse parameters and extract values for the form.",
        "methods": [
          {
            "name": "externallySelectTab",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "index",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getValues",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "onParameterChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "paramName",
                "type": null
              },
              {
                "name": "newValue",
                "type": null
              },
              {
                "name": "oldValue",
                "type": null
              },
              {
                "name": "additionalFormData",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "newValues",
                "type": null
              },
              {
                "name": "dirty",
                "type": null
              },
              {
                "name": "removeValues",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onSubformChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "newValues",
                "type": null
              },
              {
                "name": "dirty",
                "type": null
              },
              {
                "name": "removeValues",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onSubformValidStatusChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "newValidValue",
                "type": null
              },
              {
                "name": "failedMandatories",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "applyButtonAction",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "parameters",
                "type": null
              },
              {
                "name": "callback",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getValuesForPOST",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "values",
                "type": null
              },
              {
                "name": "prefix",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "checkValidStatus",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "values",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "renderGroupHeader",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "groupLabel",
                "type": null
              },
              {
                "name": "accordionize",
                "type": null
              },
              {
                "name": "index",
                "type": null
              },
              {
                "name": "active",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "parameters": {
            "type": {
              "name": "array"
            },
            "required": true,
            "description": "Array of Pydio StandardForm parameters"
          },
          "values": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": "Object containing values for the parameters",
            "defaultValue": {
              "value": "{}",
              "computed": false
            }
          },
          "onParameterChange": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": "Trigger unitary function when one form input changes."
          },
          "onChange": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": "Send all form values onchange, including eventually the removed ones (for dynamic panels)"
          },
          "onValidStatusChange": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": "Triggered when the form globabally switches between valid and invalid state\nTriggered once at form construction"
          },
          "disabled": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": "Disable the whole form at once"
          },
          "binary_context": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": "String added to the image inputs for upload/download operations"
          },
          "depth": {
            "type": {
              "name": "number"
            },
            "required": false,
            "description": "0 by default, subforms will have their zDepth value increased by one",
            "defaultValue": {
              "value": "0",
              "computed": false
            }
          },
          "header": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": "Add an additional header component (added inside first subpanel)"
          },
          "footer": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": "Add an additional footer component (added inside last subpanel)"
          },
          "additionalPanes": {
            "type": {
              "name": "shape",
              "value": {
                "top": {
                  "name": "array",
                  "required": false
                },
                "bottom": {
                  "name": "array",
                  "required": false
                }
              }
            },
            "required": false,
            "description": "Add other arbitrary panels, either at the top or the bottom"
          },
          "tabs": {
            "type": {
              "name": "array"
            },
            "required": false,
            "description": "An array of tabs containing groupNames. Groups will be splitted\naccross those tabs"
          },
          "onTabChange": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": "Fired when a the active tab changes"
          },
          "accordionizeIfGroupsMoreThan": {
            "type": {
              "name": "number"
            },
            "required": false,
            "description": "A bit like tabs, but using accordion-like layout"
          },
          "onScrollCallback": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": "Forward an event when scrolling the form"
          },
          "limitToGroups": {
            "type": {
              "name": "array"
            },
            "required": false,
            "description": "Restrict to a subset of field groups"
          },
          "skipFieldsTypes": {
            "type": {
              "name": "array"
            },
            "required": false,
            "description": "Ignore some specific fields types"
          },
          "setHelperData": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": "Pass pointers to the Pydio Companion container"
          },
          "checkHasHelper": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": "Function to check if the companion is active or none and if a parameter\nhas helper data"
          },
          "helperTestFor": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": "Test for parameter"
          }
        },
        "require": "const {FormPanel} = require('pydio').requireLib('form')"
      }
    ],
    "Form/panel/GroupSwitchPanel.js": [
      {
        "description": "Sub form with a selector, switching its fields depending\non the selector value.",
        "methods": [
          {
            "name": "computeSubPanelParameters",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "clearSubParametersValues",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "parentName",
                "type": null
              },
              {
                "name": "newValue",
                "type": null
              },
              {
                "name": "newFields",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "newValues",
                "type": null
              },
              {
                "name": "dirty",
                "type": null
              },
              {
                "name": "removeValues",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "paramAttributes": {
            "type": {
              "name": "object"
            },
            "required": true,
            "description": ""
          },
          "parameters": {
            "type": {
              "name": "array"
            },
            "required": true,
            "description": ""
          },
          "values": {
            "type": {
              "name": "object"
            },
            "required": true,
            "description": ""
          },
          "onChange": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": ""
          }
        },
        "require": "const {GroupSwitchPanel} = require('pydio').requireLib('form')"
      }
    ],
    "Form/panel/ReplicatedGroup.js": [
      {
        "description": "",
        "displayName": "ReplicatedGroup",
        "methods": [],
        "require": "const {ReplicatedGroup} = require('pydio').requireLib('form')"
      }
    ],
    "Form/panel/ReplicationPanel.js": [
      {
        "description": "Sub form replicating itself (+/-)",
        "methods": [
          {
            "name": "buildSubValue",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "values",
                "type": null
              },
              {
                "name": "index",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "indexedValues",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "rowsArray",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "indexValues",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "rowsArray",
                "type": null
              },
              {
                "name": "removeLastRow",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "instances",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "addRow",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "removeRow",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "index",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "swapRows",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "i",
                "type": null
              },
              {
                "name": "j",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "index",
                "type": null
              },
              {
                "name": "newValues",
                "type": null
              },
              {
                "name": "dirty",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onParameterChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "index",
                "type": null
              },
              {
                "name": "paramName",
                "type": null
              },
              {
                "name": "newValue",
                "type": null
              },
              {
                "name": "oldValue",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "parameters": {
            "type": {
              "name": "array"
            },
            "required": true,
            "description": ""
          },
          "values": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "onChange": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "disabled": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "binary_context": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "depth": {
            "type": {
              "name": "number"
            },
            "required": false,
            "description": ""
          }
        },
        "require": "const {ReplicationPanel} = require('pydio').requireLib('form')"
      }
    ],
    "HOCs/errors.js": [
      {
        "description": "",
        "displayName": "Errorbar",
        "methods": [],
        "require": "const {errors} = require('pydio').requireLib('hoc')"
      }
    ],
    "HOCs/loader.js": [
      {
        "description": "",
        "displayName": "Loadingbar",
        "methods": [],
        "require": "const {loader} = require('pydio').requireLib('hoc')"
      }
    ],
    "HOCs/localisation/controls.js": [
      {
        "description": "",
        "displayName": "Locate",
        "methods": [],
        "require": "const {controls} = require('pydio').requireLib('hoc')"
      }
    ],
    "HOCs/size/providers.js": [
      {
        "description": "",
        "displayName": "ContainerSizeProvider",
        "methods": [
          {
            "name": "resize",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "require": "const {providers} = require('pydio').requireLib('hoc')"
      }
    ],
    "ReactUI/AsyncComponent.js": [
      {
        "description": "Load a component from server (if not already loaded) based on its namespace.",
        "displayName": "AsyncComponent",
        "methods": [
          {
            "name": "_handleLoad",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "namespace": {
            "type": {
              "name": "string"
            },
            "required": true,
            "description": ""
          },
          "componentName": {
            "type": {
              "name": "string"
            },
            "required": true,
            "description": ""
          }
        },
        "require": "const {AsyncComponent} = require('pydio').requireLib('boot')"
      }
    ],
    "ReactUI/HiddenDownloadForm.js": [
      {
        "description": "",
        "displayName": "HiddenDownloadForm",
        "methods": [
          {
            "name": "propTypes",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "triggerDownload",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "userSelection",
                "type": null
              },
              {
                "name": "parameters",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "pydio": {
            "type": {
              "name": "instanceOf",
              "value": "Pydio"
            },
            "required": true,
            "description": ""
          }
        },
        "require": "const {HiddenDownloadForm} = require('pydio').requireLib('boot')"
      }
    ],
    "ReactUI/Loader.js": [
      {
        "description": "",
        "displayName": "Loader",
        "methods": [],
        "require": "const {Loader} = require('pydio').requireLib('boot')"
      }
    ],
    "ReactUI/TemplateBuilder.js": [
      {
        "description": "",
        "displayName": "Template",
        "methods": [],
        "require": "const {TemplateBuilder} = require('pydio').requireLib('boot')"
      },
      {
        "description": "",
        "displayName": "TemplateBuilder",
        "methods": [],
        "props": {
          "pydio": {
            "type": {
              "name": "instanceOf",
              "value": "Pydio"
            },
            "required": false,
            "description": ""
          },
          "containerId": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "ReactUI/modal/AsyncModal.js": [
      {
        "description": "Specific AsyncComponent for Modal Dialog",
        "methods": [
          {
            "name": "activateResizeObserver",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "deactivateResizeObserver",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "updateButtons",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "actions",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "initModalFromComponent",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "component",
                "type": null
              },
              {
                "name": "returnState",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "computeBackgroundData",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "size": {
            "type": {
              "name": "enum",
              "value": [
                {
                  "value": "'xxs'",
                  "computed": false
                },
                {
                  "value": "'xs'",
                  "computed": false
                },
                {
                  "value": "'sm'",
                  "computed": false
                },
                {
                  "value": "'md'",
                  "computed": false
                },
                {
                  "value": "'lg'",
                  "computed": false
                },
                {
                  "value": "'xl'",
                  "computed": false
                }
              ]
            },
            "required": false,
            "description": ""
          },
          "padding": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "bgBlur": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          }
        },
        "require": "const {AsyncModal} = require('pydio').requireLib('boot')"
      }
    ],
    "ReactUI/modal/CSSBlurBackground.js": [
      {
        "description": "",
        "displayName": "CSSBlurBackground",
        "methods": [
          {
            "name": "activateResizeObserver",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "deactivateResizeObserver",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "computeBackgroundData",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "computeRatio",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "require": "const {CSSBlurBackground} = require('pydio').requireLib('boot')"
      }
    ],
    "ReactUI/modal/MessageBar.js": [
      {
        "description": "",
        "displayName": "ErrorStack",
        "methods": [
          {
            "name": "_attachClipboard",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "_detachClipboard",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "clearCopyMessage",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "require": "const {MessageBar} = require('pydio').requireLib('boot')"
      },
      {
        "description": "",
        "displayName": "MessageBar",
        "methods": [
          {
            "name": "error",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "message",
                "type": null
              },
              {
                "name": "actionLabel",
                "type": null
              },
              {
                "name": "actionCallback",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "info",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "message",
                "type": null
              },
              {
                "name": "actionLabel",
                "type": null
              },
              {
                "name": "actionCallback",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "handleClose",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ],
    "ReactUI/modal/Modal.js": [
      {
        "description": "",
        "displayName": "Modal",
        "methods": [
          {
            "name": "activityObserver",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "activityState",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "open",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "namespace",
                "type": null
              },
              {
                "name": "component",
                "type": null
              },
              {
                "name": "props",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "handleLoad",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "handleClose",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "require": "const {Modal} = require('pydio').requireLib('boot')"
      }
    ],
    "ReactUI/modal/PromptDialog.js": [
      {
        "description": "Ready-to-use dialog for requiring information (text or password) from the user",
        "methods": [
          {
            "name": "submit",
            "docblock": "Trigger props callback and dismiss modal",
            "modifiers": [],
            "params": [],
            "returns": null,
            "description": "Trigger props callback and dismiss modal"
          }
        ],
        "props": {
          "dialogTitleId": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": "Message ID used for the dialog title"
          },
          "legendId": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": "Message ID or string used for dialog legend"
          },
          "fieldLabelId": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": "MessageID used for the field Floating Label Text"
          },
          "fieldType": {
            "type": {
              "name": "enum",
              "value": [
                {
                  "value": "'text'",
                  "computed": false
                },
                {
                  "value": "'password'",
                  "computed": false
                }
              ]
            },
            "required": false,
            "description": "Either text or password",
            "defaultValue": {
              "value": "'text'",
              "computed": false
            }
          },
          "submitValue": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": "Callback used at submit time"
          },
          "defaultValue": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": "Preset value displayed in the text field"
          },
          "defaultInputSelection": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": "Select a part of the default value [NOT IMPLEMENTED]"
          },
          "dialogTitle": {
            "defaultValue": {
              "value": "''",
              "computed": false
            },
            "required": false
          },
          "dialogIsModal": {
            "defaultValue": {
              "value": "true",
              "computed": false
            },
            "required": false
          }
        },
        "require": "const {PromptDialog} = require('pydio').requireLib('boot')"
      }
    ],
    "ReactUI/modal/ServerPromptDialog.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "redirect",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "submit",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "cancel",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "dialogTitleId": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": "Message ID used for the dialog title"
          },
          "dialogLegendId": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": "Main Message displayed in the body of the dialog"
          },
          "autoRedirectUrl": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": "If not empty, dialog will display and then trigger a redirection."
          },
          "fieldsDefinitions": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": "Object containing fields definition that must be shown to user\nand sent back to server. Fields can be text, password or hidden."
          },
          "dialogIsModal": {
            "defaultValue": {
              "value": "true",
              "computed": false
            },
            "required": false
          },
          "dialogSize": {
            "defaultValue": {
              "value": "'sm'",
              "computed": false
            },
            "required": false
          }
        },
        "require": "const {ServerPromptDialog} = require('pydio').requireLib('boot')"
      }
    ],
    "ReactUI/router/OAuthRouter.js": [
      {
        "description": "",
        "displayName": "ErrorDialog",
        "methods": [
          {
            "name": "dismiss",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "require": "const {OAuthRouter} = require('pydio').requireLib('boot')"
      }
    ],
    "ReactUI/router/Router.js": [
      {
        "description": "",
        "displayName": "getRoutes",
        "methods": [],
        "require": "const {Router} = require('pydio').requireLib('boot')"
      },
      {
        "description": "",
        "displayName": "PydioRouter",
        "methods": []
      }
    ],
    "ReactUI/tasks/JobEntry.js": [
      {
        "description": "",
        "displayName": "JobEntry",
        "methods": [],
        "require": "const {JobEntry} = require('pydio').requireLib('boot')"
      }
    ],
    "ReactUI/tasks/SingleJobProgress.js": [
      {
        "description": "",
        "displayName": "SingleJobProgress",
        "methods": [
          {
            "name": "reloadTask",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "require": "const {SingleJobProgress} = require('pydio').requireLib('boot')"
      }
    ],
    "ReactUI/tasks/TaskAction.js": [
      {
        "description": "",
        "displayName": "TaskAction",
        "methods": [
          {
            "name": "showAction",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "showProgress",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "require": "const {TaskAction} = require('pydio').requireLib('boot')"
      }
    ],
    "ReactUI/tasks/TasksPanel.js": [
      {
        "description": "TasksPanel provides a view on the tasks registered\nin the JobStore",
        "displayName": "TasksPanel",
        "methods": [
          {
            "name": "reload",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "recomputeInnerScroll",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "require": "const {TasksPanel} = require('pydio').requireLib('boot')"
      }
    ],
    "Workspaces/detailpanes/FileInfoCard.js": [
      {
        "description": "",
        "displayName": "FileInfoCard",
        "methods": [],
        "require": "const {FileInfoCard} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/detailpanes/GenericInfoCard.js": [
      {
        "description": "",
        "displayName": "GenericInfoCard",
        "methods": [
          {
            "name": "build",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "props",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const {GenericInfoCard} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/detailpanes/InfoPanel.js": [
      {
        "description": "",
        "displayName": "Template",
        "methods": [],
        "require": "const {InfoPanel} = require('pydio').requireLib('workspaces')"
      },
      {
        "description": "",
        "displayName": "InfoPanel",
        "methods": [
          {
            "name": "selectionToTemplates",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "initTemplates",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "dataModel": {
            "type": {
              "name": "instanceOf",
              "value": "PydioDataModel"
            },
            "required": true,
            "description": ""
          },
          "pydio": {
            "type": {
              "name": "instanceOf",
              "value": "Pydio"
            },
            "required": true,
            "description": ""
          },
          "style": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          }
        },
        "context": {
          "scrollArea": {
            "type": {
              "name": "object"
            },
            "required": false
          }
        }
      }
    ],
    "Workspaces/detailpanes/InfoPanelCard.js": [
      {
        "description": "Default InfoPanel Card",
        "displayName": "InfoPanelCard",
        "methods": [
          {
            "name": "toggle",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "require": "const {InfoPanelCard} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/detailpanes/RootNode.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "loadData",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "props",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const {RootNode} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/editor/App.js": [
      {
        "description": "",
        "displayName": "App",
        "methods": [],
        "require": "const {App} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/editor/components/editor/Editor.js": [
      {
        "description": "",
        "displayName": "Editor",
        "methods": [
          {
            "name": "handleBlurOnSelection",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "e",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "handleFocusOnSelection",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "e",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "renderChild",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "require": "const {Editor} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/editor/components/editor/EditorButton.js": [
      {
        "description": "",
        "methods": [],
        "require": "const {EditorButton} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/editor/components/editor/EditorTab.js": [
      {
        "description": "",
        "displayName": "Tab",
        "methods": [
          {
            "name": "styles",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          }
        ],
        "require": "const {EditorTab} = require('pydio').requireLib('workspaces')"
      },
      {
        "description": "",
        "displayName": "BottomBar",
        "methods": []
      }
    ],
    "Workspaces/editor/components/editor/EditorToolbar.js": [
      {
        "description": "",
        "displayName": "EditorToolbar",
        "methods": [
          {
            "name": "onClose",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "onMinimise",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "require": "const {EditorToolbar} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/editor/components/menu/MainButton.js": [
      {
        "description": "",
        "displayName": "Button",
        "methods": [],
        "require": "const {MainButton} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/editor/components/menu/Menu.js": [
      {
        "description": "",
        "displayName": "Menu",
        "methods": [
          {
            "name": "renderChild",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "require": "const {Menu} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/editor/components/menu/MenuGroup.js": [
      {
        "description": "",
        "displayName": "MenuGroup",
        "methods": [],
        "require": "const {MenuGroup} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/editor/components/menu/MenuItem.js": [
      {
        "description": "",
        "displayName": "MenuItem",
        "methods": [],
        "require": "const {MenuItem} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/leftnav/BookmarksList.js": [
      {
        "description": "",
        "displayName": "BookmarksList",
        "methods": [
          {
            "name": "load",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "handleTouchTap",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "handleRequestClose",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "renderIcon",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "renderSecondLine",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "entryClicked",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const {BookmarksList} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/leftnav/LeftPanel.js": [
      {
        "description": "",
        "displayName": "LeftPanel",
        "methods": [],
        "props": {
          "pydio": {
            "type": {
              "name": "instanceOf",
              "value": "Pydio"
            },
            "required": true,
            "description": ""
          },
          "userWidgetProps": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "workspacesListProps": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "style": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "{}",
              "computed": false
            }
          }
        },
        "require": "const {LeftPanel} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/leftnav/UserWidget.js": [
      {
        "description": "",
        "displayName": "UserWidget",
        "methods": [
          {
            "name": "getPropTypes",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "showMenu",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "closeMenu",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "index",
                "type": null
              },
              {
                "name": "menuItem",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "applyAction",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "actionName",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const {UserWidget} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/search/components/AdvancedSearch.js": [
      {
        "description": "",
        "displayName": "AdvancedSearch",
        "methods": [
          {
            "name": "styles",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "textFieldChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "fieldName",
                "type": null
              },
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "values",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "renderField",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "key",
                "type": null
              },
              {
                "name": "val",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const {AdvancedSearch} = require('pydio').requireLib('workspaces')"
      },
      {
        "description": "",
        "displayName": "AdvancedMetaFields",
        "methods": [
          {
            "name": "build",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "children": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": ""
          }
        }
      }
    ],
    "Workspaces/search/components/DatePanel.js": [
      {
        "description": "",
        "displayName": "SearchDatePanel",
        "methods": [
          {
            "name": "styles",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          }
        ],
        "require": "const {DatePanel} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/search/components/FileFormatPanel.js": [
      {
        "description": "",
        "displayName": "SearchFileFormatPanel",
        "methods": [],
        "require": "const {FileFormatPanel} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/search/components/FileSizePanel.js": [
      {
        "description": "",
        "displayName": "SearchFileSizePanel",
        "methods": [
          {
            "name": "multiple",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "v",
                "type": null
              },
              {
                "name": "u",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const {FileSizePanel} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/search/components/MainSearch.js": [
      {
        "description": "Subpane for search form",
        "displayName": "MainSearch",
        "methods": [
          {
            "name": "propTypes",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "styles",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "onChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "title": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "mode": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "onOpen": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "onAdvanced": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "onMore": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "onClose": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "hintText": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "loading": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "scopeSelectorProps": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "showAdvanced": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          }
        },
        "require": "const {MainSearch} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/search/components/SearchForm.js": [
      {
        "description": "Multi-state search component",
        "displayName": "SearchForm",
        "methods": [
          {
            "name": "setMode",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "mode",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "update",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "newValues",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "changeSearchScope",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "scope",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "submit",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "require": "const {SearchForm} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/search/components/SearchScopeSelector.js": [
      {
        "description": "",
        "displayName": "SearchScopeSelector",
        "methods": [
          {
            "name": "propTypes",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "value": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "onChange": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": ""
          },
          "onTouchTap": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": ""
          },
          "style": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "labelStyle": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          }
        },
        "require": "const {SearchScopeSelector} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/views/AddressBookPanel.js": [
      {
        "description": "",
        "displayName": "AddressBookPanel",
        "methods": [
          {
            "name": "loadCell",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "renderListItem",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "acl",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const {AddressBookPanel} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/views/Breadcrumb.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "goTo",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "target",
                "type": null
              },
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "toggleMinFit",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "font",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const {Breadcrumb} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/views/CellChat.js": [
      {
        "description": "",
        "displayName": "CellChat",
        "methods": [
          {
            "name": "loadRoomData",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "require": "const {CellChat} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/views/CellsMessageToolbar.js": [
      {
        "description": "",
        "displayName": "CellsMessageToolbar",
        "methods": [],
        "require": "const {CellsMessageToolbar} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/views/EditionPanel.js": [
      {
        "description": "",
        "displayName": "EditionPanel",
        "methods": [
          {
            "name": "_handleUpdate",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "nodes",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "_handleNodePushed",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "object",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "_handleNodeRemoved",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "index",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const {EditionPanel} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/views/FSTemplate.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "openRightPanel",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "name",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "closeRightPanel",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "resizeAfterTransition",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "infoPanelContentChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "numberOfCards",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "openDrawer",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "pydio": {
            "type": {
              "name": "instanceOf",
              "value": "Pydio"
            },
            "required": false,
            "description": ""
          }
        },
        "require": "const {FSTemplate} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/views/FilePreview.js": [
      {
        "description": "",
        "displayName": "FilePreview",
        "methods": [
          {
            "name": "propTypes",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "defaultProps",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "getStyles",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "insertPreviewNode",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "previewNode",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "destroyPreviewNode",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "loadCoveringImage",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "force",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "loadPreviewFromEditor",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "editorClass",
                "type": null
              },
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "node": {
            "type": {
              "name": "instanceOf",
              "value": "AjxpNode"
            },
            "required": true,
            "description": ""
          },
          "loadThumbnail": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "richPreview": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": "",
            "defaultValue": {
              "value": "false",
              "computed": false
            }
          },
          "processing": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "style": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "mimeFontStyle": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "mimeClassName": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          }
        },
        "require": "const {FilePreview} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/views/MainFilesList.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "displayModeFromPrefs",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "defaultMode",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "displayModeToPrefs",
            "docblock": "Save displayMode to user prefs\n@param mode\n@return {string}",
            "modifiers": [],
            "params": [
              {
                "name": "mode",
                "description": null,
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "string"
              }
            },
            "description": "Save displayMode to user prefs"
          },
          {
            "name": "resize",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "recomputeThumbnailsDimension",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "nearest",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "entryRenderIcon",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              },
              {
                "name": "entryProps",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "entryRenderActions",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "entryHandleClicks",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              },
              {
                "name": "clickType",
                "type": null
              },
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "entryRenderSecondLine",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "switchDisplayMode",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "displayMode",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "buildDisplayModeItems",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "getPydioActions",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "keysOnly",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "computeLabel",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "tableEntryRenderCell",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "pydio": {
            "type": {
              "name": "instanceOf",
              "value": "Pydio"
            },
            "required": false,
            "description": ""
          },
          "horizontalRibbon": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          }
        },
        "require": "const {MainFilesList} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/views/MasterLayout.js": [
      {
        "description": "",
        "displayName": "MasterLayout",
        "methods": [
          {
            "name": "closeDrawer",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "e",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "require": "const {MasterLayout} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/views/OverlayIcon.js": [
      {
        "description": "",
        "displayName": "OverlayIcon",
        "methods": [
          {
            "name": "findAction",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "require": "const {OverlayIcon} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/views/TourGuide.js": [
      {
        "description": "",
        "displayName": "TourGuide",
        "methods": [],
        "require": "const {TourGuide} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/views/WelcomeTour.js": [
      {
        "description": "",
        "displayName": "Scheme",
        "methods": [],
        "require": "const {WelcomeTour} = require('pydio').requireLib('workspaces')"
      },
      {
        "description": "",
        "displayName": "IconScheme",
        "methods": [
          {
            "name": "nextIcon",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      },
      {
        "description": "",
        "displayName": "CreateMenuCard",
        "methods": []
      },
      {
        "description": "",
        "displayName": "InfoPanelCard",
        "methods": []
      },
      {
        "description": "",
        "displayName": "UserWidgetCard",
        "methods": []
      },
      {
        "description": "",
        "displayName": "WelcomeTour",
        "methods": [
          {
            "name": "discard",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "finished",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "Workspaces/wslist/WorkspaceEntry.js": [
      {
        "description": "",
        "displayName": "Badge",
        "methods": [],
        "require": "const {WorkspaceEntry} = require('pydio').requireLib('workspaces')"
      },
      {
        "description": "",
        "methods": [],
        "props": {
          "pydio": {
            "type": {
              "name": "instanceOf",
              "value": "Pydio"
            },
            "required": false,
            "description": ""
          },
          "onDecline": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "onAccept": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "mode": {
            "type": {
              "name": "enum",
              "value": [
                {
                  "value": "'new_share'",
                  "computed": false
                },
                {
                  "value": "'reject_accepted'",
                  "computed": false
                }
              ]
            },
            "required": false,
            "description": ""
          }
        }
      },
      {
        "description": "",
        "methods": [
          {
            "name": "getLetterBadge",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "handleAccept",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "handleDecline",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "handleOpenAlert",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "mode",
                "type": null
              },
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "handleCloseAlert",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "onClick",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "toggleFoldersPanelOpen",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "ev",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getRootItemStyle",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getItemStyle",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "roomPopover",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "pydio": {
            "type": {
              "name": "instanceOf",
              "value": "Pydio"
            },
            "required": true,
            "description": ""
          },
          "workspace": {
            "type": {
              "name": "instanceOf",
              "value": "Repository"
            },
            "required": true,
            "description": ""
          },
          "showFoldersTree": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "onHoverLink": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "onOutLink": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          }
        }
      },
      {
        "description": "",
        "displayName": "ContextMenuWrapper",
        "methods": []
      }
    ],
    "Workspaces/wslist/WorkspaceEntryMaterial.js": [
      {
        "description": "",
        "displayName": "WorkspaceEntryMaterial",
        "methods": [
          {
            "name": "onClick",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "pydio": {
            "type": {
              "name": "instanceOf",
              "value": "Pydio"
            },
            "required": true,
            "description": ""
          },
          "workspace": {
            "type": {
              "name": "instanceOf",
              "value": "Repository"
            },
            "required": true,
            "description": ""
          },
          "muiTheme": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          }
        },
        "require": "const {WorkspaceEntryMaterial} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/wslist/WorkspacePickerDialog.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "submit",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "workspaceTouchTap",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "wsId",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "dialogTitleId": {
            "defaultValue": {
              "value": "'user_home.90'",
              "computed": false
            },
            "required": false
          },
          "dialogSize": {
            "defaultValue": {
              "value": "'sm'",
              "computed": false
            },
            "required": false
          },
          "dialogPadding": {
            "defaultValue": {
              "value": "false",
              "computed": false
            },
            "required": false
          },
          "dialogIsModal": {
            "defaultValue": {
              "value": "true",
              "computed": false
            },
            "required": false
          },
          "dialogScrollBody": {
            "defaultValue": {
              "value": "true",
              "computed": false
            },
            "required": false
          }
        },
        "require": "const {WorkspacePickerDialog} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/wslist/WorkspacesList.js": [
      {
        "description": "",
        "displayName": "WorkspacesList",
        "methods": [
          {
            "name": "stateFromPydio",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "pydio",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "createRepositoryEnabled",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "require": "const {WorkspacesList} = require('pydio').requireLib('workspaces')"
      }
    ],
    "Workspaces/wslist/WorkspacesListMaterial.js": [
      {
        "description": "",
        "displayName": "WorkspacesListMaterial",
        "methods": [],
        "props": {
          "pydio": {
            "type": {
              "name": "instanceOf",
              "value": "Pydio"
            },
            "required": false,
            "description": ""
          },
          "workspaces": {
            "type": {
              "name": "instanceOf",
              "value": "Map"
            },
            "required": false,
            "description": ""
          },
          "filterByType": {
            "type": {
              "name": "enum",
              "value": [
                {
                  "value": "'shared'",
                  "computed": false
                },
                {
                  "value": "'entries'",
                  "computed": false
                },
                {
                  "value": "'create'",
                  "computed": false
                }
              ]
            },
            "required": false,
            "description": ""
          },
          "sectionTitleStyle": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "showTreeForWorkspace": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "onHoverLink": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "onOutLink": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "className": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "style": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          }
        },
        "require": "const {WorkspacesListMaterial} = require('pydio').requireLib('workspaces')"
      }
    ]
  },
  "gui.mobile": {
    "MobileExtensions.js": [
      {
        "description": "",
        "displayName": "MobileExtensions",
        "methods": []
      }
    ]
  },
  "meta.comments": {
    "infopanel.js": [
      {
        "description": "",
        "displayName": "InfoPanel",
        "methods": [
          {
            "name": "toggleChatOpen",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ]
  },
  "meta.exif": {
    "editor.js": [
      {
        "description": "",
        "displayName": "Editor",
        "methods": [
          {
            "name": "controls",
            "docblock": null,
            "modifiers": [
              "static"
            ],
            "params": [],
            "returns": null
          },
          {
            "name": "loadNodeContent",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "props",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "panel.js": [
      {
        "description": "",
        "displayName": "Panel",
        "methods": [
          {
            "name": "parseValues",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "mapLoaded",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "map",
                "type": null
              },
              {
                "name": "error",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "openInExifEditor",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "openInMapEditor",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ]
  },
  "meta.versions": {
    "HistoryDialog.js": [
      {
        "description": "",
        "displayName": "UserLinkWrapper",
        "methods": []
      },
      {
        "description": "",
        "displayName": "Paragraph",
        "methods": []
      },
      {
        "description": "",
        "methods": [
          {
            "name": "propsToState",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "nodeClicked",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "applyAction",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "action",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "node": {
            "type": {
              "name": "instanceOf",
              "value": "Node"
            },
            "required": true,
            "description": ""
          },
          "onRequestClose": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          }
        }
      },
      {
        "description": "",
        "methods": [
          {
            "name": "submit",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "dialogTitle": {
            "defaultValue": {
              "value": "''",
              "computed": false
            },
            "required": false
          },
          "dialogIsModal": {
            "defaultValue": {
              "value": "false",
              "computed": false
            },
            "required": false
          },
          "dialogSize": {
            "defaultValue": {
              "value": "'lg'",
              "computed": false
            },
            "required": false
          },
          "dialogPadding": {
            "defaultValue": {
              "value": "false",
              "computed": false
            },
            "required": false
          }
        }
      }
    ]
  },
  "access.homepage": {
    "apps/DlAppsCard.js": [
      {
        "description": "",
        "displayName": "DlAppsPanel",
        "methods": []
      },
      {
        "description": "",
        "methods": []
      }
    ],
    "apps/DownloadApp.js": [
      {
        "description": "",
        "displayName": "DownloadApp",
        "methods": [],
        "props": {
          "pydio": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.instanceOf(Pydio)"
            },
            "required": false,
            "description": ""
          },
          "id": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.string"
            },
            "required": false,
            "description": ""
          },
          "configs": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.object"
            },
            "required": false,
            "description": ""
          },
          "configHref": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.string"
            },
            "required": false,
            "description": ""
          },
          "iconClassName": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.string"
            },
            "required": false,
            "description": ""
          },
          "iconColor": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.string"
            },
            "required": false,
            "description": ""
          },
          "messageId": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.string"
            },
            "required": false,
            "description": ""
          },
          "tooltipId": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.string"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "apps/QRCodeCard.js": [
      {
        "description": "",
        "methods": []
      }
    ],
    "board/ColorPaper.js": [
      {
        "description": "Generic paper with a background color picked from palette",
        "displayName": "ColorPaper",
        "methods": [],
        "props": {
          "style": {
            "type": {
              "name": "object"
            },
            "required": true,
            "description": "Pass the proper style for grid layout"
          },
          "getCloseButton": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": "Legacy way of passing the close button, use closeButton prop instead"
          },
          "closeButton": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": "Passed by parent, through the asGridItem HOC"
          },
          "paletteIndex": {
            "type": {
              "name": "number"
            },
            "required": true,
            "description": "An integer to choose which color to pick"
          }
        }
      }
    ],
    "board/ConfigLogo.js": [
      {
        "description": "",
        "displayName": "ConfigLogo",
        "methods": []
      }
    ],
    "board/HomeDashboard.js": [
      {
        "description": "",
        "displayName": "AltDashboard",
        "methods": [
          {
            "name": "showTutorial",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "openDrawer",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "clearCloseTimeout",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ],
    "board/HomeSearchForm.js": [
      {
        "description": "",
        "displayName": "HomeSearchForm",
        "methods": [
          {
            "name": "update",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "queryString",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "submit",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "forceValue",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "board/WelcomeTour.js": [
      {
        "description": "",
        "displayName": "Scheme",
        "methods": []
      },
      {
        "description": "",
        "displayName": "WorkspacesCard",
        "methods": []
      },
      {
        "description": "",
        "displayName": "SearchCard",
        "methods": []
      },
      {
        "description": "",
        "displayName": "WidgetsCard",
        "methods": []
      },
      {
        "description": "",
        "displayName": "WelcomeTour",
        "methods": [
          {
            "name": "discard",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "finished",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "quicksend/QuickSendCard.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "fileDroppedOrPicked",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "monitor",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onDrop",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "files",
                "type": null
              },
              {
                "name": "event",
                "type": null
              },
              {
                "name": "source",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "targetWorkspaceSelected",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "wsId",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "quicksend/WorkspacePickerDialog.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "submit",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "workspaceTouchTap",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "wsId",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "dialogTitleId": {
            "defaultValue": {
              "value": "'user_home.90'",
              "computed": false
            },
            "required": false
          },
          "dialogSize": {
            "defaultValue": {
              "value": "'sm'",
              "computed": false
            },
            "required": false
          },
          "dialogPadding": {
            "defaultValue": {
              "value": "false",
              "computed": false
            },
            "required": false
          },
          "dialogIsModal": {
            "defaultValue": {
              "value": "true",
              "computed": false
            },
            "required": false
          },
          "dialogScrollBody": {
            "defaultValue": {
              "value": "true",
              "computed": false
            },
            "required": false
          }
        }
      }
    ],
    "recent/ActivityStreams.js": [
      {
        "description": "",
        "displayName": "ActivityStreamsPanel",
        "methods": []
      }
    ],
    "recent/SmartRecents.js": [
      {
        "description": "",
        "displayName": "RecentCard",
        "methods": []
      },
      {
        "description": "",
        "displayName": "SmartRecents",
        "methods": []
      }
    ],
    "videos/VideoCard.js": [
      {
        "description": "Display a list of tutorial videos as a material card",
        "methods": [
          {
            "name": "launchVideo",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "closePlayer",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "getTitle",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "messId",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "browse",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "direction",
                "type": null
              },
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "youtubeId": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "contentMessageId": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "videos/VideoPlayer.js": [
      {
        "description": "",
        "displayName": "VideoPlayer",
        "methods": [],
        "props": {
          "videoSrc": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.string"
            },
            "required": false,
            "description": ""
          },
          "closePlayer": {
            "type": {
              "name": "custom",
              "raw": "React.PropTypes.func"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "workspaces/WorkspacesListCard.js": [
      {
        "description": "",
        "displayName": "ThemeableTitle",
        "methods": []
      },
      {
        "description": "",
        "methods": []
      }
    ]
  },
  "action.share": {
    "ShareTemplates.js": [
      {
        "description": "",
        "displayName": "ConfigLogo",
        "methods": []
      },
      {
        "description": "",
        "displayName": "Copyright",
        "methods": []
      },
      {
        "description": "",
        "displayName": "DLTemplate",
        "methods": [
          {
            "name": "triggerDL",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      },
      {
        "description": "",
        "displayName": "FolderMinisite",
        "methods": []
      },
      {
        "description": "",
        "displayName": "FileMinisite",
        "methods": [
          {
            "name": "openEditorForNode",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              },
              {
                "name": "editorData",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      },
      {
        "description": "",
        "displayName": "DropZoneMinisite",
        "methods": []
      },
      {
        "description": "",
        "displayName": "FilmStripMinisite",
        "methods": [
          {
            "name": "openEditorForNode",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              },
              {
                "name": "editorData",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "dialog/cells/CellCard.js": [
      {
        "description": "",
        "displayName": "CellCard",
        "methods": [
          {
            "name": "usersInvitations",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "userObjects",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "dialog/cells/CreateCellDialog.js": [
      {
        "description": "Dialog for letting users create a workspace",
        "methods": [
          {
            "name": "submit",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "m",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "id",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "computeSummaryString",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "childContext": {
          "messages": {
            "type": {
              "name": "object"
            },
            "required": false
          },
          "getMessage": {
            "type": {
              "name": "func"
            },
            "required": false
          },
          "isReadonly": {
            "type": {
              "name": "func"
            },
            "required": false
          }
        }
      }
    ],
    "dialog/cells/EditCellDialog.js": [
      {
        "description": "Dialog for letting users create a workspace",
        "methods": [
          {
            "name": "submit",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "childContext": {
          "messages": {
            "type": {
              "name": "object"
            },
            "required": false
          },
          "getMessage": {
            "type": {
              "name": "func"
            },
            "required": false
          },
          "isReadonly": {
            "type": {
              "name": "func"
            },
            "required": false
          }
        }
      }
    ],
    "dialog/cells/NodesPicker.js": [
      {
        "description": "",
        "displayName": "NodesPicker",
        "methods": [
          {
            "name": "switchWorkspace",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "ws",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "handleTouchTap",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "handleRequestClose",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "onValidateNode",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "onNodeSelected",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "renderNodeLine",
            "docblock": "@param node TreeNode\n@return {XML}",
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "description": "TreeNode",
                "type": null
              }
            ],
            "returns": {
              "description": null,
              "type": {
                "name": "XML"
              }
            },
            "description": null
          }
        ]
      }
    ],
    "dialog/cells/SharedUserEntry.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "onRemove",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "onInvite",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "onUpdateRight",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "cellAcl": {
            "type": {
              "name": "object"
            },
            "required": true,
            "description": ""
          },
          "sendInvitations": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "onUserObjectRemove": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": ""
          },
          "onUserObjectUpdateRight": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": ""
          }
        }
      }
    ],
    "dialog/cells/SharedUsers.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "sendInvitationToAllUsers",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "clearAllUsers",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "valueSelected",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "userObject",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "pydio": {
            "type": {
              "name": "instanceOf",
              "value": "Pydio"
            },
            "required": false,
            "description": ""
          },
          "cellAcls": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "saveSelectionAsTeam": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "sendInvitations": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "showTitle": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "onUserObjectAdd": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": ""
          },
          "onUserObjectRemove": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": ""
          },
          "onUserObjectUpdateRight": {
            "type": {
              "name": "func"
            },
            "required": true,
            "description": ""
          }
        }
      }
    ],
    "dialog/cells/UserBadge.js": [
      {
        "description": "",
        "displayName": "UserBadge",
        "methods": [
          {
            "name": "renderMenu",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "label": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "avatar": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "type": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "menus": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "muiTheme": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "dialog/composite/CellsList.js": [
      {
        "description": "",
        "displayName": "CellsList",
        "methods": [
          {
            "name": "addToCellsMenuItems",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ],
    "dialog/composite/CompositeCard.js": [
      {
        "description": "",
        "displayName": "CompositeCard",
        "methods": [
          {
            "name": "attachClipboard",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "detachClipboard",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "usersInvitations",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "userObjects",
                "type": null
              },
              {
                "name": "cellModel",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "linkInvitation",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "linkModel",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "dismissMailer",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "submit",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ],
    "dialog/composite/CompositeDialog.js": [
      {
        "description": "",
        "methods": [],
        "props": {
          "pydio": {
            "type": {
              "name": "instanceOf",
              "value": "Pydio"
            },
            "required": true,
            "description": ""
          },
          "selection": {
            "type": {
              "name": "instanceOf",
              "value": "PydioDataModel"
            },
            "required": false,
            "description": ""
          },
          "readonly": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "dialogTitle": {
            "defaultValue": {
              "value": "''",
              "computed": false
            },
            "required": false
          },
          "dialogIsModal": {
            "defaultValue": {
              "value": "false",
              "computed": false
            },
            "required": false
          },
          "dialogPadding": {
            "defaultValue": {
              "value": "false",
              "computed": false
            },
            "required": false
          },
          "dialogSize": {
            "defaultValue": {
              "value": "'lg'",
              "computed": false
            },
            "required": false
          }
        },
        "childContext": {
          "messages": {
            "type": {
              "name": "object"
            },
            "required": false
          },
          "getMessage": {
            "type": {
              "name": "func"
            },
            "required": false
          },
          "isReadonly": {
            "type": {
              "name": "func"
            },
            "required": false
          }
        }
      }
    ],
    "dialog/composite/Mailer.js": [
      {
        "description": "",
        "displayName": "Mailer",
        "methods": [
          {
            "name": "toggleMailerData",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "data",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "dismissMailer",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "mailerProcessPost",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "Email",
                "type": null
              },
              {
                "name": "users",
                "type": null
              },
              {
                "name": "subject",
                "type": null
              },
              {
                "name": "message",
                "type": null
              },
              {
                "name": "link",
                "type": null
              },
              {
                "name": "callback",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "getMessage",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "key",
                "type": null
              },
              {
                "name": "namespace",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "dialog/composite/SimpleLinkCard.js": [
      {
        "description": "",
        "displayName": "SimpleLinkCard",
        "methods": [
          {
            "name": "linkInvitation",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "linkModel",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "dismissMailer",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "submit",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      }
    ],
    "dialog/links/Field.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "toggleEditMode",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "changeLink",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "clearCopyMessage",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "attachClipboard",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "detachClipboard",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "openMailer",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "toggleQRCode",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "linkModel": {
            "type": {
              "name": "instanceOf",
              "value": "LinkModel"
            },
            "required": false,
            "description": ""
          },
          "editAllowed": {
            "type": {
              "name": "bool"
            },
            "required": false,
            "description": ""
          },
          "onChange": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "showMailer": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "dialog/links/LabelPanel.js": [
      {
        "description": "",
        "displayName": "LabelPanel",
        "methods": []
      }
    ],
    "dialog/links/Panel.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "toggleLink",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "updateTemporaryPassword",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "value",
                "type": null
              },
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "enableLinkWithPassword",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "linkModel": {
            "type": {
              "name": "instanceOf",
              "value": "LinkModel"
            },
            "required": false,
            "description": ""
          },
          "compositeModel": {
            "type": {
              "name": "instanceOf",
              "value": "CompositeModel"
            },
            "required": false,
            "description": ""
          },
          "pydio": {
            "type": {
              "name": "instanceOf",
              "value": "Pydio"
            },
            "required": false,
            "description": ""
          },
          "authorizations": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          },
          "showMailer": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "dialog/links/Permissions.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "changePermission",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "linkModel": {
            "type": {
              "name": "instanceOf",
              "value": "LinkModel"
            },
            "required": false,
            "description": ""
          },
          "style": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "dialog/links/PublicLinkTemplate.js": [
      {
        "description": "",
        "displayName": "PublicLinkTemplate",
        "methods": [
          {
            "name": "onDropDownChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "index",
                "type": null
              },
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "dialog/links/SecureOptions.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "updateDLExpirationField",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "updateDaysExpirationField",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "newValue",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "onDateChange",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              },
              {
                "name": "value",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "resetPassword",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "setUpdatingPassword",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "newValue",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "changePassword",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "updatePassword",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "newValue",
                "type": null
              },
              {
                "name": "oldValue",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "resetDownloads",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "resetExpiration",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "renderPasswordContainer",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "formatDate",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "dateObject",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "props": {
          "linkModel": {
            "type": {
              "name": "instanceOf",
              "value": "LinkModel"
            },
            "required": true,
            "description": ""
          },
          "style": {
            "type": {
              "name": "object"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "dialog/links/TargetedUsers.js": [
      {
        "description": "",
        "displayName": "TargetedUserLink",
        "methods": [
          {
            "name": "clearCopyMessage",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ]
      },
      {
        "description": "",
        "displayName": "TargetedUsers",
        "methods": [],
        "props": {
          "linkModel": {
            "type": {
              "name": "instanceOf",
              "value": "LinkModel"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "dialog/links/VisibilityPanel.js": [
      {
        "description": "",
        "methods": [
          {
            "name": "onSavePolicies",
            "docblock": "Update associated hidden users policies, otherwise\nthe public link visibility cannot be changed\n@param diffPolicies",
            "modifiers": [],
            "params": [
              {
                "name": "diffPolicies",
                "description": null,
                "type": null
              }
            ],
            "returns": null,
            "description": "Update associated hidden users policies, otherwise\nthe public link visibility cannot be changed"
          },
          {
            "name": "diffPolicies",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "policies",
                "type": null
              },
              {
                "name": "diffPolicies",
                "type": null
              },
              {
                "name": "resourceId",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ],
    "dialog/lists/ShareView.js": [
      {
        "description": "",
        "displayName": "ShareView",
        "methods": [
          {
            "name": "load",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          },
          {
            "name": "getLongestPath",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "node",
                "type": null
              }
            ],
            "returns": null
          },
          {
            "name": "goTo",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "appearsIn",
                "type": null
              }
            ],
            "returns": null
          }
        ],
        "childContext": {
          "messages": {
            "type": {
              "name": "object"
            },
            "required": false
          },
          "getMessage": {
            "type": {
              "name": "func"
            },
            "required": false
          },
          "isReadonly": {
            "type": {
              "name": "func"
            },
            "required": false
          }
        }
      },
      {
        "description": "",
        "methods": [
          {
            "name": "submit",
            "docblock": null,
            "modifiers": [],
            "params": [],
            "returns": null
          }
        ],
        "props": {
          "dialogTitle": {
            "defaultValue": {
              "value": "''",
              "computed": false
            },
            "required": false
          },
          "dialogSize": {
            "defaultValue": {
              "value": "'lg'",
              "computed": false
            },
            "required": false
          },
          "dialogPadding": {
            "defaultValue": {
              "value": "false",
              "computed": false
            },
            "required": false
          },
          "dialogIsModal": {
            "defaultValue": {
              "value": "false",
              "computed": false
            },
            "required": false
          },
          "dialogScrollBody": {
            "defaultValue": {
              "value": "false",
              "computed": false
            },
            "required": false
          }
        }
      }
    ],
    "dialog/main/ActionButton.js": [
      {
        "description": "",
        "displayName": "ActionButton",
        "methods": [],
        "props": {
          "callback": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "onTouchTap": {
            "type": {
              "name": "func"
            },
            "required": false,
            "description": ""
          },
          "mdiIcon": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          },
          "messageId": {
            "type": {
              "name": "string"
            },
            "required": false,
            "description": ""
          }
        }
      }
    ],
    "dialog/main/GenericCard.js": [
      {
        "description": "",
        "displayName": "GenericLine",
        "methods": []
      },
      {
        "description": "",
        "displayName": "GenericCard",
        "methods": []
      }
    ],
    "dialog/main/GenericEditor.js": [
      {
        "description": "",
        "displayName": "EditorTab",
        "methods": []
      },
      {
        "description": "",
        "displayName": "EditorTabContent",
        "methods": []
      },
      {
        "description": "",
        "displayName": "GenericEditor",
        "methods": []
      }
    ],
    "dialog/main/InfoPanel.js": [
      {
        "description": "",
        "displayName": "InfoPanel",
        "methods": [
          {
            "name": "openPopover",
            "docblock": null,
            "modifiers": [],
            "params": [
              {
                "name": "event",
                "type": null
              }
            ],
            "returns": null
          }
        ]
      }
    ]
  }
}