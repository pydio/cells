// Code generated by go-swagger; DO NOT EDIT.

package provisioning

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewAdminRemoveWorkspaceFeatureParams creates a new AdminRemoveWorkspaceFeatureParams object
// with the default values initialized.
func NewAdminRemoveWorkspaceFeatureParams() *AdminRemoveWorkspaceFeatureParams {
	var ()
	return &AdminRemoveWorkspaceFeatureParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewAdminRemoveWorkspaceFeatureParamsWithTimeout creates a new AdminRemoveWorkspaceFeatureParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewAdminRemoveWorkspaceFeatureParamsWithTimeout(timeout time.Duration) *AdminRemoveWorkspaceFeatureParams {
	var ()
	return &AdminRemoveWorkspaceFeatureParams{

		timeout: timeout,
	}
}

// NewAdminRemoveWorkspaceFeatureParamsWithContext creates a new AdminRemoveWorkspaceFeatureParams object
// with the default values initialized, and the ability to set a context for a request
func NewAdminRemoveWorkspaceFeatureParamsWithContext(ctx context.Context) *AdminRemoveWorkspaceFeatureParams {
	var ()
	return &AdminRemoveWorkspaceFeatureParams{

		Context: ctx,
	}
}

// NewAdminRemoveWorkspaceFeatureParamsWithHTTPClient creates a new AdminRemoveWorkspaceFeatureParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewAdminRemoveWorkspaceFeatureParamsWithHTTPClient(client *http.Client) *AdminRemoveWorkspaceFeatureParams {
	var ()
	return &AdminRemoveWorkspaceFeatureParams{
		HTTPClient: client,
	}
}

/*AdminRemoveWorkspaceFeatureParams contains all the parameters to send to the API endpoint
for the admin remove workspace feature operation typically these are written to a http.Request
*/
type AdminRemoveWorkspaceFeatureParams struct {

	/*MetaID
	  plugin id for meta

	*/
	MetaID string
	/*WorkspaceID
	  id or alias of this workspace

	*/
	WorkspaceID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the admin remove workspace feature params
func (o *AdminRemoveWorkspaceFeatureParams) WithTimeout(timeout time.Duration) *AdminRemoveWorkspaceFeatureParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the admin remove workspace feature params
func (o *AdminRemoveWorkspaceFeatureParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the admin remove workspace feature params
func (o *AdminRemoveWorkspaceFeatureParams) WithContext(ctx context.Context) *AdminRemoveWorkspaceFeatureParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the admin remove workspace feature params
func (o *AdminRemoveWorkspaceFeatureParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the admin remove workspace feature params
func (o *AdminRemoveWorkspaceFeatureParams) WithHTTPClient(client *http.Client) *AdminRemoveWorkspaceFeatureParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the admin remove workspace feature params
func (o *AdminRemoveWorkspaceFeatureParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithMetaID adds the metaID to the admin remove workspace feature params
func (o *AdminRemoveWorkspaceFeatureParams) WithMetaID(metaID string) *AdminRemoveWorkspaceFeatureParams {
	o.SetMetaID(metaID)
	return o
}

// SetMetaID adds the metaId to the admin remove workspace feature params
func (o *AdminRemoveWorkspaceFeatureParams) SetMetaID(metaID string) {
	o.MetaID = metaID
}

// WithWorkspaceID adds the workspaceID to the admin remove workspace feature params
func (o *AdminRemoveWorkspaceFeatureParams) WithWorkspaceID(workspaceID string) *AdminRemoveWorkspaceFeatureParams {
	o.SetWorkspaceID(workspaceID)
	return o
}

// SetWorkspaceID adds the workspaceId to the admin remove workspace feature params
func (o *AdminRemoveWorkspaceFeatureParams) SetWorkspaceID(workspaceID string) {
	o.WorkspaceID = workspaceID
}

// WriteToRequest writes these params to a swagger request
func (o *AdminRemoveWorkspaceFeatureParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param metaId
	if err := r.SetPathParam("metaId", o.MetaID); err != nil {
		return err
	}

	// path param workspaceId
	if err := r.SetPathParam("workspaceId", o.WorkspaceID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
