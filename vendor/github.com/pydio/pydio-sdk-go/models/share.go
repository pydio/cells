// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// Share share
// swagger:model Share
type Share struct {

	// a j x p a p p l i c a t i o n b a s e
	AJXPAPPLICATIONBASE string `json:"AJXP_APPLICATION_BASE,omitempty"`

	// a j x p t e m p l a t e n a m e
	AJXPTEMPLATENAME string `json:"AJXP_TEMPLATE_NAME,omitempty"`

	// d o w n l o a d d i s a b l e d
	DOWNLOADDISABLED bool `json:"DOWNLOAD_DISABLED,omitempty"`

	// d o w n l o a d l i m i t
	DOWNLOADLIMIT int64 `json:"DOWNLOAD_LIMIT,omitempty"`

	// e x p i r e t i m e
	EXPIRETIME int64 `json:"EXPIRE_TIME,omitempty"`

	// g r o u p s c o u n t
	GROUPSCOUNT int64 `json:"GROUPS_COUNT,omitempty"`

	// o w n e r ID
	OWNERID string `json:"OWNER_ID,omitempty"`

	// p r e l o g u s e r
	PRELOGUSER string `json:"PRELOG_USER,omitempty"`

	// p r e s e t l o g i n
	PRESETLOGIN string `json:"PRESET_LOGIN,omitempty"`

	// r e p o s i t o r y
	REPOSITORY string `json:"REPOSITORY,omitempty"`

	// s h a r e t y p e
	SHARETYPE string `json:"SHARE_TYPE,omitempty"`

	// u s e r s c o u n t
	USERSCOUNT int64 `json:"USERS_COUNT,omitempty"`

	// metadata
	Metadata *ShareMetadata `json:"metadata,omitempty"`
}

// Validate validates this share
func (m *Share) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMetadata(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Share) validateMetadata(formats strfmt.Registry) error {

	if swag.IsZero(m.Metadata) { // not required
		return nil
	}

	if m.Metadata != nil {
		if err := m.Metadata.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("metadata")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Share) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Share) UnmarshalBinary(b []byte) error {
	var res Share
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
