// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: install.proto

package install

import github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *InstallConfig) Validate() error {
	for _, item := range this.CheckResults {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("CheckResults", err)
			}
		}
	}
	if this.ProxyConfig != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ProxyConfig); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ProxyConfig", err)
		}
	}
	return nil
}
func (this *ProxyConfig) Validate() error {
	if oneOfNester, ok := this.GetTLSConfig().(*ProxyConfig_SelfSigned); ok {
		if oneOfNester.SelfSigned != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.SelfSigned); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("SelfSigned", err)
			}
		}
	}
	if oneOfNester, ok := this.GetTLSConfig().(*ProxyConfig_LetsEncrypt); ok {
		if oneOfNester.LetsEncrypt != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.LetsEncrypt); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("LetsEncrypt", err)
			}
		}
	}
	if oneOfNester, ok := this.GetTLSConfig().(*ProxyConfig_Certificate); ok {
		if oneOfNester.Certificate != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Certificate); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Certificate", err)
			}
		}
	}
	return nil
}
func (this *TLSSelfSigned) Validate() error {
	return nil
}
func (this *TLSLetsEncrypt) Validate() error {
	return nil
}
func (this *TLSCertificate) Validate() error {
	return nil
}
func (this *CheckResult) Validate() error {
	return nil
}
func (this *PerformCheckRequest) Validate() error {
	if this.Config != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Config); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Config", err)
		}
	}
	return nil
}
func (this *PerformCheckResponse) Validate() error {
	if this.Result != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Result); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Result", err)
		}
	}
	return nil
}
func (this *GetDefaultsRequest) Validate() error {
	return nil
}
func (this *GetDefaultsResponse) Validate() error {
	if this.Config != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Config); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Config", err)
		}
	}
	return nil
}
func (this *GetAgreementRequest) Validate() error {
	return nil
}
func (this *GetAgreementResponse) Validate() error {
	return nil
}
func (this *InstallRequest) Validate() error {
	if this.Config != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Config); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Config", err)
		}
	}
	return nil
}
func (this *InstallResponse) Validate() error {
	return nil
}
