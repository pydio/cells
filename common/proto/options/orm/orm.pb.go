// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: orm.proto

package orm

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ORMMessagePolicy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enabled       bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Options       []*ORMDialectOptions   `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ORMMessagePolicy) Reset() {
	*x = ORMMessagePolicy{}
	mi := &file_orm_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ORMMessagePolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ORMMessagePolicy) ProtoMessage() {}

func (x *ORMMessagePolicy) ProtoReflect() protoreflect.Message {
	mi := &file_orm_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ORMMessagePolicy.ProtoReflect.Descriptor instead.
func (*ORMMessagePolicy) Descriptor() ([]byte, []int) {
	return file_orm_proto_rawDescGZIP(), []int{0}
}

func (x *ORMMessagePolicy) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ORMMessagePolicy) GetOptions() []*ORMDialectOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type ORMDialectOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ORMDialectOptions) Reset() {
	*x = ORMDialectOptions{}
	mi := &file_orm_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ORMDialectOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ORMDialectOptions) ProtoMessage() {}

func (x *ORMDialectOptions) ProtoReflect() protoreflect.Message {
	mi := &file_orm_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ORMDialectOptions.ProtoReflect.Descriptor instead.
func (*ORMDialectOptions) Descriptor() ([]byte, []int) {
	return file_orm_proto_rawDescGZIP(), []int{1}
}

func (x *ORMDialectOptions) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ORMDialectOptions) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ORMFieldOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Tag:
	//
	//	*ORMFieldOptions_Gorm
	Tag           isORMFieldOptions_Tag `protobuf_oneof:"tag"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ORMFieldOptions) Reset() {
	*x = ORMFieldOptions{}
	mi := &file_orm_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ORMFieldOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ORMFieldOptions) ProtoMessage() {}

func (x *ORMFieldOptions) ProtoReflect() protoreflect.Message {
	mi := &file_orm_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ORMFieldOptions.ProtoReflect.Descriptor instead.
func (*ORMFieldOptions) Descriptor() ([]byte, []int) {
	return file_orm_proto_rawDescGZIP(), []int{2}
}

func (x *ORMFieldOptions) GetTag() isORMFieldOptions_Tag {
	if x != nil {
		return x.Tag
	}
	return nil
}

func (x *ORMFieldOptions) GetGorm() *GormTag {
	if x != nil {
		if x, ok := x.Tag.(*ORMFieldOptions_Gorm); ok {
			return x.Gorm
		}
	}
	return nil
}

type isORMFieldOptions_Tag interface {
	isORMFieldOptions_Tag()
}

type ORMFieldOptions_Gorm struct {
	Gorm *GormTag `protobuf:"bytes,1,opt,name=gorm,proto3,oneof"`
}

func (*ORMFieldOptions_Gorm) isORMFieldOptions_Tag() {}

type GormTag struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Column                 string                 `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
	Type                   string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Serializer             string                 `protobuf:"bytes,3,opt,name=serializer,proto3" json:"serializer,omitempty"`
	Size                   int32                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	PrimaryKey             bool                   `protobuf:"varint,5,opt,name=primaryKey,proto3" json:"primaryKey,omitempty"`
	Unique                 bool                   `protobuf:"varint,6,opt,name=unique,proto3" json:"unique,omitempty"`
	Default                string                 `protobuf:"bytes,7,opt,name=default,proto3" json:"default,omitempty"`
	Precision              int32                  `protobuf:"varint,8,opt,name=precision,proto3" json:"precision,omitempty"`
	Scale                  int32                  `protobuf:"varint,9,opt,name=scale,proto3" json:"scale,omitempty"`
	NotNull                bool                   `protobuf:"varint,10,opt,name=notNull,proto3" json:"notNull,omitempty"`
	AutoIncrement          bool                   `protobuf:"varint,11,opt,name=autoIncrement,proto3" json:"autoIncrement,omitempty"`
	AutoIncrementIncrement int32                  `protobuf:"varint,12,opt,name=autoIncrementIncrement,proto3" json:"autoIncrementIncrement,omitempty"`
	Embedded               bool                   `protobuf:"varint,13,opt,name=embedded,proto3" json:"embedded,omitempty"`
	EmbeddedPrefix         string                 `protobuf:"bytes,14,opt,name=embeddedPrefix,proto3" json:"embeddedPrefix,omitempty"`
	AutoCreateTime         int64                  `protobuf:"varint,15,opt,name=autoCreateTime,proto3" json:"autoCreateTime,omitempty"`
	AutoUpdateTime         int64                  `protobuf:"varint,16,opt,name=autoUpdateTime,proto3" json:"autoUpdateTime,omitempty"`
	Index                  string                 `protobuf:"bytes,17,opt,name=index,proto3" json:"index,omitempty"`
	UniqueIndex            string                 `protobuf:"bytes,18,opt,name=uniqueIndex,proto3" json:"uniqueIndex,omitempty"`
	Check                  string                 `protobuf:"bytes,19,opt,name=check,proto3" json:"check,omitempty"`
	WritePermission        string                 `protobuf:"bytes,20,opt,name=writePermission,proto3" json:"writePermission,omitempty"`
	ReadPermission         string                 `protobuf:"bytes,21,opt,name=readPermission,proto3" json:"readPermission,omitempty"`
	Ignore                 string                 `protobuf:"bytes,22,opt,name=ignore,proto3" json:"ignore,omitempty"`
	Comment                string                 `protobuf:"bytes,23,opt,name=comment,proto3" json:"comment,omitempty"`
	// mysql specific
	Collate string `protobuf:"bytes,32,opt,name=collate,proto3" json:"collate,omitempty"`
	// Association tags
	ForeignKey       string `protobuf:"bytes,24,opt,name=foreignKey,proto3" json:"foreignKey,omitempty"`
	References       string `protobuf:"bytes,25,opt,name=references,proto3" json:"references,omitempty"`
	Polymorphic      string `protobuf:"bytes,26,opt,name=polymorphic,proto3" json:"polymorphic,omitempty"`
	PolymorphicValue string `protobuf:"bytes,27,opt,name=polymorphicValue,proto3" json:"polymorphicValue,omitempty"`
	Many2Many        string `protobuf:"bytes,28,opt,name=many2many,proto3" json:"many2many,omitempty"`
	JoinForeignKey   string `protobuf:"bytes,29,opt,name=joinForeignKey,proto3" json:"joinForeignKey,omitempty"`
	JoinReferences   string `protobuf:"bytes,30,opt,name=joinReferences,proto3" json:"joinReferences,omitempty"`
	Constraint       string `protobuf:"bytes,31,opt,name=constraint,proto3" json:"constraint,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GormTag) Reset() {
	*x = GormTag{}
	mi := &file_orm_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GormTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GormTag) ProtoMessage() {}

func (x *GormTag) ProtoReflect() protoreflect.Message {
	mi := &file_orm_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GormTag.ProtoReflect.Descriptor instead.
func (*GormTag) Descriptor() ([]byte, []int) {
	return file_orm_proto_rawDescGZIP(), []int{3}
}

func (x *GormTag) GetColumn() string {
	if x != nil {
		return x.Column
	}
	return ""
}

func (x *GormTag) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GormTag) GetSerializer() string {
	if x != nil {
		return x.Serializer
	}
	return ""
}

func (x *GormTag) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GormTag) GetPrimaryKey() bool {
	if x != nil {
		return x.PrimaryKey
	}
	return false
}

func (x *GormTag) GetUnique() bool {
	if x != nil {
		return x.Unique
	}
	return false
}

func (x *GormTag) GetDefault() string {
	if x != nil {
		return x.Default
	}
	return ""
}

func (x *GormTag) GetPrecision() int32 {
	if x != nil {
		return x.Precision
	}
	return 0
}

func (x *GormTag) GetScale() int32 {
	if x != nil {
		return x.Scale
	}
	return 0
}

func (x *GormTag) GetNotNull() bool {
	if x != nil {
		return x.NotNull
	}
	return false
}

func (x *GormTag) GetAutoIncrement() bool {
	if x != nil {
		return x.AutoIncrement
	}
	return false
}

func (x *GormTag) GetAutoIncrementIncrement() int32 {
	if x != nil {
		return x.AutoIncrementIncrement
	}
	return 0
}

func (x *GormTag) GetEmbedded() bool {
	if x != nil {
		return x.Embedded
	}
	return false
}

func (x *GormTag) GetEmbeddedPrefix() string {
	if x != nil {
		return x.EmbeddedPrefix
	}
	return ""
}

func (x *GormTag) GetAutoCreateTime() int64 {
	if x != nil {
		return x.AutoCreateTime
	}
	return 0
}

func (x *GormTag) GetAutoUpdateTime() int64 {
	if x != nil {
		return x.AutoUpdateTime
	}
	return 0
}

func (x *GormTag) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

func (x *GormTag) GetUniqueIndex() string {
	if x != nil {
		return x.UniqueIndex
	}
	return ""
}

func (x *GormTag) GetCheck() string {
	if x != nil {
		return x.Check
	}
	return ""
}

func (x *GormTag) GetWritePermission() string {
	if x != nil {
		return x.WritePermission
	}
	return ""
}

func (x *GormTag) GetReadPermission() string {
	if x != nil {
		return x.ReadPermission
	}
	return ""
}

func (x *GormTag) GetIgnore() string {
	if x != nil {
		return x.Ignore
	}
	return ""
}

func (x *GormTag) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *GormTag) GetCollate() string {
	if x != nil {
		return x.Collate
	}
	return ""
}

func (x *GormTag) GetForeignKey() string {
	if x != nil {
		return x.ForeignKey
	}
	return ""
}

func (x *GormTag) GetReferences() string {
	if x != nil {
		return x.References
	}
	return ""
}

func (x *GormTag) GetPolymorphic() string {
	if x != nil {
		return x.Polymorphic
	}
	return ""
}

func (x *GormTag) GetPolymorphicValue() string {
	if x != nil {
		return x.PolymorphicValue
	}
	return ""
}

func (x *GormTag) GetMany2Many() string {
	if x != nil {
		return x.Many2Many
	}
	return ""
}

func (x *GormTag) GetJoinForeignKey() string {
	if x != nil {
		return x.JoinForeignKey
	}
	return ""
}

func (x *GormTag) GetJoinReferences() string {
	if x != nil {
		return x.JoinReferences
	}
	return ""
}

func (x *GormTag) GetConstraint() string {
	if x != nil {
		return x.Constraint
	}
	return ""
}

var file_orm_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*ORMMessagePolicy)(nil),
		Field:         52119,
		Name:          "orm.ormPolicy",
		Tag:           "bytes,52119,opt,name=ormPolicy",
		Filename:      "orm.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*ORMFieldOptions)(nil),
		Field:         52119,
		Name:          "orm.orm",
		Tag:           "bytes,52119,opt,name=orm",
		Filename:      "orm.proto",
	},
}

// Extension fields to descriptorpb.MessageOptions.
var (
	// ormable will cause orm code to be generated for this message/object
	//
	// optional orm.ORMMessagePolicy ormPolicy = 52119;
	E_OrmPolicy = &file_orm_proto_extTypes[0]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional orm.ORMFieldOptions orm = 52119;
	E_Orm = &file_orm_proto_extTypes[1]
)

var File_orm_proto protoreflect.FileDescriptor

var file_orm_proto_rawDesc = string([]byte{
	0x0a, 0x09, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x6f, 0x72, 0x6d,
	0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x5e, 0x0a, 0x10, 0x4f, 0x52, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x30, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x72, 0x6d, 0x2e, 0x4f, 0x52, 0x4d, 0x44, 0x69, 0x61, 0x6c, 0x65,
	0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x3d, 0x0a, 0x11, 0x4f, 0x52, 0x4d, 0x44, 0x69, 0x61, 0x6c, 0x65, 0x63, 0x74,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x3c, 0x0a, 0x0f, 0x4f, 0x52, 0x4d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x04, 0x67, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x6f, 0x72, 0x6d, 0x54, 0x61, 0x67,
	0x48, 0x00, 0x52, 0x04, 0x67, 0x6f, 0x72, 0x6d, 0x42, 0x05, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x22,
	0x83, 0x08, 0x0a, 0x07, 0x47, 0x6f, 0x72, 0x6d, 0x54, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x63, 0x61, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x61, 0x6c,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x74, 0x4e, 0x75, 0x6c, 0x6c, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x6e, 0x6f, 0x74, 0x4e, 0x75, 0x6c, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x61,
	0x75, 0x74, 0x6f, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x6f, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x36, 0x0a, 0x16, 0x61, 0x75, 0x74, 0x6f, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x16, 0x61, 0x75, 0x74, 0x6f, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6d, 0x62,
	0x65, 0x64, 0x64, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x65, 0x6d, 0x62,
	0x65, 0x64, 0x64, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65,
	0x64, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65,
	0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x26, 0x0a,
	0x0e, 0x61, 0x75, 0x74, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x6f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x61,
	0x75, 0x74, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x28, 0x0a, 0x0f, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72,
	0x65, 0x61, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69,
	0x67, 0x6e, 0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x72,
	0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66,
	0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6f, 0x6c,
	0x79, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x69, 0x63, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x6f, 0x6c, 0x79, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x69, 0x63, 0x12, 0x2a, 0x0a, 0x10, 0x70,
	0x6f, 0x6c, 0x79, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x6f, 0x6c, 0x79, 0x6d, 0x6f, 0x72, 0x70, 0x68,
	0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x79, 0x32,
	0x6d, 0x61, 0x6e, 0x79, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x79,
	0x32, 0x6d, 0x61, 0x6e, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x6a, 0x6f, 0x69, 0x6e, 0x46, 0x6f, 0x72,
	0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6a,
	0x6f, 0x69, 0x6e, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x26, 0x0a,
	0x0e, 0x6a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x74, 0x3a, 0x56, 0x0a, 0x09, 0x6f, 0x72, 0x6d, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x97, 0x97, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x72,
	0x6d, 0x2e, 0x4f, 0x52, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x09, 0x6f, 0x72, 0x6d, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x3a, 0x47, 0x0a,
	0x03, 0x6f, 0x72, 0x6d, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x97, 0x97, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x72,
	0x6d, 0x2e, 0x4f, 0x52, 0x4d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x03, 0x6f, 0x72, 0x6d, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x79, 0x64, 0x69, 0x6f, 0x2f, 0x63, 0x65, 0x6c, 0x6c, 0x73,
	0x2f, 0x76, 0x35, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6f, 0x72, 0x6d, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_orm_proto_rawDescOnce sync.Once
	file_orm_proto_rawDescData []byte
)

func file_orm_proto_rawDescGZIP() []byte {
	file_orm_proto_rawDescOnce.Do(func() {
		file_orm_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_orm_proto_rawDesc), len(file_orm_proto_rawDesc)))
	})
	return file_orm_proto_rawDescData
}

var file_orm_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_orm_proto_goTypes = []any{
	(*ORMMessagePolicy)(nil),            // 0: orm.ORMMessagePolicy
	(*ORMDialectOptions)(nil),           // 1: orm.ORMDialectOptions
	(*ORMFieldOptions)(nil),             // 2: orm.ORMFieldOptions
	(*GormTag)(nil),                     // 3: orm.GormTag
	(*descriptorpb.MessageOptions)(nil), // 4: google.protobuf.MessageOptions
	(*descriptorpb.FieldOptions)(nil),   // 5: google.protobuf.FieldOptions
}
var file_orm_proto_depIdxs = []int32{
	1, // 0: orm.ORMMessagePolicy.options:type_name -> orm.ORMDialectOptions
	3, // 1: orm.ORMFieldOptions.gorm:type_name -> orm.GormTag
	4, // 2: orm.ormPolicy:extendee -> google.protobuf.MessageOptions
	5, // 3: orm.orm:extendee -> google.protobuf.FieldOptions
	0, // 4: orm.ormPolicy:type_name -> orm.ORMMessagePolicy
	2, // 5: orm.orm:type_name -> orm.ORMFieldOptions
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	4, // [4:6] is the sub-list for extension type_name
	2, // [2:4] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_orm_proto_init() }
func file_orm_proto_init() {
	if File_orm_proto != nil {
		return
	}
	file_orm_proto_msgTypes[2].OneofWrappers = []any{
		(*ORMFieldOptions_Gorm)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_orm_proto_rawDesc), len(file_orm_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 2,
			NumServices:   0,
		},
		GoTypes:           file_orm_proto_goTypes,
		DependencyIndexes: file_orm_proto_depIdxs,
		MessageInfos:      file_orm_proto_msgTypes,
		ExtensionInfos:    file_orm_proto_extTypes,
	}.Build()
	File_orm_proto = out.File
	file_orm_proto_goTypes = nil
	file_orm_proto_depIdxs = nil
}
